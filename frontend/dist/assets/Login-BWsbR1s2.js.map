{"version":3,"file":"Login-BWsbR1s2.js","sources":["../../src/pages/Auth/Login.tsx"],"sourcesContent":["// src/pages/auth/Login.tsx - Version moderne et optimisée\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { useAuth } from '@/hooks/use-auth';\r\nimport { Loader2, Mail, Lock, ArrowRight, Eye, EyeOff, AlertCircle, Shield, RefreshCw } from 'lucide-react';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [emailNotVerified, setEmailNotVerified] = useState<{\r\n    email: string;\r\n    canResend: boolean;\r\n    lastVerificationSent?: string;\r\n  } | null>(null);\r\n  const [resendingVerification, setResendingVerification] = useState(false);\r\n  \r\n  const { login, isAuthenticated, resendEmailVerification } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Redirect if already authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      const from = location.state?.from?.pathname || '/dashboard';\r\n      navigate(from, { replace: true });\r\n    }\r\n  }, [isAuthenticated, navigate, location]);\r\n\r\n  // Get redirect message from location state\r\n  const redirectMessage = location.state?.message;\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!formData.email) {\r\n      newErrors.email = 'L\\'email est requis';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Veuillez entrer une adresse email valide';\r\n    }\r\n    \r\n    if (!formData.password) {\r\n      newErrors.password = 'Le mot de passe est requis';\r\n    } else if (formData.password.length < 6) {\r\n      newErrors.password = 'Le mot de passe doit contenir au moins 6 caractères';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n    \r\n    setLoading(true);\r\n    setErrors({});\r\n    setEmailNotVerified(null);\r\n\r\n    try {\r\n      await login(formData.email, formData.password, rememberMe);\r\n      const from = location.state?.from?.pathname || '/dashboard';\r\n      navigate(from, { replace: true });\r\n    } catch (error: any) {\r\n      // Handle EMAIL_NOT_VERIFIED error specifically\r\n      if (error.message === 'EMAIL_NOT_VERIFIED' || error.message.includes('Email non vérifié')) {\r\n        setEmailNotVerified({\r\n          email: formData.email,\r\n          canResend: true, // Default to true, can be enhanced with backend response\r\n          lastVerificationSent: undefined\r\n        });\r\n        setErrors({ \r\n          general: 'Votre email n\\'est pas encore vérifié. Vérifiez votre boîte mail ou demandez un nouveau lien de vérification.' \r\n        });\r\n      } else if (error.message.includes('Invalid credentials') || error.message.includes('Identifiants invalides')) {\r\n        setErrors({ general: 'Email ou mot de passe invalide. Veuillez réessayer.' });\r\n      } else if (error.message.includes('Account locked') || error.message.includes('Compte verrouillé')) {\r\n        setErrors({ general: 'Votre compte a été temporairement verrouillé. Veuillez réessayer plus tard.' });\r\n      } else if (error.message.includes('Account suspended') || error.message.includes('Compte suspendu')) {\r\n        setErrors({ general: 'Votre compte a été suspendu. Contactez le support pour plus d\\'informations.' });\r\n      } else {\r\n        setErrors({ general: error.message || 'Échec de la connexion. Veuillez réessayer.' });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear field-specific error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: '' }));\r\n    }\r\n    \r\n    // Clear email verification error when user changes email\r\n    if (name === 'email' && emailNotVerified) {\r\n      setEmailNotVerified(null);\r\n    }\r\n  };\r\n\r\n  const handleResendVerification = async () => {\r\n    if (!emailNotVerified?.email) return;\r\n    \r\n    setResendingVerification(true);\r\n    \r\n    try {\r\n      await resendEmailVerification(emailNotVerified.email);\r\n      setErrors({ \r\n        general: 'Un nouveau lien de vérification a été envoyé à votre adresse email. Vérifiez votre boîte mail.' \r\n      });\r\n      setEmailNotVerified(prev => prev ? { ...prev, lastVerificationSent: new Date().toISOString() } : null);\r\n    } catch (error: any) {\r\n      if (error.message.includes('rate limit') || error.message.includes('limite')) {\r\n        setErrors({ \r\n          general: 'Trop de demandes de vérification. Veuillez patienter avant de réessayer.' \r\n        });\r\n      } else {\r\n        setErrors({ \r\n          general: error.message || 'Échec de l\\'envoi de l\\'email de vérification. Veuillez réessayer.' \r\n        });\r\n      }\r\n    } finally {\r\n      setResendingVerification(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4 sm:p-6 lg:p-8\">\r\n      <div className=\"w-full max-w-md\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"flex justify-center mb-6\">\r\n            <div className=\"w-12 h-12 bg-gray-900 rounded-lg flex items-center justify-center\">\r\n              <Shield className=\"text-white w-6 h-6\" />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Bon retour</h1>\r\n          <p className=\"text-gray-600 mt-2\">Connectez-vous à votre compte AttendanceX</p>\r\n        </div>\r\n\r\n        {/* Redirect Message */}\r\n        {redirectMessage && (\r\n          <Alert className=\"mb-6\">\r\n            <AlertCircle className=\"h-4 w-4\" />\r\n            <AlertDescription>{redirectMessage}</AlertDescription>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Login Form */}\r\n        <Card className=\"bg-white border-gray-200 shadow-sm\">\r\n          <CardHeader className=\"space-y-1 pb-6\">\r\n            <CardTitle className=\"text-xl text-center text-gray-900\">Connexion</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            {/* General Error */}\r\n            {errors.general && (\r\n              <Alert className={`mb-4 ${emailNotVerified ? 'border-orange-200 bg-orange-50' : ''}`} variant={emailNotVerified ? \"default\" : \"destructive\"}>\r\n                <AlertCircle className={`h-4 w-4 ${emailNotVerified ? 'text-orange-600' : ''}`} />\r\n                <AlertDescription className={emailNotVerified ? 'text-orange-800' : ''}>\r\n                  {errors.general}\r\n                  {emailNotVerified && emailNotVerified.canResend && (\r\n                    <div className=\"mt-3 flex flex-col sm:flex-row gap-2\">\r\n                      <Button\r\n                        type=\"button\"\r\n                        onClick={handleResendVerification}\r\n                        disabled={resendingVerification}\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        className=\"border-orange-300 text-orange-700 hover:bg-orange-100 hover:border-orange-400\"\r\n                      >\r\n                        {resendingVerification ? (\r\n                          <>\r\n                            <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                            Envoi en cours...\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                            Renvoyer l'email de vérification\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                      {emailNotVerified.lastVerificationSent && (\r\n                        <span className=\"text-sm text-orange-600 self-center\">\r\n                          Dernier envoi: {new Date(emailNotVerified.lastVerificationSent).toLocaleTimeString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </AlertDescription>\r\n              </Alert>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n              <div className=\"space-y-4\">\r\n                {/* Email Field */}\r\n                <div>\r\n                  <Label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                    Adresse email\r\n                  </Label>\r\n                  <div className=\"relative\">\r\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                    <Input\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      autoComplete=\"email\"\r\n                      required\r\n                      value={formData.email}\r\n                      onChange={handleChange}\r\n                      className={`pl-10 w-full ${errors.email ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                      placeholder=\"Entrez votre email\"\r\n                    />\r\n                  </div>\r\n                  {errors.email && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Password Field */}\r\n                <div>\r\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                    Mot de passe\r\n                  </Label>\r\n                  <div className=\"relative\">\r\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                    <Input\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      autoComplete=\"current-password\"\r\n                      required\r\n                      value={formData.password}\r\n                      onChange={handleChange}\r\n                      className={`pl-10 pr-10 w-full ${errors.password ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                      placeholder=\"Entrez votre mot de passe\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 z-10\"\r\n                    >\r\n                      {showPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\r\n                    </button>\r\n                  </div>\r\n                  {errors.password && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Remember me & Forgot password */}\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox\r\n                    id=\"remember-me\"\r\n                    checked={rememberMe}\r\n                    onCheckedChange={setRememberMe}\r\n                  />\r\n                  <Label \r\n                    htmlFor=\"remember-me\" \r\n                    className=\"text-sm text-gray-600 cursor-pointer\"\r\n                  >\r\n                    Se souvenir de moi\r\n                  </Label>\r\n                </div>\r\n\r\n                <Link\r\n                  to=\"/forgot-password\"\r\n                  className=\"text-sm text-gray-700 hover:text-gray-900 hover:underline font-medium\"\r\n                >\r\n                  Mot de passe oublié ?\r\n                </Link>\r\n              </div>\r\n\r\n              {/* Submit Button */}\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={loading || resendingVerification}\r\n                className=\"w-full bg-gray-900 text-white hover:bg-gray-800 font-medium h-12\"\r\n              >\r\n                {loading ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin mr-2\" />\r\n                ) : (\r\n                  <ArrowRight className=\"w-4 h-4 mr-2\" />\r\n                )}\r\n                {loading ? 'Connexion en cours...' : 'Se connecter'}\r\n              </Button>\r\n\r\n              {/* Email Verification Help */}\r\n              {emailNotVerified && (\r\n                <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n                  <div className=\"flex items-start\">\r\n                    <Mail className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3 flex-shrink-0\" />\r\n                    <div className=\"text-sm text-blue-800\">\r\n                      <p className=\"font-medium mb-1\">Vérification d'email requise</p>\r\n                      <p className=\"mb-2\">\r\n                        Pour des raisons de sécurité, vous devez vérifier votre adresse email avant de pouvoir vous connecter.\r\n                      </p>\r\n                      <ul className=\"list-disc list-inside space-y-1 text-blue-700\">\r\n                        <li>Vérifiez votre boîte mail (y compris les spams)</li>\r\n                        <li>Cliquez sur le lien de vérification dans l'email</li>\r\n                        <li>Revenez ici pour vous connecter</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </form>\r\n\r\n            {/* Divider */}\r\n            <div className=\"mt-6\">\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <div className=\"w-full border-t border-gray-200\" />\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                  <span className=\"px-2 bg-white text-gray-500\">Nouveau sur AttendanceX ?</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-6 text-center\">\r\n                <Link\r\n                  to=\"/register\"\r\n                  className=\"text-gray-700 hover:text-gray-900 font-medium hover:underline\"\r\n                >\r\n                  Créer un compte\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Footer */}\r\n        <div className=\"mt-8 text-center\">\r\n          <p className=\"text-sm text-gray-500\">\r\n            En vous connectant, vous acceptez nos{' '}\r\n            <Link to=\"/terms\" className=\"text-gray-700 hover:text-gray-900 hover:underline\">\r\n              Conditions d'utilisation\r\n            </Link>\r\n            {' '}et notre{' '}\r\n            <Link to=\"/privacy\" className=\"text-gray-700 hover:text-gray-900 hover:underline\">\r\n              Politique de confidentialité\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"names":["Login","formData","setFormData","useState","loading","setLoading","rememberMe","setRememberMe","showPassword","setShowPassword","errors","setErrors","emailNotVerified","setEmailNotVerified","resendingVerification","setResendingVerification","login","isAuthenticated","resendEmailVerification","useAuth","navigate","useNavigate","location","useLocation","useEffect","from","_b","_a","redirectMessage","validateForm","newErrors","handleSubmit","e","error","handleChange","name","value","prev","handleResendVerification","jsxs","jsx","Shield","Alert","AlertCircle","AlertDescription","Card","CardHeader","CardTitle","CardContent","Button","Fragment","Loader2","RefreshCw","Label","Mail","Input","Lock","EyeOff","Eye","Checkbox","Link","ArrowRight"],"mappings":"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"}