{"version":3,"file":"Register-C-D1udFi.js","sources":["../../src/components/auth/RegistrationSuccess.tsx","../../src/pages/Auth/Register.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { useAuth } from '@/hooks/use-auth';\r\nimport { \r\n  Mail, \r\n  CheckCircle, \r\n  AlertCircle, \r\n  RefreshCw, \r\n  ArrowRight,\r\n  Clock,\r\n  Shield\r\n} from 'lucide-react';\r\n\r\ninterface RegistrationSuccessProps {\r\n  registrationData: {\r\n    success: boolean;\r\n    message: string;\r\n    data: {\r\n      email: string;\r\n      verificationSent: boolean;\r\n      expiresIn?: string;\r\n      canResend: boolean;\r\n      actionRequired: boolean;\r\n      nextStep: string;\r\n    };\r\n    warning?: string;\r\n  };\r\n}\r\n\r\nconst RegistrationSuccess = ({ registrationData }: RegistrationSuccessProps) => {\r\n  const [resending, setResending] = useState(false);\r\n  const [resendSuccess, setResendSuccess] = useState(false);\r\n  const { resendEmailVerification } = useAuth();\r\n\r\n  const handleResendVerification = async () => {\r\n    try {\r\n      setResending(true);\r\n      await resendEmailVerification(registrationData.data.email);\r\n      setResendSuccess(true);\r\n      setTimeout(() => setResendSuccess(false), 5000);\r\n    } catch (error) {\r\n      // Error is already handled by the hook with toast\r\n    } finally {\r\n      setResending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"flex justify-center mb-6\">\r\n            <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\r\n              {registrationData.data.verificationSent ? (\r\n                <Mail className=\"text-green-600 w-6 h-6\" />\r\n              ) : (\r\n                <AlertCircle className=\"text-yellow-600 w-6 h-6\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">\r\n            {registrationData.data.verificationSent ? 'Check your email' : 'Account created'}\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-2\">\r\n            {registrationData.data.verificationSent \r\n              ? 'We sent a verification link to your email'\r\n              : 'There was an issue sending the verification email'\r\n            }\r\n          </p>\r\n        </div>\r\n\r\n        {/* Success Card */}\r\n        <Card className=\"bg-white border-gray-200 shadow-sm\">\r\n          <CardHeader className=\"space-y-1 pb-6\">\r\n            <CardTitle className=\"text-xl text-center text-gray-900\">\r\n              Registration Complete\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            {/* Success Message */}\r\n            <Alert className={registrationData.data.verificationSent ? \"border-green-200 bg-green-50\" : \"border-yellow-200 bg-yellow-50\"}>\r\n              {registrationData.data.verificationSent ? (\r\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n              ) : (\r\n                <AlertCircle className=\"h-4 w-4 text-yellow-600\" />\r\n              )}\r\n              <AlertDescription className=\"text-gray-700\">\r\n                {registrationData.message}\r\n              </AlertDescription>\r\n            </Alert>\r\n\r\n            {/* Warning if email sending failed */}\r\n            {registrationData.warning && (\r\n              <Alert variant=\"destructive\" className=\"border-orange-200 bg-orange-50\">\r\n                <AlertCircle className=\"h-4 w-4 text-orange-600\" />\r\n                <AlertDescription className=\"text-orange-700\">\r\n                  {registrationData.warning}\r\n                </AlertDescription>\r\n              </Alert>\r\n            )}\r\n\r\n            {/* Email Information */}\r\n            <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <Mail className=\"w-5 h-5 text-gray-400\" />\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-900\">Email sent to:</p>\r\n                  <p className=\"text-sm text-gray-600\">{registrationData.data.email}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              {registrationData.data.expiresIn && (\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <Clock className=\"w-5 h-5 text-gray-400\" />\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-900\">Link expires in:</p>\r\n                    <p className=\"text-sm text-gray-600\">{registrationData.data.expiresIn}</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Next Steps */}\r\n            <div className=\"space-y-4\">\r\n              <h3 className=\"text-sm font-medium text-gray-900\">Next steps:</h3>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <div className=\"w-6 h-6 bg-gray-900 text-white rounded-full flex items-center justify-center text-xs font-medium mt-0.5\">\r\n                    1\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    Check your email inbox (and spam folder)\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <div className=\"w-6 h-6 bg-gray-900 text-white rounded-full flex items-center justify-center text-xs font-medium mt-0.5\">\r\n                    2\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    Click the verification link in the email\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <div className=\"w-6 h-6 bg-gray-900 text-white rounded-full flex items-center justify-center text-xs font-medium mt-0.5\">\r\n                    3\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    Return here to sign in to your account\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Resend Success Message */}\r\n            {resendSuccess && (\r\n              <Alert className=\"border-green-200 bg-green-50\">\r\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n                <AlertDescription className=\"text-green-700\">\r\n                  Verification email sent successfully! Check your inbox.\r\n                </AlertDescription>\r\n              </Alert>\r\n            )}\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"space-y-3\">\r\n              {registrationData.data.canResend && (\r\n                <Button\r\n                  onClick={handleResendVerification}\r\n                  disabled={resending}\r\n                  variant=\"outline\"\r\n                  className=\"w-full\"\r\n                >\r\n                  {resending ? (\r\n                    <RefreshCw className=\"w-4 h-4 animate-spin mr-2\" />\r\n                  ) : (\r\n                    <Mail className=\"w-4 h-4 mr-2\" />\r\n                  )}\r\n                  {resending ? 'Sending...' : 'Resend verification email'}\r\n                </Button>\r\n              )}\r\n              \r\n              <Button\r\n                asChild\r\n                className=\"w-full bg-gray-900 text-white hover:bg-gray-800\"\r\n              >\r\n                <Link to=\"/login\">\r\n                  <ArrowRight className=\"w-4 h-4 mr-2\" />\r\n                  Continue to sign in\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Help Text */}\r\n            <div className=\"text-center pt-4 border-t border-gray-200\">\r\n              <p className=\"text-sm text-gray-500\">\r\n                Didn't receive the email?{' '}\r\n                <button\r\n                  onClick={handleResendVerification}\r\n                  disabled={resending || !registrationData.data.canResend}\r\n                  className=\"text-gray-900 hover:underline font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Try resending it\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Security Note */}\r\n        <div className=\"mt-6 text-center\">\r\n          <div className=\"flex items-center justify-center space-x-2 text-sm text-gray-500\">\r\n            <Shield className=\"w-4 h-4\" />\r\n            <span>Your account is secure and protected</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationSuccess;","// src/pages/auth/Register.tsx - Version corrigée avec checkbox stylisée\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { useAuth } from '@/hooks/use-auth';\r\nimport RegistrationSuccess from '@/components/auth/RegistrationSuccess';\r\nimport { Loader2, User, Mail, Lock, Building, ArrowRight, Eye, EyeOff, AlertCircle, Shield, Check } from 'lucide-react';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    organization: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [acceptTerms, setAcceptTerms] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [passwordStrength, setPasswordStrength] = useState(0);\r\n  const [registrationComplete, setRegistrationComplete] = useState(false);\r\n  const [registrationData, setRegistrationData] = useState<any>(null);\r\n  \r\n  const { register, isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Redirect if already authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/dashboard', { replace: true });\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  // Password strength calculation\r\n  useEffect(() => {\r\n    const calculateStrength = (password: string) => {\r\n      let strength = 0;\r\n      if (password.length >= 6) strength += 1;\r\n      if (password.length >= 8) strength += 1;\r\n      if (/[A-Z]/.test(password)) strength += 1;\r\n      if (/[0-9]/.test(password)) strength += 1;\r\n      if (/[^A-Za-z0-9]/.test(password)) strength += 1;\r\n      return strength;\r\n    };\r\n    \r\n    setPasswordStrength(calculateStrength(formData.password));\r\n  }, [formData.password]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!formData.firstName.trim()) {\r\n      newErrors.firstName = 'First name is required';\r\n    }\r\n    \r\n    if (!formData.lastName.trim()) {\r\n      newErrors.lastName = 'Last name is required';\r\n    }\r\n    \r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email address';\r\n    }\r\n    \r\n    if (!formData.organization.trim()) {\r\n      newErrors.organization = 'Organization is required';\r\n    }\r\n    \r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n    } else if (formData.password.length < 6) {\r\n      newErrors.password = 'Password must be at least 6 characters';\r\n    }\r\n    \r\n    if (!formData.confirmPassword) {\r\n      newErrors.confirmPassword = 'Please confirm your password';\r\n    } else if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = 'Passwords do not match';\r\n    }\r\n    \r\n    if (!acceptTerms) {\r\n      newErrors.terms = 'You must accept the terms and conditions';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n\r\n    setLoading(true);\r\n    setErrors({});\r\n\r\n    try {\r\n      const response = await register({\r\n        firstName: formData.firstName,\r\n        lastName: formData.lastName,\r\n        email: formData.email,\r\n        organization: formData.organization,\r\n        password: formData.password,\r\n        acceptTerms\r\n      });\r\n      \r\n      // Show registration success page instead of navigating to dashboard\r\n      setRegistrationData(response);\r\n      setRegistrationComplete(true);\r\n      \r\n      // Show success toast\r\n      toast.success(response.message);\r\n      \r\n      // Show warning toast if email sending failed\r\n      if (response.warning) {\r\n        toast.warn(response.warning);\r\n      }\r\n    } catch (error: any) {\r\n      if (error.message.includes('Email already exists')) {\r\n        setErrors({ email: 'An account with this email already exists' });\r\n      } else if (error.message.includes('Invalid email')) {\r\n        setErrors({ email: 'Please enter a valid email address' });\r\n      } else {\r\n        setErrors({ general: error.message || 'Registration failed. Please try again.' });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear field-specific error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: '' }));\r\n    }\r\n  };\r\n\r\n  const getPasswordStrengthColor = () => {\r\n    if (passwordStrength <= 1) return 'bg-red-500';\r\n    if (passwordStrength <= 2) return 'bg-yellow-500';\r\n    if (passwordStrength <= 3) return 'bg-blue-500';\r\n    return 'bg-green-500';\r\n  };\r\n\r\n  const getPasswordStrengthText = () => {\r\n    if (passwordStrength <= 1) return 'Weak';\r\n    if (passwordStrength <= 2) return 'Fair';\r\n    if (passwordStrength <= 3) return 'Good';\r\n    return 'Strong';\r\n  };\r\n\r\n  // Custom Checkbox Component\r\n  const CustomCheckbox = ({ \r\n    checked, \r\n    onChange, \r\n    id, \r\n    className = '',\r\n    hasError = false \r\n  }: {\r\n    checked: boolean;\r\n    onChange: (checked: boolean) => void;\r\n    id: string;\r\n    className?: string;\r\n    hasError?: boolean;\r\n  }) => {\r\n    return (\r\n      <div className={`relative ${className}`}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={id}\r\n          checked={checked}\r\n          onChange={(e) => onChange(e.target.checked)}\r\n          className=\"sr-only\"\r\n        />\r\n        <label\r\n          htmlFor={id}\r\n          className={`\r\n            relative flex items-center justify-center w-5 h-5 \r\n            border rounded-md cursor-pointer transition-all duration-200 ease-in-out\r\n            ${checked \r\n              ? 'bg-gray-900 border-gray-900' \r\n              : hasError \r\n                ? 'bg-white border-red-300 hover:border-red-400' \r\n                : 'bg-white border-gray-300 hover:border-gray-400'\r\n            }\r\n            focus-within:ring-2 focus-within:ring-gray-500 focus-within:ring-offset-2\r\n          `}\r\n        >\r\n          {checked && (\r\n            <Check \r\n              className=\"w-3 h-3 text-white transition-opacity duration-200 ease-in-out\"\r\n              strokeWidth={2.5}\r\n            />\r\n          )}\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Show registration success page if registration is complete\r\n  if (registrationComplete && registrationData) {\r\n    return <RegistrationSuccess registrationData={registrationData} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"flex justify-center mb-6\">\r\n            <div className=\"w-12 h-12 bg-gray-900 rounded-lg flex items-center justify-center\">\r\n              <Shield className=\"text-white w-6 h-6\" />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Create account</h1>\r\n          <p className=\"text-gray-600 mt-2\">Get started with AttendanceX in seconds</p>\r\n        </div>\r\n\r\n        {/* Register Form */}\r\n        <Card className=\"bg-white border-gray-200 shadow-sm\">\r\n          <CardHeader className=\"space-y-1 pb-6\">\r\n            <CardTitle className=\"text-xl text-center text-gray-900\">Sign up</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {/* General Error */}\r\n            {errors.general && (\r\n              <Alert className=\"mb-4\" variant=\"destructive\">\r\n                <AlertCircle className=\"h-4 w-4\" />\r\n                <AlertDescription>{errors.general}</AlertDescription>\r\n              </Alert>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                {/* Name fields */}\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"firstName\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                      First name\r\n                    </Label>\r\n                    <div className=\"relative\">\r\n                      <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                      <Input\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        required\r\n                        value={formData.firstName}\r\n                        onChange={handleChange}\r\n                        className={`pl-10 w-full ${errors.firstName ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                        placeholder=\"John\"\r\n                      />\r\n                    </div>\r\n                    {errors.firstName && (\r\n                      <p className=\"mt-1 text-sm text-red-600\">{errors.firstName}</p>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <Label htmlFor=\"lastName\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                      Last name\r\n                    </Label>\r\n                    <div className=\"relative\">\r\n                      <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                      <Input\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        required\r\n                        value={formData.lastName}\r\n                        onChange={handleChange}\r\n                        className={`pl-10 w-full ${errors.lastName ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                        placeholder=\"Doe\"\r\n                      />\r\n                    </div>\r\n                    {errors.lastName && (\r\n                      <p className=\"mt-1 text-sm text-red-600\">{errors.lastName}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Email */}\r\n                <div>\r\n                  <Label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                    Email address\r\n                  </Label>\r\n                  <div className=\"relative\">\r\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                    <Input\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      autoComplete=\"email\"\r\n                      required\r\n                      value={formData.email}\r\n                      onChange={handleChange}\r\n                      className={`pl-10 w-full ${errors.email ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                      placeholder=\"john@company.com\"\r\n                    />\r\n                  </div>\r\n                  {errors.email && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Organization */}\r\n                <div>\r\n                  <Label htmlFor=\"organization\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                    Organization\r\n                  </Label>\r\n                  <div className=\"relative\">\r\n                    <Building className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                    <Input\r\n                      id=\"organization\"\r\n                      name=\"organization\"\r\n                      type=\"text\"\r\n                      required\r\n                      value={formData.organization}\r\n                      onChange={handleChange}\r\n                      className={`pl-10 w-full ${errors.organization ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                      placeholder=\"Your Company\"\r\n                    />\r\n                  </div>\r\n                  {errors.organization && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.organization}</p>\r\n                  )}\r\n                  {formData.organization.trim() && (\r\n                    <div className=\"mt-2 p-3 bg-blue-50 border border-blue-200 rounded-md\">\r\n                      <div className=\"flex items-start space-x-2\">\r\n                        <Shield className=\"w-4 h-4 text-blue-600 mt-0.5 flex-shrink-0\" />\r\n                        <div className=\"text-sm text-blue-800\">\r\n                          <p className=\"font-medium\">Organization Setup</p>\r\n                          <p className=\"mt-1\">\r\n                            If \"{formData.organization}\" is a new organization, you'll automatically become the administrator. \r\n                            If it already exists, you'll join as a participant.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Password */}\r\n                <div>\r\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                    Password\r\n                  </Label>\r\n                  <div className=\"relative\">\r\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                    <Input\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      required\r\n                      value={formData.password}\r\n                      onChange={handleChange}\r\n                      className={`pl-10 pr-10 w-full ${errors.password ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                      placeholder=\"At least 6 characters\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 z-10\"\r\n                    >\r\n                      {showPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\r\n                    </button>\r\n                  </div>\r\n                  {formData.password && (\r\n                    <div className=\"mt-2\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\r\n                          <div \r\n                            className={`h-2 rounded-full transition-all duration-300 ${getPasswordStrengthColor()}`}\r\n                            style={{ width: `${(passwordStrength / 5) * 100}%` }}\r\n                          />\r\n                        </div>\r\n                        <span className=\"text-xs text-gray-600\">{getPasswordStrengthText()}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {errors.password && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Confirm Password */}\r\n                <div>\r\n                  <Label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                    Confirm password\r\n                  </Label>\r\n                  <div className=\"relative\">\r\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                    <Input\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      type={showConfirmPassword ? 'text' : 'password'}\r\n                      required\r\n                      value={formData.confirmPassword}\r\n                      onChange={handleChange}\r\n                      className={`pl-10 pr-10 w-full ${errors.confirmPassword ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                      placeholder=\"Confirm your password\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 z-10\"\r\n                    >\r\n                      {showConfirmPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\r\n                    </button>\r\n                  </div>\r\n                  {errors.confirmPassword && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.confirmPassword}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Terms acceptance with custom checkbox */}\r\n              <div className=\"flex items-center space-x-3\">\r\n                <CustomCheckbox\r\n                  id=\"accept-terms\"\r\n                  checked={acceptTerms}\r\n                  onChange={setAcceptTerms}\r\n                  className=\"flex-shrink-0\"\r\n                  hasError={!!errors.terms}\r\n                />\r\n                <Label \r\n                  htmlFor=\"accept-terms\" \r\n                  className=\"text-sm text-gray-600 cursor-pointer leading-5 flex-1\"\r\n                >\r\n                  I agree to the{' '}\r\n                  <Link to=\"/terms\" className=\"text-gray-900 hover:underline font-medium\">\r\n                    Terms of Service\r\n                  </Link>\r\n                  {' '}and{' '}\r\n                  <Link to=\"/privacy\" className=\"text-gray-900 hover:underline font-medium\">\r\n                    Privacy Policy\r\n                  </Link>\r\n                </Label>\r\n              </div>\r\n              {errors.terms && (\r\n                <p className=\"text-sm text-red-600 ml-8\">{errors.terms}</p>\r\n              )}\r\n\r\n              {/* Submit Button */}\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"w-full bg-gray-900 text-white hover:bg-gray-800 font-medium h-12\"\r\n              >\r\n                <div className=\"flex items-center justify-center\">\r\n                  {loading ? (\r\n                    <>\r\n                      <Loader2 className=\"w-4 h-4 animate-spin mr-2\" />\r\n                      <span>Creating account...</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <ArrowRight className=\"w-4 h-4 mr-2\" />\r\n                      <span>Create account</span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Button>\r\n            </form>\r\n\r\n            {/* Divider */}\r\n            <div className=\"mt-6\">\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <div className=\"w-full border-t border-gray-200\" />\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                  <span className=\"px-2 bg-white text-gray-500\">Already have an account?</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-6 text-center\">\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"text-gray-700 hover:text-gray-900 font-medium hover:underline\"\r\n                >\r\n                  Sign in instead\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"],"names":["RegistrationSuccess","registrationData","resending","setResending","useState","resendSuccess","setResendSuccess","resendEmailVerification","useAuth","handleResendVerification","jsxs","jsx","Mail","AlertCircle","Card","CardHeader","CardTitle","CardContent","Alert","CheckCircle","AlertDescription","Clock","Button","RefreshCw","Link","ArrowRight","Shield","Register","formData","setFormData","loading","setLoading","acceptTerms","setAcceptTerms","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","errors","setErrors","passwordStrength","setPasswordStrength","registrationComplete","setRegistrationComplete","setRegistrationData","register","isAuthenticated","navigate","useNavigate","useLocation","useEffect","password","strength","validateForm","newErrors","handleSubmit","e","response","toast","error","handleChange","name","value","prev","getPasswordStrengthColor","getPasswordStrengthText","CustomCheckbox","checked","onChange","id","className","hasError","Check","Label","User","Input","Building","Lock","EyeOff","Eye","Fragment","Loader2"],"mappings":"u0BAgCA,MAAMA,GAAsB,CAAC,CAAE,iBAAAC,KAAiD,CAC9E,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1C,CAACC,EAAeC,CAAgB,EAAIF,EAAAA,SAAS,EAAK,EAClD,CAAE,wBAAAG,CAAA,EAA4BC,EAAA,EAE9BC,EAA2B,SAAY,CAC3C,GAAI,CACFN,EAAa,EAAI,EACjB,MAAMI,EAAwBN,EAAiB,KAAK,KAAK,EACzDK,EAAiB,EAAI,EACrB,WAAW,IAAMA,EAAiB,EAAK,EAAG,GAAI,CAAA,MAChC,CAAA,QAEhB,CACEH,EAAa,EAAK,CAAA,CACpB,EAGF,aACG,MAAA,CAAI,UAAU,sFACb,SAAAO,EAAAA,KAAC,MAAA,CAAI,UAAU,kBAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,2BACb,SAAAA,EAAAA,IAAC,OAAI,UAAU,qEACZ,WAAiB,KAAK,uBACpBC,EAAA,CAAK,UAAU,yBAAyB,EAEzCD,EAAAA,IAACE,GAAY,UAAU,0BAA0B,EAErD,CAAA,CACF,EACAF,EAAAA,IAAC,MAAG,UAAU,mCACX,WAAiB,KAAK,iBAAmB,mBAAqB,iBAAA,CACjE,EACAA,EAAAA,IAAC,KAAE,UAAU,qBACV,WAAiB,KAAK,iBACnB,4CACA,mDAAA,CAEN,CAAA,EACF,EAGAD,EAAAA,KAACI,EAAA,CAAK,UAAU,qCACd,SAAA,CAAAH,EAAAA,IAACI,EAAA,CAAW,UAAU,iBACpB,SAAAJ,EAAAA,IAACK,GAAU,UAAU,oCAAoC,iCAEzD,CAAA,CACF,EACAN,EAAAA,KAACO,EAAA,CAAY,UAAU,YAErB,SAAA,CAAAP,OAACQ,GAAM,UAAWjB,EAAiB,KAAK,iBAAmB,+BAAiC,iCACzF,SAAA,CAAAA,EAAiB,KAAK,iBACrBU,EAAAA,IAACQ,EAAA,CAAY,UAAU,yBAAyB,EAEhDR,EAAAA,IAACE,EAAA,CAAY,UAAU,yBAAA,CAA0B,EAEnDF,EAAAA,IAACS,EAAA,CAAiB,UAAU,gBACzB,WAAiB,OAAA,CACpB,CAAA,EACF,EAGCnB,EAAiB,SAChBS,EAAAA,KAACQ,GAAM,QAAQ,cAAc,UAAU,iCACrC,SAAA,CAAAP,EAAAA,IAACE,EAAA,CAAY,UAAU,yBAAA,CAA0B,EACjDF,EAAAA,IAACS,EAAA,CAAiB,UAAU,kBACzB,WAAiB,OAAA,CACpB,CAAA,EACF,EAIFV,EAAAA,KAAC,MAAA,CAAI,UAAU,sCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAK,UAAU,uBAAA,CAAwB,SACvC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,IAAA,CAAE,UAAU,oCAAoC,SAAA,iBAAc,QAC9D,IAAA,CAAE,UAAU,wBAAyB,SAAAV,EAAiB,KAAK,KAAA,CAAM,CAAA,CAAA,CACpE,CAAA,EACF,EAECA,EAAiB,KAAK,WACrBS,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACU,GAAA,CAAM,UAAU,uBAAA,CAAwB,SACxC,MAAA,CACC,SAAA,CAAAV,EAAAA,IAAC,IAAA,CAAE,UAAU,oCAAoC,SAAA,mBAAgB,QAChE,IAAA,CAAE,UAAU,wBAAyB,SAAAV,EAAiB,KAAK,SAAA,CAAU,CAAA,CAAA,CACxE,CAAA,CAAA,CACF,CAAA,EAEJ,EAGAS,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,cAAW,EAC7DD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,0GAA0G,SAAA,IAEzH,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,0CAAA,CAErC,CAAA,EACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,0GAA0G,SAAA,IAEzH,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,0CAAA,CAErC,CAAA,EACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,0GAA0G,SAAA,IAEzH,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,wCAAA,CAErC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGCN,GACCK,EAAAA,KAACQ,EAAA,CAAM,UAAU,+BACf,SAAA,CAAAP,EAAAA,IAACQ,EAAA,CAAY,UAAU,wBAAA,CAAyB,EAChDR,EAAAA,IAACS,EAAA,CAAiB,UAAU,iBAAiB,SAAA,yDAAA,CAE7C,CAAA,EACF,EAIFV,EAAAA,KAAC,MAAA,CAAI,UAAU,YACZ,SAAA,CAAAT,EAAiB,KAAK,WACrBS,EAAAA,KAACY,EAAA,CACC,QAASb,EACT,SAAUP,EACV,QAAQ,UACR,UAAU,SAET,SAAA,CAAAA,EACCS,EAAAA,IAACY,IAAU,UAAU,2BAAA,CAA4B,EAEjDZ,EAAAA,IAACC,EAAA,CAAK,UAAU,cAAA,CAAe,EAEhCV,EAAY,aAAe,2BAAA,CAAA,CAAA,EAIhCS,EAAAA,IAACW,EAAA,CACC,QAAO,GACP,UAAU,kDAEV,SAAAZ,EAAAA,KAACc,EAAA,CAAK,GAAG,SACP,SAAA,CAAAb,EAAAA,IAACc,EAAA,CAAW,UAAU,cAAA,CAAe,EAAE,qBAAA,CAAA,CAEzC,CAAA,CAAA,CACF,EACF,QAGC,MAAA,CAAI,UAAU,4CACb,SAAAf,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,4BACT,IAC1BC,EAAAA,IAAC,SAAA,CACC,QAASF,EACT,SAAUP,GAAa,CAACD,EAAiB,KAAK,UAC9C,UAAU,4FACX,SAAA,kBAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,QAGC,MAAA,CAAI,UAAU,mBACb,SAAAS,EAAAA,KAAC,MAAA,CAAI,UAAU,mEACb,SAAA,CAAAC,EAAAA,IAACe,EAAA,CAAO,UAAU,SAAA,CAAU,EAC5Bf,EAAAA,IAAC,QAAK,SAAA,sCAAA,CAAoC,CAAA,CAAA,CAC5C,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,ECjNMgB,GAAW,IAAM,CACrB,KAAM,CAACC,EAAUC,CAAW,EAAIzB,WAAS,CACvC,UAAW,GACX,SAAU,GACV,MAAO,GACP,aAAc,GACd,SAAU,GACV,gBAAiB,EAAA,CAClB,EACK,CAAC0B,EAASC,CAAU,EAAI3B,EAAAA,SAAS,EAAK,EACtC,CAAC4B,EAAaC,CAAc,EAAI7B,EAAAA,SAAS,EAAK,EAC9C,CAAC8B,EAAcC,CAAe,EAAI/B,EAAAA,SAAS,EAAK,EAChD,CAACgC,EAAqBC,CAAsB,EAAIjC,EAAAA,SAAS,EAAK,EAC9D,CAACkC,EAAQC,CAAS,EAAInC,EAAAA,SAAiC,CAAA,CAAE,EACzD,CAACoC,EAAkBC,CAAmB,EAAIrC,EAAAA,SAAS,CAAC,EACpD,CAACsC,EAAsBC,CAAuB,EAAIvC,EAAAA,SAAS,EAAK,EAChE,CAACH,EAAkB2C,CAAmB,EAAIxC,EAAAA,SAAc,IAAI,EAE5D,CAAE,SAAAyC,EAAU,gBAAAC,CAAA,EAAoBtC,EAAA,EAChCuC,EAAWC,GAAA,EACAC,GAAA,EAGjBC,EAAAA,UAAU,IAAM,CACVJ,GACFC,EAAS,aAAc,CAAE,QAAS,EAAA,CAAM,CAC1C,EACC,CAACD,EAAiBC,CAAQ,CAAC,EAG9BG,EAAAA,UAAU,IAAM,CAWdT,GAV2BU,GAAqB,CAC9C,IAAIC,EAAW,EACf,OAAID,EAAS,QAAU,IAAGC,GAAY,GAClCD,EAAS,QAAU,IAAGC,GAAY,GAClC,QAAQ,KAAKD,CAAQ,IAAGC,GAAY,GACpC,QAAQ,KAAKD,CAAQ,IAAGC,GAAY,GACpC,eAAe,KAAKD,CAAQ,IAAGC,GAAY,GACxCA,CAAA,GAG6BxB,EAAS,QAAQ,CAAC,CAAA,EACvD,CAACA,EAAS,QAAQ,CAAC,EAEtB,MAAMyB,EAAe,IAAM,CACzB,MAAMC,EAAoC,CAAA,EAE1C,OAAK1B,EAAS,UAAU,SACtB0B,EAAU,UAAY,0BAGnB1B,EAAS,SAAS,SACrB0B,EAAU,SAAW,yBAGlB1B,EAAS,MAEF,eAAe,KAAKA,EAAS,KAAK,IAC5C0B,EAAU,MAAQ,sCAFlBA,EAAU,MAAQ,oBAKf1B,EAAS,aAAa,SACzB0B,EAAU,aAAe,4BAGtB1B,EAAS,SAEHA,EAAS,SAAS,OAAS,IACpC0B,EAAU,SAAW,0CAFrBA,EAAU,SAAW,uBAKlB1B,EAAS,gBAEHA,EAAS,WAAaA,EAAS,kBACxC0B,EAAU,gBAAkB,0BAF5BA,EAAU,gBAAkB,+BAKzBtB,IACHsB,EAAU,MAAQ,4CAGpBf,EAAUe,CAAS,EACZ,OAAO,KAAKA,CAAS,EAAE,SAAW,CAAA,EAGrCC,EAAe,MAAOC,GAAuB,CAGjD,GAFAA,EAAE,eAAA,EAEE,EAACH,IAEL,CAAAtB,EAAW,EAAI,EACfQ,EAAU,CAAA,CAAE,EAEZ,GAAI,CACF,MAAMkB,EAAW,MAAMZ,EAAS,CAC9B,UAAWjB,EAAS,UACpB,SAAUA,EAAS,SACnB,MAAOA,EAAS,MAChB,aAAcA,EAAS,aACvB,SAAUA,EAAS,SACnB,YAAAI,CAAA,CACD,EAGDY,EAAoBa,CAAQ,EAC5Bd,EAAwB,EAAI,EAG5Be,EAAM,QAAQD,EAAS,OAAO,EAG1BA,EAAS,SACXC,EAAM,KAAKD,EAAS,OAAO,CAC7B,OACOE,EAAY,CACfA,EAAM,QAAQ,SAAS,sBAAsB,EAC/CpB,EAAU,CAAE,MAAO,4CAA6C,EACvDoB,EAAM,QAAQ,SAAS,eAAe,EAC/CpB,EAAU,CAAE,MAAO,qCAAsC,EAEzDA,EAAU,CAAE,QAASoB,EAAM,SAAW,yCAA0C,CAClF,QACF,CACE5B,EAAW,EAAK,CAAA,EAClB,EAGI6B,EAAgBJ,GAA2C,CAC/D,KAAM,CAAE,KAAAK,EAAM,MAAAC,CAAA,EAAUN,EAAE,OAC1B3B,EAAYkC,IAAS,CAAE,GAAGA,EAAM,CAACF,CAAI,EAAGC,GAAQ,EAG5CxB,EAAOuB,CAAI,GACbtB,EAAUwB,IAAS,CAAE,GAAGA,EAAM,CAACF,CAAI,EAAG,IAAK,CAC7C,EAGIG,EAA2B,IAC3BxB,GAAoB,EAAU,aAC9BA,GAAoB,EAAU,gBAC9BA,GAAoB,EAAU,cAC3B,eAGHyB,EAA0B,IAC1BzB,GAAoB,EAAU,OAC9BA,GAAoB,EAAU,OAC9BA,GAAoB,EAAU,OAC3B,SAIH0B,EAAiB,CAAC,CACtB,QAAAC,EACA,SAAAC,EACA,GAAAC,EACA,UAAAC,EAAY,GACZ,SAAAC,GAAW,EAAA,IAST7D,EAAAA,KAAC,MAAA,CAAI,UAAW,YAAY4D,CAAS,GACnC,SAAA,CAAA3D,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAA0D,EACA,QAAAF,EACA,SAAWX,IAAMY,EAASZ,GAAE,OAAO,OAAO,EAC1C,UAAU,SAAA,CAAA,EAEZ7C,EAAAA,IAAC,QAAA,CACC,QAAS0D,EACT,UAAW;AAAA;AAAA;AAAA,cAGPF,EACE,8BACAI,GACE,+CACA,gDACN;AAAA;AAAA,YAID,SAAAJ,GACCxD,EAAAA,IAAC6D,GAAA,CACC,UAAU,iEACV,YAAa,GAAA,CAAA,CACf,CAAA,CAEJ,EACF,EAKJ,OAAI9B,GAAwBzC,EACnBU,MAACX,IAAoB,iBAAAC,EAAoC,QAI/D,MAAA,CAAI,UAAU,sFACb,SAAAS,EAAAA,KAAC,MAAA,CAAI,UAAU,kBAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,2BACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,oEACb,SAAAA,EAAAA,IAACe,EAAA,CAAO,UAAU,oBAAA,CAAqB,CAAA,CACzC,EACF,EACAf,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,iBAAc,EAC/DA,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAqB,SAAA,yCAAA,CAAuC,CAAA,EAC3E,EAGAD,EAAAA,KAACI,EAAA,CAAK,UAAU,qCACd,SAAA,CAAAH,EAAAA,IAACI,EAAA,CAAW,UAAU,iBACpB,SAAAJ,EAAAA,IAACK,GAAU,UAAU,oCAAoC,mBAAO,CAAA,CAClE,SACCC,EAAA,CAEE,SAAA,CAAAqB,EAAO,SACN5B,EAAAA,KAACQ,EAAA,CAAM,UAAU,OAAO,QAAQ,cAC9B,SAAA,CAAAP,EAAAA,IAACE,EAAA,CAAY,UAAU,SAAA,CAAU,EACjCF,EAAAA,IAACS,EAAA,CAAkB,SAAAkB,EAAO,OAAA,CAAQ,CAAA,EACpC,EAGF5B,EAAAA,KAAC,OAAA,CAAK,SAAU6C,EAAc,UAAU,YACtC,SAAA,CAAA7C,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,MAAC8D,EAAA,CAAM,QAAQ,YAAY,UAAU,+CAA+C,SAAA,aAEpF,EACA/D,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAAC+D,EAAA,CAAK,UAAU,mGAAA,CAAoG,EACpH/D,EAAAA,IAACgE,EAAA,CACC,GAAG,YACH,KAAK,YACL,KAAK,OACL,SAAQ,GACR,MAAO/C,EAAS,UAChB,SAAUgC,EACV,UAAW,gBAAgBtB,EAAO,UAAY,yDAA2D,EAAE,GAC3G,YAAY,MAAA,CAAA,CACd,EACF,EACCA,EAAO,WACN3B,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,SAAA,CAAU,CAAA,EAE/D,SACC,MAAA,CACC,SAAA,CAAAA,MAAC8D,EAAA,CAAM,QAAQ,WAAW,UAAU,+CAA+C,SAAA,YAEnF,EACA/D,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAAC+D,EAAA,CAAK,UAAU,mGAAA,CAAoG,EACpH/D,EAAAA,IAACgE,EAAA,CACC,GAAG,WACH,KAAK,WACL,KAAK,OACL,SAAQ,GACR,MAAO/C,EAAS,SAChB,SAAUgC,EACV,UAAW,gBAAgBtB,EAAO,SAAW,yDAA2D,EAAE,GAC1G,YAAY,KAAA,CAAA,CACd,EACF,EACCA,EAAO,UACN3B,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,QAAA,CAAS,CAAA,CAAA,CAE9D,CAAA,EACF,SAGC,MAAA,CACC,SAAA,CAAAA,MAAC8D,EAAA,CAAM,QAAQ,QAAQ,UAAU,+CAA+C,SAAA,gBAEhF,EACA/D,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAK,UAAU,mGAAA,CAAoG,EACpHD,EAAAA,IAACgE,EAAA,CACC,GAAG,QACH,KAAK,QACL,KAAK,QACL,aAAa,QACb,SAAQ,GACR,MAAO/C,EAAS,MAChB,SAAUgC,EACV,UAAW,gBAAgBtB,EAAO,MAAQ,yDAA2D,EAAE,GACvG,YAAY,kBAAA,CAAA,CACd,EACF,EACCA,EAAO,OACN3B,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,KAAA,CAAM,CAAA,EAE3D,SAGC,MAAA,CACC,SAAA,CAAAA,MAAC8D,EAAA,CAAM,QAAQ,eAAe,UAAU,+CAA+C,SAAA,eAEvF,EACA/D,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAACiE,GAAA,CAAS,UAAU,mGAAA,CAAoG,EACxHjE,EAAAA,IAACgE,EAAA,CACC,GAAG,eACH,KAAK,eACL,KAAK,OACL,SAAQ,GACR,MAAO/C,EAAS,aAChB,SAAUgC,EACV,UAAW,gBAAgBtB,EAAO,aAAe,yDAA2D,EAAE,GAC9G,YAAY,cAAA,CAAA,CACd,EACF,EACCA,EAAO,cACN3B,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,aAAa,EAE/DiB,EAAS,aAAa,KAAA,GACrBjB,EAAAA,IAAC,MAAA,CAAI,UAAU,wDACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAACe,EAAA,CAAO,UAAU,4CAAA,CAA6C,EAC/DhB,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,qBAAkB,EAC7CD,EAAAA,KAAC,IAAA,CAAE,UAAU,OAAO,SAAA,CAAA,OACbkB,EAAS,aAAa,6HAAA,CAAA,CAE7B,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAEJ,SAGC,MAAA,CACC,SAAA,CAAAjB,MAAC8D,EAAA,CAAM,QAAQ,WAAW,UAAU,+CAA+C,SAAA,WAEnF,EACA/D,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAACkE,EAAA,CAAK,UAAU,mGAAA,CAAoG,EACpHlE,EAAAA,IAACgE,EAAA,CACC,GAAG,WACH,KAAK,WACL,KAAMzC,EAAe,OAAS,WAC9B,SAAQ,GACR,MAAON,EAAS,SAChB,SAAUgC,EACV,UAAW,sBAAsBtB,EAAO,SAAW,yDAA2D,EAAE,GAChH,YAAY,uBAAA,CAAA,EAEd3B,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMwB,EAAgB,CAACD,CAAY,EAC5C,UAAU,6FAET,SAAAA,QAAgB4C,EAAA,CAAO,UAAU,UAAU,EAAKnE,EAAAA,IAACoE,EAAA,CAAI,UAAU,SAAA,CAAU,CAAA,CAAA,CAC5E,EACF,EACCnD,EAAS,UACRjB,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAW,gDAAgDqD,EAAA,CAA0B,GACrF,MAAO,CAAE,MAAO,GAAIxB,EAAmB,EAAK,GAAG,GAAA,CAAI,CAAA,EAEvD,EACA7B,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAyB,YAAwB,CAAE,CAAA,CAAA,CACrE,CAAA,CACF,EAED2B,EAAO,UACN3B,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,QAAA,CAAS,CAAA,EAE9D,SAGC,MAAA,CACC,SAAA,CAAAA,MAAC8D,EAAA,CAAM,QAAQ,kBAAkB,UAAU,+CAA+C,SAAA,mBAE1F,EACA/D,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAACkE,EAAA,CAAK,UAAU,mGAAA,CAAoG,EACpHlE,EAAAA,IAACgE,EAAA,CACC,GAAG,kBACH,KAAK,kBACL,KAAMvC,EAAsB,OAAS,WACrC,SAAQ,GACR,MAAOR,EAAS,gBAChB,SAAUgC,EACV,UAAW,sBAAsBtB,EAAO,gBAAkB,yDAA2D,EAAE,GACvH,YAAY,uBAAA,CAAA,EAEd3B,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM0B,EAAuB,CAACD,CAAmB,EAC1D,UAAU,6FAET,SAAAA,QAAuB0C,EAAA,CAAO,UAAU,UAAU,EAAKnE,EAAAA,IAACoE,EAAA,CAAI,UAAU,SAAA,CAAU,CAAA,CAAA,CACnF,EACF,EACCzC,EAAO,iBACN3B,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,eAAA,CAAgB,CAAA,CAAA,CAErE,CAAA,EACF,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACuD,EAAA,CACC,GAAG,eACH,QAASlC,EACT,SAAUC,EACV,UAAU,gBACV,SAAU,CAAC,CAACK,EAAO,KAAA,CAAA,EAErB5B,EAAAA,KAAC+D,EAAA,CACC,QAAQ,eACR,UAAU,wDACX,SAAA,CAAA,iBACgB,UACdjD,EAAA,CAAK,GAAG,SAAS,UAAU,4CAA4C,SAAA,mBAExE,EACC,IAAI,MAAI,UACRA,EAAA,CAAK,GAAG,WAAW,UAAU,4CAA4C,SAAA,gBAAA,CAE1E,CAAA,CAAA,CAAA,CACF,EACF,EACCc,EAAO,OACN3B,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,MAAM,EAIzDA,EAAAA,IAACW,EAAA,CACC,KAAK,SACL,SAAUQ,EACV,UAAU,mEAEV,SAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,mCACZ,WACCD,EAAAA,KAAAsE,EAAAA,SAAA,CACE,SAAA,CAAArE,EAAAA,IAACsE,GAAA,CAAQ,UAAU,2BAAA,CAA4B,EAC/CtE,EAAAA,IAAC,QAAK,SAAA,qBAAA,CAAmB,CAAA,CAAA,CAC3B,EAEAD,EAAAA,KAAAsE,EAAAA,SAAA,CACE,SAAA,CAAArE,EAAAA,IAACc,EAAA,CAAW,UAAU,cAAA,CAAe,EACrCd,EAAAA,IAAC,QAAK,SAAA,gBAAA,CAAc,CAAA,CAAA,CACtB,CAAA,CAEJ,CAAA,CAAA,CACF,EACF,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,qCACb,eAAC,MAAA,CAAI,UAAU,kCAAkC,CAAA,CACnD,EACAA,EAAAA,IAAC,OAAI,UAAU,uCACb,eAAC,OAAA,CAAK,UAAU,8BAA8B,SAAA,0BAAA,CAAwB,CAAA,CACxE,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAAA,IAACa,EAAA,CACC,GAAG,SACH,UAAU,gEACX,SAAA,iBAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ"}