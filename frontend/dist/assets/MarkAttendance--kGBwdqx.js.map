{"version":3,"file":"MarkAttendance--kGBwdqx.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/camera.js","../../src/pages/Attendance/MarkAttendance.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z\",\n      key: \"1tc9qg\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"13\", r: \"3\", key: \"1vg3eu\" }]\n];\nconst Camera = createLucideIcon(\"camera\", __iconNode);\n\nexport { __iconNode, Camera as default };\n//# sourceMappingURL=camera.js.map\n","// src/pages/Attendance/MarkAttendance.tsx - Validation manuelle des présences\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth, usePermissions } from '@/hooks/use-auth';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { \r\n  CheckCircle, \r\n  XCircle, \r\n  Clock, \r\n  AlertCircle,\r\n  Search, \r\n  Users, \r\n  QrCode,\r\n  MapPin,\r\n  Camera,\r\n  Smartphone,\r\n  Save,\r\n  ArrowLeft,\r\n  UserCheck,\r\n  UserX,\r\n  Timer,\r\n  Calendar\r\n} from 'lucide-react';\r\nimport { eventService, attendanceService } from '@/services';\r\nimport type { Event, Attendance, AttendanceStatus, AttendanceMethod } from '@attendance-x/shared';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface ParticipantAttendance {\r\n  userId: string;\r\n  user: any;\r\n  status: AttendanceStatus;\r\n  method: AttendanceMethod;\r\n  notes: string;\r\n  checkInTime?: string;\r\n  checkOutTime?: string;\r\n  isModified: boolean;\r\n}\r\n\r\nconst MarkAttendance = () => {\r\n  const { eventId } = useParams<{ eventId: string }>();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const { canManageAttendances } = usePermissions();\r\n  \r\n  const [event, setEvent] = useState<Event | null>(null);\r\n  const [participantAttendances, setParticipantAttendances] = useState<ParticipantAttendance[]>([]);\r\n  const [existingAttendances, setExistingAttendances] = useState<Attendance[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState<AttendanceStatus | 'all'>('all');\r\n  const [bulkAction, setBulkAction] = useState<{\r\n    status: AttendanceStatus;\r\n    method: AttendanceMethod;\r\n    notes: string;\r\n  }>({\r\n    status: 'present',\r\n    method: 'manual',\r\n    notes: ''\r\n  });\r\n  const [selectedParticipants, setSelectedParticipants] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (eventId) {\r\n      loadEventAndAttendances();\r\n    }\r\n  }, [eventId]);\r\n\r\n  const loadEventAndAttendances = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Load event details\r\n      const eventResponse = await eventService.getEventById(eventId!);\r\n      if (!eventResponse.success || !eventResponse.data) {\r\n        toast.error('Événement non trouvé');\r\n        navigate('/events');\r\n        return;\r\n      }\r\n      \r\n      const eventData = eventResponse.data;\r\n      setEvent(eventData);\r\n      \r\n      // Load existing attendances\r\n      const attendanceResponse = await attendanceService.getEventAttendances(eventId!);\r\n      const existingAttendances = attendanceResponse.success ? attendanceResponse.data : [];\r\n      setExistingAttendances(existingAttendances);\r\n      \r\n      // Initialize participant attendances\r\n      const participantAttendances: ParticipantAttendance[] = eventData.participants?.map(participant => {\r\n        const existingAttendance = existingAttendances.find(a => a.userId === participant.id);\r\n        \r\n        return {\r\n          userId: participant.id,\r\n          user: participant,\r\n          status: existingAttendance?.status || 'absent',\r\n          method: existingAttendance?.method || 'manual',\r\n          notes: existingAttendance?.notes || '',\r\n          checkInTime: existingAttendance?.checkInTime,\r\n          checkOutTime: existingAttendance?.checkOutTime,\r\n          isModified: false\r\n        };\r\n      }) || [];\r\n      \r\n      setParticipantAttendances(participantAttendances);\r\n      \r\n    } catch (error: any) {\r\n      console.error('Error loading event and attendances:', error);\r\n      toast.error('Erreur lors du chargement');\r\n      navigate('/events');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateParticipantAttendance = (userId: string, updates: Partial<ParticipantAttendance>) => {\r\n    setParticipantAttendances(prev => \r\n      prev.map(pa => \r\n        pa.userId === userId \r\n          ? { ...pa, ...updates, isModified: true }\r\n          : pa\r\n      )\r\n    );\r\n  };\r\n\r\n  const getStatusBadge = (status: AttendanceStatus) => {\r\n    const statusConfig = {\r\n      present: { variant: 'default' as const, label: 'Présent', icon: CheckCircle },\r\n      absent: { variant: 'destructive' as const, label: 'Absent', icon: XCircle },\r\n      late: { variant: 'secondary' as const, label: 'En retard', icon: Timer },\r\n      excused: { variant: 'outline' as const, label: 'Excusé', icon: AlertCircle },\r\n      left_early: { variant: 'secondary' as const, label: 'Parti tôt', icon: Timer }\r\n    };\r\n\r\n    const config = statusConfig[status] || { variant: 'outline' as const, label: status, icon: AlertCircle };\r\n    const IconComponent = config.icon;\r\n    \r\n    return (\r\n      <Badge variant={config.variant} className=\"flex items-center gap-1\">\r\n        <IconComponent className=\"w-3 h-3\" />\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getMethodBadge = (method: AttendanceMethod) => {\r\n    const methodConfig = {\r\n      qr_code: { variant: 'default' as const, label: 'QR Code', icon: QrCode },\r\n      geolocation: { variant: 'secondary' as const, label: 'Géolocalisation', icon: MapPin },\r\n      manual: { variant: 'outline' as const, label: 'Manuel', icon: UserCheck },\r\n      biometric: { variant: 'default' as const, label: 'Biométrique', icon: Camera },\r\n      nfc: { variant: 'secondary' as const, label: 'NFC', icon: Smartphone }\r\n    };\r\n\r\n    const config = methodConfig[method] || { variant: 'outline' as const, label: method, icon: UserCheck };\r\n    const IconComponent = config.icon;\r\n    \r\n    return (\r\n      <Badge variant={config.variant} className=\"flex items-center gap-1\">\r\n        <IconComponent className=\"w-3 h-3\" />\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getUserInitials = (user: any) => {\r\n    if (user?.firstName && user?.lastName) {\r\n      return `${user.firstName[0]}${user.lastName[0]}`.toUpperCase();\r\n    }\r\n    if (user?.displayName) {\r\n      const names = user.displayName.split(' ');\r\n      return names.length > 1 \r\n        ? `${names[0][0]}${names[1][0]}`.toUpperCase()\r\n        : names[0][0].toUpperCase();\r\n    }\r\n    return user?.email?.[0].toUpperCase() || 'U';\r\n  };\r\n\r\n  const handleBulkAction = () => {\r\n    if (selectedParticipants.length === 0) {\r\n      toast.warning('Aucun participant sélectionné');\r\n      return;\r\n    }\r\n\r\n    selectedParticipants.forEach(userId => {\r\n      updateParticipantAttendance(userId, {\r\n        status: bulkAction.status,\r\n        method: bulkAction.method,\r\n        notes: bulkAction.notes,\r\n        checkInTime: bulkAction.status === 'present' ? new Date().toISOString() : undefined\r\n      });\r\n    });\r\n\r\n    setSelectedParticipants([]);\r\n    toast.success(`${selectedParticipants.length} présence(s) mise(s) à jour`);\r\n  };\r\n\r\n  const handleSaveAttendances = async () => {\r\n    const modifiedAttendances = participantAttendances.filter(pa => pa.isModified);\r\n    \r\n    if (modifiedAttendances.length === 0) {\r\n      toast.info('Aucune modification à sauvegarder');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSaving(true);\r\n      \r\n      // Use bulk mark attendance API\r\n      const attendancesByStatus = modifiedAttendances.reduce((acc, pa) => {\r\n        if (!acc[pa.status]) acc[pa.status] = [];\r\n        acc[pa.status].push(pa.userId);\r\n        return acc;\r\n      }, {} as Record<AttendanceStatus, string[]>);\r\n\r\n      const promises = Object.entries(attendancesByStatus).map(([status, userIds]) => {\r\n        const operation = status === 'present' ? 'mark_present' : \r\n                         status === 'late' ? 'mark_late' : 'mark_absent';\r\n        \r\n        return attendanceService.bulkMarkAttendance(\r\n          operation as any,\r\n          eventId!,\r\n          userIds,\r\n          `Marquage manuel par ${user?.displayName || user?.email}`\r\n        );\r\n      });\r\n\r\n      await Promise.all(promises);\r\n      \r\n      toast.success('Présences sauvegardées avec succès');\r\n      \r\n      // Reset modification flags\r\n      setParticipantAttendances(prev => \r\n        prev.map(pa => ({ ...pa, isModified: false }))\r\n      );\r\n      \r\n    } catch (error: any) {\r\n      console.error('Error saving attendances:', error);\r\n      toast.error('Erreur lors de la sauvegarde');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const filteredParticipants = participantAttendances.filter(pa => {\r\n    const matchesSearch = !searchTerm || \r\n      pa.user?.displayName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pa.user?.firstName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pa.user?.lastName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      pa.user?.email?.toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    const matchesStatus = filterStatus === 'all' || pa.status === filterStatus;\r\n    \r\n    return matchesSearch && matchesStatus;\r\n  });\r\n\r\n  const stats = {\r\n    total: participantAttendances.length,\r\n    present: participantAttendances.filter(pa => pa.status === 'present').length,\r\n    absent: participantAttendances.filter(pa => pa.status === 'absent').length,\r\n    late: participantAttendances.filter(pa => pa.status === 'late').length,\r\n    excused: participantAttendances.filter(pa => pa.status === 'excused').length,\r\n    modified: participantAttendances.filter(pa => pa.isModified).length\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <div className=\"animate-pulse space-y-6\">\r\n          <div className=\"h-8 bg-muted rounded w-1/3\"></div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n            {[...Array(4)].map((_, i) => (\r\n              <div key={i} className=\"h-24 bg-muted rounded\"></div>\r\n            ))}\r\n          </div>\r\n          <div className=\"h-96 bg-muted rounded\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!event || !canManageAttendances) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <Alert variant=\"destructive\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          <AlertDescription>\r\n            Vous n'avez pas les permissions pour marquer les présences de cet événement.\r\n          </AlertDescription>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <Button variant=\"outline\" size=\"sm\" onClick={() => navigate(`/events/${eventId}`)}>\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Retour à l'événement\r\n          </Button>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-foreground\">Marquer les présences</h1>\r\n            <p className=\"text-muted-foreground mt-1\">{event.title}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          {stats.modified > 0 && (\r\n            <Badge variant=\"secondary\">\r\n              {stats.modified} modification(s) en attente\r\n            </Badge>\r\n          )}\r\n          <Button \r\n            onClick={handleSaveAttendances} \r\n            disabled={saving || stats.modified === 0}\r\n          >\r\n            <Save className=\"w-4 h-4 mr-2\" />\r\n            {saving ? 'Sauvegarde...' : 'Sauvegarder'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-blue-600\">{stats.total}</div>\r\n            <div className=\"text-sm text-muted-foreground\">Total</div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-green-600\">{stats.present}</div>\r\n            <div className=\"text-sm text-muted-foreground\">Présents</div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-red-600\">{stats.absent}</div>\r\n            <div className=\"text-sm text-muted-foreground\">Absents</div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-yellow-600\">{stats.late}</div>\r\n            <div className=\"text-sm text-muted-foreground\">En retard</div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-gray-600\">{stats.excused}</div>\r\n            <div className=\"text-sm text-muted-foreground\">Excusés</div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"individual\" className=\"space-y-6\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"individual\">Marquage individuel</TabsTrigger>\r\n          <TabsTrigger value=\"bulk\">Actions groupées</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"individual\" className=\"space-y-6\">\r\n          {/* Filters */}\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex flex-col sm:flex-row gap-4\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"relative\">\r\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n                    <Input\r\n                      placeholder=\"Rechercher un participant...\"\r\n                      value={searchTerm}\r\n                      onChange={(e) => setSearchTerm(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Select value={filterStatus} onValueChange={(value) => setFilterStatus(value as AttendanceStatus | 'all')}>\r\n                  <SelectTrigger className=\"w-[200px]\">\r\n                    <SelectValue placeholder=\"Filtrer par statut\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"all\">Tous les statuts</SelectItem>\r\n                    <SelectItem value=\"present\">Présent</SelectItem>\r\n                    <SelectItem value=\"absent\">Absent</SelectItem>\r\n                    <SelectItem value=\"late\">En retard</SelectItem>\r\n                    <SelectItem value=\"excused\">Excusé</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Participants List */}\r\n          <div className=\"space-y-4\">\r\n            {filteredParticipants.map((pa) => (\r\n              <Card key={pa.userId} className={`${pa.isModified ? 'border-l-4 border-l-blue-500' : ''}`}>\r\n                <CardContent className=\"p-6\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <Avatar className=\"w-12 h-12\">\r\n                        <AvatarImage src={pa.user?.profilePicture} />\r\n                        <AvatarFallback>{getUserInitials(pa.user)}</AvatarFallback>\r\n                      </Avatar>\r\n                      \r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center space-x-3 mb-2\">\r\n                          <h3 className=\"font-semibold text-foreground\">\r\n                            {pa.user?.displayName || `${pa.user?.firstName} ${pa.user?.lastName}`}\r\n                          </h3>\r\n                          {pa.isModified && (\r\n                            <Badge variant=\"secondary\" className=\"text-xs\">\r\n                              Modifié\r\n                            </Badge>\r\n                          )}\r\n                        </div>\r\n                        <p className=\"text-sm text-muted-foreground\">{pa.user?.email}</p>\r\n                        {pa.checkInTime && (\r\n                          <p className=\"text-xs text-muted-foreground\">\r\n                            Arrivé le {new Date(pa.checkInTime).toLocaleString('fr-FR')}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className=\"flex flex-col space-y-2\">\r\n                        <Select \r\n                          value={pa.status} \r\n                          onValueChange={(value) => updateParticipantAttendance(pa.userId, { \r\n                            status: value as AttendanceStatus,\r\n                            checkInTime: value === 'present' && !pa.checkInTime ? new Date().toISOString() : pa.checkInTime\r\n                          })}\r\n                        >\r\n                          <SelectTrigger className=\"w-[140px]\">\r\n                            <SelectValue />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"present\">Présent</SelectItem>\r\n                            <SelectItem value=\"absent\">Absent</SelectItem>\r\n                            <SelectItem value=\"late\">En retard</SelectItem>\r\n                            <SelectItem value=\"excused\">Excusé</SelectItem>\r\n                            <SelectItem value=\"left_early\">Parti tôt</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                        \r\n                        <Select \r\n                          value={pa.method} \r\n                          onValueChange={(value) => updateParticipantAttendance(pa.userId, { method: value as AttendanceMethod })}\r\n                        >\r\n                          <SelectTrigger className=\"w-[140px]\">\r\n                            <SelectValue />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"manual\">Manuel</SelectItem>\r\n                            <SelectItem value=\"qr_code\">QR Code</SelectItem>\r\n                            <SelectItem value=\"geolocation\">Géolocalisation</SelectItem>\r\n                            <SelectItem value=\"biometric\">Biométrique</SelectItem>\r\n                            <SelectItem value=\"nfc\">NFC</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                      \r\n                      <div className=\"flex flex-col space-y-2\">\r\n                        {getStatusBadge(pa.status)}\r\n                        {getMethodBadge(pa.method)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Notes */}\r\n                  <div className=\"mt-4\">\r\n                    <Textarea\r\n                      placeholder=\"Notes (optionnel)...\"\r\n                      value={pa.notes}\r\n                      onChange={(e) => updateParticipantAttendance(pa.userId, { notes: e.target.value })}\r\n                      className=\"resize-none\"\r\n                      rows={2}\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n            \r\n            {filteredParticipants.length === 0 && (\r\n              <Card>\r\n                <CardContent className=\"p-12 text-center\">\r\n                  <Users className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                  <h3 className=\"text-lg font-medium text-foreground mb-2\">\r\n                    Aucun participant trouvé\r\n                  </h3>\r\n                  <p className=\"text-muted-foreground\">\r\n                    Aucun participant ne correspond à vos critères de recherche.\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"bulk\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Actions groupées</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              {/* Bulk Action Form */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium mb-2 block\">Statut</label>\r\n                  <Select \r\n                    value={bulkAction.status} \r\n                    onValueChange={(value) => setBulkAction(prev => ({ ...prev, status: value as AttendanceStatus }))}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"present\">Présent</SelectItem>\r\n                      <SelectItem value=\"absent\">Absent</SelectItem>\r\n                      <SelectItem value=\"late\">En retard</SelectItem>\r\n                      <SelectItem value=\"excused\">Excusé</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"text-sm font-medium mb-2 block\">Méthode</label>\r\n                  <Select \r\n                    value={bulkAction.method} \r\n                    onValueChange={(value) => setBulkAction(prev => ({ ...prev, method: value as AttendanceMethod }))}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"manual\">Manuel</SelectItem>\r\n                      <SelectItem value=\"qr_code\">QR Code</SelectItem>\r\n                      <SelectItem value=\"geolocation\">Géolocalisation</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                \r\n                <div className=\"flex items-end\">\r\n                  <Button \r\n                    onClick={handleBulkAction}\r\n                    disabled={selectedParticipants.length === 0}\r\n                    className=\"w-full\"\r\n                  >\r\n                    Appliquer ({selectedParticipants.length})\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"text-sm font-medium mb-2 block\">Notes (optionnel)</label>\r\n                <Textarea\r\n                  placeholder=\"Notes pour l'action groupée...\"\r\n                  value={bulkAction.notes}\r\n                  onChange={(e) => setBulkAction(prev => ({ ...prev, notes: e.target.value }))}\r\n                  rows={3}\r\n                />\r\n              </div>\r\n\r\n              {/* Participant Selection */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h4 className=\"font-medium\">Sélectionner les participants</h4>\r\n                  <div className=\"flex space-x-2\">\r\n                    <Button \r\n                      variant=\"outline\" \r\n                      size=\"sm\"\r\n                      onClick={() => setSelectedParticipants(participantAttendances.map(pa => pa.userId))}\r\n                    >\r\n                      Tout sélectionner\r\n                    </Button>\r\n                    <Button \r\n                      variant=\"outline\" \r\n                      size=\"sm\"\r\n                      onClick={() => setSelectedParticipants([])}\r\n                    >\r\n                      Tout désélectionner\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 max-h-96 overflow-y-auto\">\r\n                  {participantAttendances.map((pa) => (\r\n                    <div \r\n                      key={pa.userId}\r\n                      className={`flex items-center space-x-3 p-3 border rounded-lg cursor-pointer transition-colors ${\r\n                        selectedParticipants.includes(pa.userId) \r\n                          ? 'border-primary bg-primary/5' \r\n                          : 'hover:bg-muted/50'\r\n                      }`}\r\n                      onClick={() => {\r\n                        setSelectedParticipants(prev => \r\n                          prev.includes(pa.userId)\r\n                            ? prev.filter(id => id !== pa.userId)\r\n                            : [...prev, pa.userId]\r\n                        );\r\n                      }}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedParticipants.includes(pa.userId)}\r\n                        onChange={() => {}}\r\n                        className=\"pointer-events-none\"\r\n                      />\r\n                      <Avatar className=\"w-8 h-8\">\r\n                        <AvatarImage src={pa.user?.profilePicture} />\r\n                        <AvatarFallback className=\"text-xs\">{getUserInitials(pa.user)}</AvatarFallback>\r\n                      </Avatar>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <p className=\"font-medium text-sm truncate\">\r\n                          {pa.user?.displayName || `${pa.user?.firstName} ${pa.user?.lastName}`}\r\n                        </p>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          {getStatusBadge(pa.status)}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkAttendance;"],"names":["__iconNode","Camera","createLucideIcon","MarkAttendance","eventId","useParams","navigate","useNavigate","user","useAuth","canManageAttendances","usePermissions","event","setEvent","useState","participantAttendances","setParticipantAttendances","existingAttendances","setExistingAttendances","loading","setLoading","saving","setSaving","searchTerm","setSearchTerm","filterStatus","setFilterStatus","bulkAction","setBulkAction","selectedParticipants","setSelectedParticipants","useEffect","loadEventAndAttendances","eventResponse","eventService","toast","eventData","attendanceResponse","attendanceService","_a","participant","existingAttendance","a","error","updateParticipantAttendance","userId","updates","prev","pa","getStatusBadge","status","config","CheckCircle","XCircle","Timer","AlertCircle","IconComponent","Badge","jsx","getMethodBadge","method","QrCode","MapPin","UserCheck","Smartphone","getUserInitials","names","handleBulkAction","handleSaveAttendances","modifiedAttendances","attendancesByStatus","acc","promises","userIds","operation","filteredParticipants","matchesSearch","_b","_d","_c","_f","_e","_h","_g","matchesStatus","stats","jsxs","_","i","Alert","AlertDescription","Button","ArrowLeft","Save","Card","CardContent","Tabs","TabsList","TabsTrigger","TabsContent","Search","Input","e","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","Avatar","AvatarImage","AvatarFallback","Textarea","Users","CardHeader","CardTitle","id"],"mappings":"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","x_google_ignoreList":[0]}