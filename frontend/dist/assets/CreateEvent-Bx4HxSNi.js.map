{"version":3,"file":"CreateEvent-Bx4HxSNi.js","sources":["../../src/pages/Events/CreateEvent.tsx"],"sourcesContent":["// src/pages/Events/CreateEvent.tsx - Formulaire de création d'événement\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth, usePermissions } from '@/hooks/use-auth';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { \r\n  Calendar, \r\n  MapPin, \r\n  Users, \r\n  Clock, \r\n  Save,\r\n  ArrowLeft,\r\n  AlertCircle,\r\n  Plus,\r\n  X,\r\n  Search\r\n} from 'lucide-react';\r\nimport { eventService, userService } from '@/services';\r\nimport type { CreateEventRequest, EventType, User } from '@attendance-x/shared';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface EventFormData {\r\n  title: string;\r\n  description: string;\r\n  type: EventType;\r\n  startDate: string;\r\n  endDate: string;\r\n  location: {\r\n    type: 'physical' | 'virtual' | 'hybrid';\r\n    name: string;\r\n    address?: string;\r\n    coordinates?: {\r\n      latitude: number;\r\n      longitude: number;\r\n    };\r\n    virtualLink?: string;\r\n  };\r\n  maxParticipants?: number;\r\n  isPrivate: boolean;\r\n  requiresApproval: boolean;\r\n  allowLateRegistration: boolean;\r\n  tags: string[];\r\n  participants: string[];\r\n  settings: {\r\n    allowQRCode: boolean;\r\n    allowGeolocation: boolean;\r\n    allowManualCheckIn: boolean;\r\n    checkInWindow: number; // minutes before/after\r\n    sendReminders: boolean;\r\n    reminderTimes: number[]; // hours before event\r\n  };\r\n}\r\n\r\nconst CreateEvent = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const { canCreateEvents } = usePermissions();\r\n  \r\n  const [formData, setFormData] = useState<EventFormData>({\r\n    title: '',\r\n    description: '',\r\n    type: 'meeting',\r\n    startDate: '',\r\n    endDate: '',\r\n    location: {\r\n      type: 'physical',\r\n      name: '',\r\n      address: '',\r\n      virtualLink: ''\r\n    },\r\n    maxParticipants: undefined,\r\n    isPrivate: false,\r\n    requiresApproval: false,\r\n    allowLateRegistration: true,\r\n    tags: [],\r\n    participants: [],\r\n    settings: {\r\n      allowQRCode: true,\r\n      allowGeolocation: true,\r\n      allowManualCheckIn: true,\r\n      checkInWindow: 30,\r\n      sendReminders: true,\r\n      reminderTimes: [24, 1] // 24h and 1h before\r\n    }\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [availableUsers, setAvailableUsers] = useState<User[]>([]);\r\n  const [searchingUsers, setSearchingUsers] = useState(false);\r\n  const [userSearchTerm, setUserSearchTerm] = useState('');\r\n  const [newTag, setNewTag] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!canCreateEvents) {\r\n      navigate('/events');\r\n      return;\r\n    }\r\n    loadUsers();\r\n  }, [canCreateEvents]);\r\n\r\n  const loadUsers = async () => {\r\n    try {\r\n      setSearchingUsers(true);\r\n      const response = await userService.getUsers({ limit: 100 });\r\n      if (response.success && response.data) {\r\n        setAvailableUsers(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading users:', error);\r\n    } finally {\r\n      setSearchingUsers(false);\r\n    }\r\n  };  const\r\n validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = 'Le titre est requis';\r\n    }\r\n\r\n    if (!formData.startDate) {\r\n      newErrors.startDate = 'La date de début est requise';\r\n    }\r\n\r\n    if (!formData.endDate) {\r\n      newErrors.endDate = 'La date de fin est requise';\r\n    }\r\n\r\n    if (formData.startDate && formData.endDate) {\r\n      if (new Date(formData.startDate) >= new Date(formData.endDate)) {\r\n        newErrors.endDate = 'La date de fin doit être après la date de début';\r\n      }\r\n    }\r\n\r\n    if (!formData.location.name.trim()) {\r\n      newErrors.locationName = 'Le nom du lieu est requis';\r\n    }\r\n\r\n    if (formData.location.type === 'virtual' && !formData.location.virtualLink?.trim()) {\r\n      newErrors.virtualLink = 'Le lien virtuel est requis pour un événement virtuel';\r\n    }\r\n\r\n    if (formData.maxParticipants && formData.maxParticipants < 1) {\r\n      newErrors.maxParticipants = 'Le nombre maximum de participants doit être supérieur à 0';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      toast.error('Veuillez corriger les erreurs dans le formulaire');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const eventData: CreateEventRequest = {\r\n        title: formData.title,\r\n        description: formData.description,\r\n        type: formData.type,\r\n        startDate: formData.startDate,\r\n        endDate: formData.endDate,\r\n        location: formData.location,\r\n        maxParticipants: formData.maxParticipants,\r\n        isPrivate: formData.isPrivate,\r\n        requiresApproval: formData.requiresApproval,\r\n        allowLateRegistration: formData.allowLateRegistration,\r\n        tags: formData.tags,\r\n        participants: formData.participants,\r\n        settings: formData.settings,\r\n        organizerId: user?.id || ''\r\n      };\r\n\r\n      const response = await eventService.createEvent(eventData);\r\n      \r\n      if (response.success && response.data) {\r\n        toast.success('Événement créé avec succès !');\r\n        navigate(`/events/${response.data.id}`);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error creating event:', error);\r\n      toast.error(error.message || 'Erreur lors de la création de l\\'événement');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field: string, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleLocationChange = (field: string, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      location: {\r\n        ...prev.location,\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSettingsChange = (field: string, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      settings: {\r\n        ...prev.settings,\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const addTag = () => {\r\n    if (newTag.trim() && !formData.tags.includes(newTag.trim())) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        tags: [...prev.tags, newTag.trim()]\r\n      }));\r\n      setNewTag('');\r\n    }\r\n  };\r\n\r\n  const removeTag = (tagToRemove: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\r\n    }));\r\n  };\r\n\r\n  const addParticipant = (userId: string) => {\r\n    if (!formData.participants.includes(userId)) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        participants: [...prev.participants, userId]\r\n      }));\r\n    }\r\n  };\r\n\r\n  const removeParticipant = (userId: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      participants: prev.participants.filter(id => id !== userId)\r\n    }));\r\n  };\r\n\r\n  const filteredUsers = availableUsers.filter(user => \r\n    !formData.participants.includes(user.id) &&\r\n    (user.displayName?.toLowerCase().includes(userSearchTerm.toLowerCase()) ||\r\n     user.firstName?.toLowerCase().includes(userSearchTerm.toLowerCase()) ||\r\n     user.lastName?.toLowerCase().includes(userSearchTerm.toLowerCase()) ||\r\n     user.email.toLowerCase().includes(userSearchTerm.toLowerCase()))\r\n  );\r\n\r\n  const selectedUsers = availableUsers.filter(user => \r\n    formData.participants.includes(user.id)\r\n  );\r\n\r\n  if (!canCreateEvents) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <Alert variant=\"destructive\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          <AlertDescription>\r\n            Vous n'avez pas les permissions pour créer des événements.\r\n          </AlertDescription>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }  r\r\neturn (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <Button variant=\"outline\" size=\"sm\" onClick={() => navigate('/events')}>\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Retour aux événements\r\n          </Button>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-foreground\">Créer un événement</h1>\r\n            <p className=\"text-muted-foreground mt-1\">\r\n              Organisez un nouvel événement et invitez des participants\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          {/* Main Form */}\r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {/* Basic Information */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Informations de base</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <Label htmlFor=\"title\">Titre de l'événement *</Label>\r\n                  <Input\r\n                    id=\"title\"\r\n                    value={formData.title}\r\n                    onChange={(e) => handleInputChange('title', e.target.value)}\r\n                    placeholder=\"Ex: Réunion équipe marketing\"\r\n                    className={errors.title ? 'border-red-500' : ''}\r\n                  />\r\n                  {errors.title && (\r\n                    <p className=\"text-sm text-red-600 mt-1\">{errors.title}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"description\">Description</Label>\r\n                  <Textarea\r\n                    id=\"description\"\r\n                    value={formData.description}\r\n                    onChange={(e) => handleInputChange('description', e.target.value)}\r\n                    placeholder=\"Décrivez l'objectif et le contenu de l'événement...\"\r\n                    rows={4}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"type\">Type d'événement</Label>\r\n                    <Select value={formData.type} onValueChange={(value) => handleInputChange('type', value)}>\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"meeting\">Réunion</SelectItem>\r\n                        <SelectItem value=\"training\">Formation</SelectItem>\r\n                        <SelectItem value=\"conference\">Conférence</SelectItem>\r\n                        <SelectItem value=\"workshop\">Atelier</SelectItem>\r\n                        <SelectItem value=\"seminar\">Séminaire</SelectItem>\r\n                        <SelectItem value=\"webinar\">Webinaire</SelectItem>\r\n                        <SelectItem value=\"other\">Autre</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"maxParticipants\">Nombre max de participants</Label>\r\n                    <Input\r\n                      id=\"maxParticipants\"\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      value={formData.maxParticipants || ''}\r\n                      onChange={(e) => handleInputChange('maxParticipants', e.target.value ? parseInt(e.target.value) : undefined)}\r\n                      placeholder=\"Illimité\"\r\n                      className={errors.maxParticipants ? 'border-red-500' : ''}\r\n                    />\r\n                    {errors.maxParticipants && (\r\n                      <p className=\"text-sm text-red-600 mt-1\">{errors.maxParticipants}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Date and Time */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Calendar className=\"w-5 h-5 mr-2\" />\r\n                  Date et heure\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"startDate\">Date et heure de début *</Label>\r\n                    <Input\r\n                      id=\"startDate\"\r\n                      type=\"datetime-local\"\r\n                      value={formData.startDate}\r\n                      onChange={(e) => handleInputChange('startDate', e.target.value)}\r\n                      className={errors.startDate ? 'border-red-500' : ''}\r\n                    />\r\n                    {errors.startDate && (\r\n                      <p className=\"text-sm text-red-600 mt-1\">{errors.startDate}</p>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"endDate\">Date et heure de fin *</Label>\r\n                    <Input\r\n                      id=\"endDate\"\r\n                      type=\"datetime-local\"\r\n                      value={formData.endDate}\r\n                      onChange={(e) => handleInputChange('endDate', e.target.value)}\r\n                      className={errors.endDate ? 'border-red-500' : ''}\r\n                    />\r\n                    {errors.endDate && (\r\n                      <p className=\"text-sm text-red-600 mt-1\">{errors.endDate}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Location */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <MapPin className=\"w-5 h-5 mr-2\" />\r\n                  Lieu\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <Label>Type de lieu</Label>\r\n                  <Select value={formData.location.type} onValueChange={(value) => handleLocationChange('type', value)}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"physical\">Physique</SelectItem>\r\n                      <SelectItem value=\"virtual\">Virtuel</SelectItem>\r\n                      <SelectItem value=\"hybrid\">Hybride</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"locationName\">Nom du lieu *</Label>\r\n                  <Input\r\n                    id=\"locationName\"\r\n                    value={formData.location.name}\r\n                    onChange={(e) => handleLocationChange('name', e.target.value)}\r\n                    placeholder=\"Ex: Salle de conférence A, Zoom, Teams...\"\r\n                    className={errors.locationName ? 'border-red-500' : ''}\r\n                  />\r\n                  {errors.locationName && (\r\n                    <p className=\"text-sm text-red-600 mt-1\">{errors.locationName}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {(formData.location.type === 'physical' || formData.location.type === 'hybrid') && (\r\n                  <div>\r\n                    <Label htmlFor=\"address\">Adresse</Label>\r\n                    <Input\r\n                      id=\"address\"\r\n                      value={formData.location.address || ''}\r\n                      onChange={(e) => handleLocationChange('address', e.target.value)}\r\n                      placeholder=\"123 Rue de la Paix, 75001 Paris\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {(formData.location.type === 'virtual' || formData.location.type === 'hybrid') && (\r\n                  <div>\r\n                    <Label htmlFor=\"virtualLink\">Lien virtuel {formData.location.type === 'virtual' ? '*' : ''}</Label>\r\n                    <Input\r\n                      id=\"virtualLink\"\r\n                      value={formData.location.virtualLink || ''}\r\n                      onChange={(e) => handleLocationChange('virtualLink', e.target.value)}\r\n                      placeholder=\"https://zoom.us/j/123456789\"\r\n                      className={errors.virtualLink ? 'border-red-500' : ''}\r\n                    />\r\n                    {errors.virtualLink && (\r\n                      <p className=\"text-sm text-red-600 mt-1\">{errors.virtualLink}</p>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>       \r\n     {/* Participants */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Users className=\"w-5 h-5 mr-2\" />\r\n                  Participants\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {/* Search Users */}\r\n                <div>\r\n                  <Label>Rechercher et ajouter des participants</Label>\r\n                  <div className=\"relative\">\r\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n                    <Input\r\n                      placeholder=\"Rechercher par nom ou email...\"\r\n                      value={userSearchTerm}\r\n                      onChange={(e) => setUserSearchTerm(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Available Users */}\r\n                {userSearchTerm && (\r\n                  <div className=\"border rounded-lg p-4 max-h-48 overflow-y-auto\">\r\n                    <h4 className=\"font-medium mb-2\">Utilisateurs disponibles</h4>\r\n                    {filteredUsers.length > 0 ? (\r\n                      <div className=\"space-y-2\">\r\n                        {filteredUsers.slice(0, 10).map((user) => (\r\n                          <div key={user.id} className=\"flex items-center justify-between p-2 hover:bg-muted rounded\">\r\n                            <div>\r\n                              <p className=\"font-medium\">{user.displayName || `${user.firstName} ${user.lastName}`}</p>\r\n                              <p className=\"text-sm text-muted-foreground\">{user.email}</p>\r\n                            </div>\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              variant=\"outline\"\r\n                              onClick={() => addParticipant(user.id)}\r\n                            >\r\n                              <Plus className=\"w-4 h-4\" />\r\n                            </Button>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <p className=\"text-muted-foreground\">Aucun utilisateur trouvé</p>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Selected Participants */}\r\n                {selectedUsers.length > 0 && (\r\n                  <div>\r\n                    <h4 className=\"font-medium mb-2\">Participants sélectionnés ({selectedUsers.length})</h4>\r\n                    <div className=\"space-y-2\">\r\n                      {selectedUsers.map((user) => (\r\n                        <div key={user.id} className=\"flex items-center justify-between p-2 bg-muted rounded\">\r\n                          <div>\r\n                            <p className=\"font-medium\">{user.displayName || `${user.firstName} ${user.lastName}`}</p>\r\n                            <p className=\"text-sm text-muted-foreground\">{user.email}</p>\r\n                          </div>\r\n                          <Button\r\n                            type=\"button\"\r\n                            size=\"sm\"\r\n                            variant=\"outline\"\r\n                            onClick={() => removeParticipant(user.id)}\r\n                          >\r\n                            <X className=\"w-4 h-4\" />\r\n                          </Button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Tags */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Tags</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex space-x-2\">\r\n                  <Input\r\n                    placeholder=\"Ajouter un tag...\"\r\n                    value={newTag}\r\n                    onChange={(e) => setNewTag(e.target.value)}\r\n                    onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addTag())}\r\n                  />\r\n                  <Button type=\"button\" onClick={addTag} variant=\"outline\">\r\n                    <Plus className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </div>\r\n\r\n                {formData.tags.length > 0 && (\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {formData.tags.map((tag) => (\r\n                      <div key={tag} className=\"flex items-center bg-secondary text-secondary-foreground px-2 py-1 rounded-md text-sm\">\r\n                        {tag}\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeTag(tag)}\r\n                          className=\"ml-2 hover:text-destructive\"\r\n                        >\r\n                          <X className=\"w-3 h-3\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Sidebar */}\r\n          <div className=\"space-y-6\">\r\n            {/* Event Settings */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Paramètres</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id=\"isPrivate\"\r\n                      checked={formData.isPrivate}\r\n                      onCheckedChange={(checked) => handleInputChange('isPrivate', checked)}\r\n                    />\r\n                    <Label htmlFor=\"isPrivate\">Événement privé</Label>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id=\"requiresApproval\"\r\n                      checked={formData.requiresApproval}\r\n                      onCheckedChange={(checked) => handleInputChange('requiresApproval', checked)}\r\n                    />\r\n                    <Label htmlFor=\"requiresApproval\">Approbation requise</Label>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id=\"allowLateRegistration\"\r\n                      checked={formData.allowLateRegistration}\r\n                      onCheckedChange={(checked) => handleInputChange('allowLateRegistration', checked)}\r\n                    />\r\n                    <Label htmlFor=\"allowLateRegistration\">Inscription tardive autorisée</Label>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Attendance Settings */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Paramètres de présence</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id=\"allowQRCode\"\r\n                      checked={formData.settings.allowQRCode}\r\n                      onCheckedChange={(checked) => handleSettingsChange('allowQRCode', checked)}\r\n                    />\r\n                    <Label htmlFor=\"allowQRCode\">Code QR</Label>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id=\"allowGeolocation\"\r\n                      checked={formData.settings.allowGeolocation}\r\n                      onCheckedChange={(checked) => handleSettingsChange('allowGeolocation', checked)}\r\n                    />\r\n                    <Label htmlFor=\"allowGeolocation\">Géolocalisation</Label>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id=\"allowManualCheckIn\"\r\n                      checked={formData.settings.allowManualCheckIn}\r\n                      onCheckedChange={(checked) => handleSettingsChange('allowManualCheckIn', checked)}\r\n                    />\r\n                    <Label htmlFor=\"allowManualCheckIn\">Marquage manuel</Label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"checkInWindow\">Fenêtre de marquage (minutes)</Label>\r\n                  <Input\r\n                    id=\"checkInWindow\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    value={formData.settings.checkInWindow}\r\n                    onChange={(e) => handleSettingsChange('checkInWindow', parseInt(e.target.value))}\r\n                  />\r\n                  <p className=\"text-xs text-muted-foreground mt-1\">\r\n                    Temps avant/après l'événement pour marquer sa présence\r\n                  </p>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Reminder Settings */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Rappels</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox\r\n                    id=\"sendReminders\"\r\n                    checked={formData.settings.sendReminders}\r\n                    onCheckedChange={(checked) => handleSettingsChange('sendReminders', checked)}\r\n                  />\r\n                  <Label htmlFor=\"sendReminders\">Envoyer des rappels</Label>\r\n                </div>\r\n\r\n                {formData.settings.sendReminders && (\r\n                  <div>\r\n                    <Label>Heures avant l'événement</Label>\r\n                    <div className=\"space-y-2\">\r\n                      {[24, 12, 6, 1].map((hours) => (\r\n                        <div key={hours} className=\"flex items-center space-x-2\">\r\n                          <Checkbox\r\n                            id={`reminder-${hours}`}\r\n                            checked={formData.settings.reminderTimes.includes(hours)}\r\n                            onCheckedChange={(checked) => {\r\n                              if (checked) {\r\n                                handleSettingsChange('reminderTimes', [...formData.settings.reminderTimes, hours]);\r\n                              } else {\r\n                                handleSettingsChange('reminderTimes', formData.settings.reminderTimes.filter(h => h !== hours));\r\n                              }\r\n                            }}\r\n                          />\r\n                          <Label htmlFor={`reminder-${hours}`}>{hours}h avant</Label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Actions */}\r\n            <Card>\r\n              <CardContent className=\"pt-6\">\r\n                <div className=\"space-y-3\">\r\n                  <Button type=\"submit\" className=\"w-full\" disabled={loading}>\r\n                    <Save className=\"w-4 h-4 mr-2\" />\r\n                    {loading ? 'Création...' : 'Créer l\\'événement'}\r\n                  </Button>\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"w-full\"\r\n                    onClick={() => navigate('/events')}\r\n                  >\r\n                    Annuler\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEvent;"],"names":["CreateEvent","navigate","useNavigate","user","useAuth","canCreateEvents","usePermissions","formData","setFormData","useState","loading","setLoading","errors","setErrors","availableUsers","setAvailableUsers","searchingUsers","setSearchingUsers","userSearchTerm","setUserSearchTerm","newTag","setNewTag","useEffect","loadUsers","response","userService","error","validateForm","newErrors","_a","handleSubmit","e","toast","eventData","eventService","handleInputChange","field","value","prev","handleLocationChange","handleSettingsChange","addTag","removeTag","tagToRemove","tag","addParticipant","userId","removeParticipant","id","filteredUsers","selectedUsers","jsxs","Alert","jsx","AlertCircle","AlertDescription","Button","ArrowLeft","Card","CardHeader","CardTitle","CardContent","Label","Input","Textarea","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Calendar","MapPin","Users","Search","Plus","X","Checkbox","checked","hours","h","Save"],"mappings":"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"}