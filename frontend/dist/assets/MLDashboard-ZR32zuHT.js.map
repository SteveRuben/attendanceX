{"version":3,"file":"MLDashboard-ZR32zuHT.js","sources":["../../src/pages/Analytics/MLDashboard.tsx"],"sourcesContent":["// src/pages/Analytics/MLDashboard.tsx - Dashboard IA principal\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { \r\n  Brain, \r\n  TrendingUp, \r\n  Users, \r\n  Calendar, \r\n  AlertTriangle,\r\n  Target,\r\n  BarChart3,\r\n  Activity,\r\n  Zap,\r\n  Eye,\r\n  RefreshCw\r\n} from 'lucide-react';\r\nimport { \r\n  AttendancePredictionCard, \r\n  AnomalyAlert, \r\n  InsightsWidget, \r\n  RecommendationPanel \r\n} from '@/components/ml';\r\nimport { mlService } from '@/services';\r\nimport { useAuth } from '@/hooks/use-auth';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface MLStats {\r\n  totalPredictions: number;\r\n  accuracyRate: number;\r\n  modelUsage: Record<string, number>;\r\n  activeModels: number;\r\n  anomaliesDetected: number;\r\n  insightsGenerated: number;\r\n}\r\n\r\nconst MLDashboard = () => {\r\n  const { user } = useAuth();\r\n  const [stats, setStats] = useState<MLStats | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeframe, setTimeframe] = useState('7d');\r\n  const [selectedTab, setSelectedTab] = useState('overview');\r\n\r\n  useEffect(() => {\r\n    loadMLStats();\r\n  }, [timeframe]);\r\n\r\n  const loadMLStats = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const endDate = new Date();\r\n      const startDate = new Date();\r\n      \r\n      switch (timeframe) {\r\n        case '24h':\r\n          startDate.setDate(startDate.getDate() - 1);\r\n          break;\r\n        case '7d':\r\n          startDate.setDate(startDate.getDate() - 7);\r\n          break;\r\n        case '30d':\r\n          startDate.setDate(startDate.getDate() - 30);\r\n          break;\r\n        case '90d':\r\n          startDate.setDate(startDate.getDate() - 90);\r\n          break;\r\n      }\r\n\r\n      const [analyticsResponse, healthResponse] = await Promise.all([\r\n        mlService.getMLAnalytics({\r\n          timeframe: {\r\n            start: startDate.toISOString(),\r\n            end: endDate.toISOString()\r\n          }\r\n        }),\r\n        mlService.healthCheck()\r\n      ]);\r\n\r\n      if (analyticsResponse.success && healthResponse.success) {\r\n        setStats({\r\n          totalPredictions: analyticsResponse.data?.totalPredictions || 0,\r\n          accuracyRate: analyticsResponse.data?.accuracyRate || 0,\r\n          modelUsage: analyticsResponse.data?.modelUsage || {},\r\n          activeModels: healthResponse.data?.models?.active || 0,\r\n          anomaliesDetected: 12, // Simulation\r\n          insightsGenerated: 8 // Simulation\r\n        });\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading ML stats:', error);\r\n      toast.error('Erreur lors du chargement des statistiques IA');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getTimeframeLabel = (value: string) => {\r\n    const labels = {\r\n      '24h': 'Dernières 24h',\r\n      '7d': '7 derniers jours',\r\n      '30d': '30 derniers jours',\r\n      '90d': '90 derniers jours'\r\n    };\r\n    return labels[value as keyof typeof labels] || value;\r\n  };\r\n\r\n  if (loading && !stats) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <div className=\"animate-pulse space-y-6\">\r\n          <div className=\"h-8 bg-muted rounded w-1/3\"></div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n            {[...Array(4)].map((_, i) => (\r\n              <div key={i} className=\"h-32 bg-muted rounded\"></div>\r\n            ))}\r\n          </div>\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {[...Array(4)].map((_, i) => (\r\n              <div key={i} className=\"h-64 bg-muted rounded\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\r\n            <Brain className=\"w-8 h-8 mr-3 text-primary\" />\r\n            Dashboard IA\r\n          </h1>\r\n          <p className=\"text-muted-foreground mt-1\">\r\n            Intelligence artificielle et analytics avancés\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Select value={timeframe} onValueChange={setTimeframe}>\r\n            <SelectTrigger className=\"w-[180px]\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"24h\">Dernières 24h</SelectItem>\r\n              <SelectItem value=\"7d\">7 derniers jours</SelectItem>\r\n              <SelectItem value=\"30d\">30 derniers jours</SelectItem>\r\n              <SelectItem value=\"90d\">90 derniers jours</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n          <Button variant=\"outline\" onClick={loadMLStats}>\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Actualiser\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      {stats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-muted-foreground\">Prédictions</p>\r\n                  <p className=\"text-2xl font-bold\">{stats.totalPredictions.toLocaleString()}</p>\r\n                </div>\r\n                <div className=\"h-12 w-12 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <TrendingUp className=\"w-6 h-6 text-blue-600\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4 flex items-center text-sm\">\r\n                <Badge variant=\"outline\" className=\"text-xs\">\r\n                  {getTimeframeLabel(timeframe)}\r\n                </Badge>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-muted-foreground\">Précision IA</p>\r\n                  <p className=\"text-2xl font-bold\">{Math.round(stats.accuracyRate)}%</p>\r\n                </div>\r\n                <div className=\"h-12 w-12 bg-green-100 rounded-full flex items-center justify-center\">\r\n                  <Target className=\"w-6 h-6 text-green-600\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4 flex items-center text-sm\">\r\n                <Badge variant={stats.accuracyRate >= 80 ? \"default\" : \"secondary\"} className=\"text-xs\">\r\n                  {stats.accuracyRate >= 80 ? \"Excellente\" : \"Bonne\"}\r\n                </Badge>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-muted-foreground\">Modèles Actifs</p>\r\n                  <p className=\"text-2xl font-bold\">{stats.activeModels}</p>\r\n                </div>\r\n                <div className=\"h-12 w-12 bg-purple-100 rounded-full flex items-center justify-center\">\r\n                  <Brain className=\"w-6 h-6 text-purple-600\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4 flex items-center text-sm\">\r\n                <Badge variant=\"outline\" className=\"text-xs\">\r\n                  Opérationnels\r\n                </Badge>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-muted-foreground\">Anomalies</p>\r\n                  <p className=\"text-2xl font-bold\">{stats.anomaliesDetected}</p>\r\n                </div>\r\n                <div className=\"h-12 w-12 bg-red-100 rounded-full flex items-center justify-center\">\r\n                  <AlertTriangle className=\"w-6 h-6 text-red-600\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4 flex items-center text-sm\">\r\n                <Badge variant={stats.anomaliesDetected > 5 ? \"destructive\" : \"outline\"} className=\"text-xs\">\r\n                  {stats.anomaliesDetected > 5 ? \"Attention\" : \"Normal\"}\r\n                </Badge>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Content */}\r\n      <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-4\">\r\n          <TabsTrigger value=\"overview\" className=\"flex items-center\">\r\n            <Eye className=\"w-4 h-4 mr-2\" />\r\n            Vue d'ensemble\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"predictions\" className=\"flex items-center\">\r\n            <TrendingUp className=\"w-4 h-4 mr-2\" />\r\n            Prédictions\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"anomalies\" className=\"flex items-center\">\r\n            <AlertTriangle className=\"w-4 h-4 mr-2\" />\r\n            Anomalies\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"insights\" className=\"flex items-center\">\r\n            <Zap className=\"w-4 h-4 mr-2\" />\r\n            Insights\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Insights Widget */}\r\n            <InsightsWidget\r\n              type=\"global\"\r\n              timeframe={{\r\n                start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\r\n                end: new Date().toISOString()\r\n              }}\r\n              maxInsights={3}\r\n              showTrends={true}\r\n              showRecommendations={true}\r\n            />\r\n\r\n            {/* Anomaly Alert */}\r\n            <AnomalyAlert\r\n              type=\"attendance\"\r\n              timeframe={{\r\n                start: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n                end: new Date().toISOString()\r\n              }}\r\n              threshold={0.7}\r\n              autoRefresh={true}\r\n              refreshInterval={15}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Recommandations */}\r\n            <RecommendationPanel\r\n              type=\"global\"\r\n              targetId=\"system\"\r\n              maxRecommendations={3}\r\n              showPriority={true}\r\n              showActions={true}\r\n            />\r\n\r\n            {/* Exemple de prédiction */}\r\n            {user && (\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center\">\r\n                    <Users className=\"w-5 h-5 mr-2\" />\r\n                    Exemple de Prédiction\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-sm text-muted-foreground mb-4\">\r\n                    Voici un exemple de prédiction de présence pour votre profil\r\n                  </p>\r\n                  <AttendancePredictionCard\r\n                    userId={user.uid}\r\n                    eventId=\"example-event\"\r\n                    userName={user.displayName || 'Utilisateur'}\r\n                    compact={false}\r\n                    showFactors={true}\r\n                    showRecommendations={true}\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"predictions\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <TrendingUp className=\"w-5 h-5 mr-2\" />\r\n                Prédictions de Présence\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-12\">\r\n                <Brain className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-medium mb-2\">Prédictions Avancées</h3>\r\n                <p className=\"text-muted-foreground mb-4\">\r\n                  Sélectionnez un événement pour voir les prédictions de présence détaillées\r\n                </p>\r\n                <Button variant=\"outline\">\r\n                  Sélectionner un événement\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"anomalies\" className=\"space-y-6\">\r\n          <AnomalyAlert\r\n            type=\"attendance\"\r\n            timeframe={{\r\n              start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\r\n              end: new Date().toISOString()\r\n            }}\r\n            threshold={0.6}\r\n            autoRefresh={false}\r\n            compact={false}\r\n          />\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"insights\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <InsightsWidget\r\n              type=\"global\"\r\n              timeframe={{\r\n                start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\r\n                end: new Date().toISOString()\r\n              }}\r\n              maxInsights={5}\r\n              showTrends={true}\r\n              showRecommendations={true}\r\n              compact={false}\r\n            />\r\n\r\n            <InsightsWidget\r\n              type=\"department\"\r\n              targetId=\"engineering\"\r\n              timeframe={{\r\n                start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\r\n                end: new Date().toISOString()\r\n              }}\r\n              maxInsights={5}\r\n              showTrends={true}\r\n              showRecommendations={false}\r\n              compact={false}\r\n            />\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MLDashboard;"],"names":["MLDashboard","user","useAuth","stats","setStats","useState","loading","setLoading","timeframe","setTimeframe","selectedTab","setSelectedTab","useEffect","loadMLStats","endDate","startDate","analyticsResponse","healthResponse","mlService","_a","_b","_c","_e","_d","error","toast","getTimeframeLabel","value","jsxs","jsx","_","i","Brain","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","RefreshCw","Card","CardContent","TrendingUp","Badge","Target","AlertTriangle","Tabs","TabsList","TabsTrigger","Eye","Zap","TabsContent","InsightsWidget","AnomalyAlert","RecommendationPanel","CardHeader","CardTitle","Users","AttendancePredictionCard"],"mappings":"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"}