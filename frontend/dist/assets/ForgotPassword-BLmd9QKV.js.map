{"version":3,"file":"ForgotPassword-BLmd9QKV.js","sources":["../../src/pages/Auth/ForgotPassword.tsx"],"sourcesContent":["// src/pages/auth/ForgotPassword.tsx - Version moderne et optimisÃ©e\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { useAuth } from '@/hooks/use-auth';\r\nimport { Loader2, Mail, ArrowLeft, CheckCircle, Info, AlertCircle, Shield } from 'lucide-react';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  \r\n  const { forgotPassword, isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Redirect if already authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/dashboard', { replace: true });\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      newErrors.email = 'Please enter a valid email address';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n    \r\n    setLoading(true);\r\n    setErrors({});\r\n\r\n    try {\r\n      await forgotPassword(email);\r\n      setSent(true);\r\n    } catch (error: any) {\r\n      if (error.message.includes('User not found')) {\r\n        setErrors({ email: 'No account found with this email address' });\r\n      } else if (error.message.includes('Too many requests')) {\r\n        setErrors({ general: 'Too many reset attempts. Please try again later.' });\r\n      } else {\r\n        setErrors({ general: error.message || 'Failed to send recovery email. Please try again.' });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n    if (errors.email) {\r\n      setErrors(prev => ({ ...prev, email: '' }));\r\n    }\r\n  };\r\n\r\n  if (sent) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-md w-full\">\r\n          {/* Header */}\r\n          <div className=\"text-center mb-8\">\r\n            <div className=\"flex justify-center mb-6\">\r\n              <div className=\"w-12 h-12 bg-green-500 rounded-lg flex items-center justify-center\">\r\n                <CheckCircle className=\"text-white w-6 h-6\" />\r\n              </div>\r\n            </div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900\">Check your email</h1>\r\n            <p className=\"text-gray-600 mt-2\">We've sent a recovery link to your email</p>\r\n          </div>\r\n\r\n          {/* Success Card */}\r\n          <Card className=\"bg-white border-gray-200 shadow-sm\">\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"text-center space-y-4\">\r\n                <p className=\"text-gray-700\">\r\n                  We've sent a password recovery link to:\r\n                </p>\r\n                <p className=\"font-medium text-gray-900 bg-gray-50 p-3 rounded-lg\">\r\n                  {email}\r\n                </p>\r\n                \r\n                <Alert className=\"text-left\">\r\n                  <Info className=\"h-4 w-4\" />\r\n                  <AlertDescription>\r\n                    <strong>Tip:</strong> Check your spam folder if you don't receive the email within 5 minutes.\r\n                  </AlertDescription>\r\n                </Alert>\r\n                \r\n                <div className=\"pt-4\">\r\n                  <Button asChild className=\"w-full bg-gray-900 text-white hover:bg-gray-800 font-medium\">\r\n                    <Link to=\"/login\">\r\n                      <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n                      Back to sign in\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Footer */}\r\n          <div className=\"mt-8 text-center\">\r\n            <p className=\"text-sm text-gray-500\">\r\n              Didn't receive the email?{' '}\r\n              <button\r\n                onClick={() => setSent(false)}\r\n                className=\"text-gray-700 hover:text-gray-900 hover:underline font-medium\"\r\n              >\r\n                Try again\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"flex justify-center mb-6\">\r\n            <div className=\"w-12 h-12 bg-gray-900 rounded-lg flex items-center justify-center\">\r\n              <Shield className=\"text-white w-6 h-6\" />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Forgot password?</h1>\r\n          <p className=\"text-gray-600 mt-2\">Enter your email to receive a recovery link</p>\r\n        </div>\r\n\r\n        {/* Forgot Password Form */}\r\n        <Card className=\"bg-white border-gray-200 shadow-sm\">\r\n          <CardHeader className=\"space-y-1 pb-6\">\r\n            <CardTitle className=\"text-xl text-center text-gray-900\">Reset password</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {/* General Error */}\r\n            {errors.general && (\r\n              <Alert className=\"mb-4\" variant=\"destructive\">\r\n                <AlertCircle className=\"h-4 w-4\" />\r\n                <AlertDescription>{errors.general}</AlertDescription>\r\n              </Alert>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              <div>\r\n                <Label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                  Email address\r\n                </Label>\r\n                <div className=\"relative\">\r\n                  <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                  <Input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    autoComplete=\"email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={handleEmailChange}\r\n                    className={`pl-10 w-full ${errors.email ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                    placeholder=\"Enter your email address\"\r\n                  />\r\n                </div>\r\n                {errors.email && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\r\n                )}\r\n              </div>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"w-full bg-gray-900 text-white hover:bg-gray-800 font-medium\"\r\n              >\r\n                {loading ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin mr-2\" />\r\n                ) : (\r\n                  <Mail className=\"w-4 h-4 mr-2\" />\r\n                )}\r\n                {loading ? 'Sending...' : 'Send recovery link'}\r\n              </Button>\r\n            </form>\r\n\r\n            <div className=\"mt-6\">\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <div className=\"w-full border-t border-gray-200\" />\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                  <span className=\"px-2 bg-white text-gray-500\">Remember your password?</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-6 text-center\">\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"text-gray-700 hover:text-gray-900 font-medium hover:underline inline-flex items-center\"\r\n                >\r\n                  <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n                  Back to sign in\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;"],"names":["ForgotPassword","email","setEmail","useState","loading","setLoading","sent","setSent","errors","setErrors","forgotPassword","isAuthenticated","useAuth","navigate","useNavigate","useEffect","validateForm","newErrors","handleSubmit","e","error","handleEmailChange","prev","jsxs","jsx","CheckCircle","Card","CardContent","Alert","Info","AlertDescription","Button","Link","ArrowLeft","Shield","CardHeader","CardTitle","AlertCircle","Label","Mail","Input","Loader2"],"mappings":"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"}