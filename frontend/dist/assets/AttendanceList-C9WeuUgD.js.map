{"version":3,"file":"AttendanceList-C9WeuUgD.js","sources":["../../src/pages/Attendance/AttendanceList.tsx"],"sourcesContent":["// src/pages/Attendance/AttendanceList.tsx - Liste des présences avec filtres et statistiques\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth, usePermissions } from '@/hooks/use-auth';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\nimport { \r\n  CheckSquare, \r\n  Search, \r\n  Calendar, \r\n  Clock, \r\n  MapPin,\r\n  Users,\r\n  TrendingUp,\r\n  Filter,\r\n  Download,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertCircle,\r\n  Timer\r\n} from 'lucide-react';\r\nimport { attendanceService } from '@/services';\r\nimport type { Attendance, AttendanceStatus, AttendanceMethod } from '@attendance-x/shared';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface AttendanceFilters {\r\n  search: string;\r\n  status: AttendanceStatus | 'all';\r\n  method: AttendanceMethod | 'all';\r\n  eventId: string;\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\nconst AttendanceList = () => {\r\n  const { user } = useAuth();\r\n  const { canViewAttendances, canManageAttendances } = usePermissions();\r\n  const navigate = useNavigate();\r\n  \r\n  const [attendances, setAttendances] = useState<Attendance[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    total: 0,\r\n    present: 0,\r\n    absent: 0,\r\n    late: 0,\r\n    attendanceRate: 0\r\n  });\r\n  const [filters, setFilters] = useState<AttendanceFilters>({\r\n    search: '',\r\n    status: 'all',\r\n    method: 'all',\r\n    eventId: '',\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    limit: 20,\r\n    total: 0,\r\n    totalPages: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadAttendances();\r\n    loadStats();\r\n  }, [filters, pagination.page]);\r\n\r\n  const loadAttendances = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const params: any = {\r\n        page: pagination.page,\r\n        limit: pagination.limit,\r\n        sortBy: 'checkInTime',\r\n        sortOrder: 'desc'\r\n      };\r\n\r\n      if (filters.search) params.search = filters.search;\r\n      if (filters.status !== 'all') params.status = filters.status;\r\n      if (filters.method !== 'all') params.method = filters.method;\r\n      if (filters.eventId) params.eventId = filters.eventId;\r\n      if (filters.startDate) params.startDate = filters.startDate;\r\n      if (filters.endDate) params.endDate = filters.endDate;\r\n\r\n      const response = canViewAttendances \r\n        ? await attendanceService.getAttendances(params)\r\n        : await attendanceService.getMyAttendances(params);\r\n      \r\n      if (response.success && response.data) {\r\n        if (Array.isArray(response.data)) {\r\n          setAttendances(response.data);\r\n        } else {\r\n          setAttendances(response.data.data);\r\n          setPagination(prev => ({\r\n            ...prev,\r\n            total: response.data.pagination.total,\r\n            totalPages: response.data.pagination.totalPages\r\n          }));\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading attendances:', error);\r\n      toast.error('Erreur lors du chargement des présences');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadStats = async () => {\r\n    try {\r\n      const response = await attendanceService.getAttendanceStats();\r\n      if (response.success && response.data) {\r\n        setStats(response.data);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading stats:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (value: string) => {\r\n    setFilters(prev => ({ ...prev, search: value }));\r\n    setPagination(prev => ({ ...prev, page: 1 }));\r\n  };\r\n\r\n  const handleFilterChange = (key: keyof AttendanceFilters, value: any) => {\r\n    setFilters(prev => ({ ...prev, [key]: value }));\r\n    setPagination(prev => ({ ...prev, page: 1 }));\r\n  };\r\n\r\n  const getStatusBadge = (status: AttendanceStatus) => {\r\n    const statusConfig = {\r\n      present: { variant: 'default' as const, label: 'Présent', icon: CheckCircle },\r\n      absent: { variant: 'destructive' as const, label: 'Absent', icon: XCircle },\r\n      late: { variant: 'secondary' as const, label: 'En retard', icon: Timer },\r\n      excused: { variant: 'outline' as const, label: 'Excusé', icon: AlertCircle },\r\n      left_early: { variant: 'secondary' as const, label: 'Parti tôt', icon: Timer }\r\n    };\r\n\r\n    const config = statusConfig[status] || { variant: 'outline' as const, label: status, icon: AlertCircle };\r\n    const IconComponent = config.icon;\r\n    \r\n    return (\r\n      <Badge variant={config.variant} className=\"flex items-center gap-1\">\r\n        <IconComponent className=\"w-3 h-3\" />\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getMethodBadge = (method: AttendanceMethod) => {\r\n    const methodConfig = {\r\n      qr_code: { variant: 'default' as const, label: 'QR Code' },\r\n      geolocation: { variant: 'secondary' as const, label: 'Géolocalisation' },\r\n      manual: { variant: 'outline' as const, label: 'Manuel' },\r\n      biometric: { variant: 'default' as const, label: 'Biométrique' },\r\n      nfc: { variant: 'secondary' as const, label: 'NFC' }\r\n    };\r\n\r\n    const config = methodConfig[method] || { variant: 'outline' as const, label: method };\r\n    return <Badge variant={config.variant}>{config.label}</Badge>;\r\n  };\r\n\r\n  const getUserInitials = (user: any) => {\r\n    if (user?.firstName && user?.lastName) {\r\n      return `${user.firstName[0]}${user.lastName[0]}`.toUpperCase();\r\n    }\r\n    if (user?.displayName) {\r\n      const names = user.displayName.split(' ');\r\n      return names.length > 1 \r\n        ? `${names[0][0]}${names[1][0]}`.toUpperCase()\r\n        : names[0][0].toUpperCase();\r\n    }\r\n    return user?.email?.[0].toUpperCase() || 'U';\r\n  };\r\n\r\n  const formatDateTime = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('fr-FR', {\r\n      day: 'numeric',\r\n      month: 'short',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const handleExportAttendances = async () => {\r\n    try {\r\n      const response = await attendanceService.exportAttendances(filters, 'csv');\r\n      if (response.success) {\r\n        toast.success('Export en cours de téléchargement');\r\n        // Handle file download\r\n      }\r\n    } catch (error: any) {\r\n      toast.error('Erreur lors de l\\'export');\r\n    }\r\n  };\r\n\r\n  if (loading && attendances.length === 0) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <div className=\"animate-pulse space-y-6\">\r\n          <div className=\"h-8 bg-muted rounded w-1/3\"></div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n            {[...Array(4)].map((_, i) => (\r\n              <div key={i} className=\"h-24 bg-muted rounded\"></div>\r\n            ))}\r\n          </div>\r\n          <div className=\"grid gap-4\">\r\n            {[...Array(5)].map((_, i) => (\r\n              <div key={i} className=\"h-24 bg-muted rounded\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-foreground\">Présences</h1>\r\n          <p className=\"text-muted-foreground mt-1\">\r\n            Suivez et gérez les présences aux événements\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          {canViewAttendances && (\r\n            <Button variant=\"outline\" onClick={handleExportAttendances}>\r\n              <Download className=\"w-4 h-4 mr-2\" />\r\n              Exporter\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      {canViewAttendances && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <Card className=\"metric-card\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"metric-label\">Total présences</p>\r\n                  <p className=\"metric-value\">{stats.total}</p>\r\n                </div>\r\n                <CheckSquare className=\"w-8 h-8 text-blue-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"metric-card\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"metric-label\">Présents</p>\r\n                  <p className=\"metric-value\">{stats.present}</p>\r\n                </div>\r\n                <CheckCircle className=\"w-8 h-8 text-green-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"metric-card\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"metric-label\">Absents</p>\r\n                  <p className=\"metric-value\">{stats.absent}</p>\r\n                </div>\r\n                <XCircle className=\"w-8 h-8 text-red-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"metric-card\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"metric-label\">Taux de présence</p>\r\n                  <p className=\"metric-value\">{stats.attendanceRate.toFixed(1)}%</p>\r\n                </div>\r\n                <TrendingUp className=\"w-8 h-8 text-purple-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n              <Input\r\n                placeholder=\"Rechercher...\"\r\n                value={filters.search}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            \r\n            <Select value={filters.status} onValueChange={(value) => handleFilterChange('status', value)}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Statut\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">Tous les statuts</SelectItem>\r\n                <SelectItem value=\"present\">Présent</SelectItem>\r\n                <SelectItem value=\"absent\">Absent</SelectItem>\r\n                <SelectItem value=\"late\">En retard</SelectItem>\r\n                <SelectItem value=\"excused\">Excusé</SelectItem>\r\n                <SelectItem value=\"left_early\">Parti tôt</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Select value={filters.method} onValueChange={(value) => handleFilterChange('method', value)}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Méthode\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">Toutes les méthodes</SelectItem>\r\n                <SelectItem value=\"qr_code\">QR Code</SelectItem>\r\n                <SelectItem value=\"geolocation\">Géolocalisation</SelectItem>\r\n                <SelectItem value=\"manual\">Manuel</SelectItem>\r\n                <SelectItem value=\"biometric\">Biométrique</SelectItem>\r\n                <SelectItem value=\"nfc\">NFC</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Input\r\n              type=\"date\"\r\n              placeholder=\"Date de début\"\r\n              value={filters.startDate}\r\n              onChange={(e) => handleFilterChange('startDate', e.target.value)}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Attendances List */}\r\n      <div className=\"space-y-4\">\r\n        {attendances.length > 0 ? (\r\n          attendances.map((attendance) => (\r\n            <Card key={attendance.id} className=\"card-interactive\">\r\n              <CardContent className=\"p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <Avatar className=\"w-10 h-10\">\r\n                      <AvatarImage src={attendance.user?.profilePicture} />\r\n                      <AvatarFallback>{getUserInitials(attendance.user)}</AvatarFallback>\r\n                    </Avatar>\r\n                    \r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center space-x-3 mb-1\">\r\n                        <h3 className=\"font-semibold text-foreground\">\r\n                          {attendance.user?.displayName || \r\n                           `${attendance.user?.firstName} ${attendance.user?.lastName}` ||\r\n                           attendance.user?.email}\r\n                        </h3>\r\n                        {getStatusBadge(attendance.status)}\r\n                        {getMethodBadge(attendance.method)}\r\n                      </div>\r\n                      \r\n                      <div className=\"flex flex-wrap items-center gap-4 text-sm text-muted-foreground\">\r\n                        <div className=\"flex items-center\">\r\n                          <Calendar className=\"w-4 h-4 mr-1\" />\r\n                          {attendance.event?.title || 'Événement supprimé'}\r\n                        </div>\r\n                        {attendance.checkInTime && (\r\n                          <div className=\"flex items-center\">\r\n                            <Clock className=\"w-4 h-4 mr-1\" />\r\n                            {formatDateTime(attendance.checkInTime)}\r\n                          </div>\r\n                        )}\r\n                        {attendance.location && (\r\n                          <div className=\"flex items-center\">\r\n                            <MapPin className=\"w-4 h-4 mr-1\" />\r\n                            {attendance.location.name}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {attendance.event && (\r\n                      <Button variant=\"outline\" size=\"sm\" asChild>\r\n                        <Link to={`/events/${attendance.event.id}`}>\r\n                          Voir événement\r\n                        </Link>\r\n                      </Button>\r\n                    )}\r\n                    \r\n                    {canManageAttendances && attendance.validationStatus === 'pending' && (\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        Valider\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          <Card>\r\n            <CardContent className=\"p-12 text-center\">\r\n              <CheckSquare className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n              <h3 className=\"text-lg font-medium text-foreground mb-2\">\r\n                Aucune présence trouvée\r\n              </h3>\r\n              <p className=\"text-muted-foreground mb-4\">\r\n                {Object.values(filters).some(f => f && f !== 'all')\r\n                  ? 'Aucune présence ne correspond à vos critères de recherche.'\r\n                  : 'Aucune présence n\\'a encore été enregistrée.'\r\n                }\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {pagination.totalPages > 1 && (\r\n        <div className=\"flex items-center justify-between\">\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Affichage de {((pagination.page - 1) * pagination.limit) + 1} à{' '}\r\n            {Math.min(pagination.page * pagination.limit, pagination.total)} sur {pagination.total} présences\r\n          </p>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setPagination(prev => ({ ...prev, page: prev.page - 1 }))}\r\n              disabled={pagination.page === 1}\r\n            >\r\n              Précédent\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setPagination(prev => ({ ...prev, page: prev.page + 1 }))}\r\n              disabled={pagination.page === pagination.totalPages}\r\n            >\r\n              Suivant\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceList;"],"names":["AttendanceList","user","useAuth","canViewAttendances","canManageAttendances","usePermissions","useNavigate","attendances","setAttendances","useState","loading","setLoading","stats","setStats","filters","setFilters","pagination","setPagination","useEffect","loadAttendances","loadStats","params","response","attendanceService","prev","error","toast","handleSearch","value","handleFilterChange","key","getStatusBadge","status","config","CheckCircle","XCircle","Timer","AlertCircle","IconComponent","Badge","jsx","getMethodBadge","method","getUserInitials","names","formatDateTime","dateString","handleExportAttendances","jsxs","_","i","Button","Download","Card","CardContent","CheckSquare","TrendingUp","Search","Input","e","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","attendance","Avatar","AvatarImage","_a","AvatarFallback","_b","_c","_d","_e","Calendar","_f","Clock","MapPin","Link","f"],"mappings":"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"}