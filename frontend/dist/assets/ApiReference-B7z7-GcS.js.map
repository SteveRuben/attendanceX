{"version":3,"file":"ApiReference-B7z7-GcS.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/book.js","../../../node_modules/lucide-react/dist/esm/icons/chevron-right.js","../../../node_modules/lucide-react/dist/esm/icons/code.js","../../../node_modules/lucide-react/dist/esm/icons/external-link.js","../../src/pages/System/ApiReference.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20\",\n      key: \"k3hazp\"\n    }\n  ]\n];\nconst Book = createLucideIcon(\"book\", __iconNode);\n\nexport { __iconNode, Book as default };\n//# sourceMappingURL=book.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"m9 18 6-6-6-6\", key: \"mthhwq\" }]];\nconst ChevronRight = createLucideIcon(\"chevron-right\", __iconNode);\n\nexport { __iconNode, ChevronRight as default };\n//# sourceMappingURL=chevron-right.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m16 18 6-6-6-6\", key: \"eg8j8\" }],\n  [\"path\", { d: \"m8 6-6 6 6 6\", key: \"ppft3o\" }]\n];\nconst Code = createLucideIcon(\"code\", __iconNode);\n\nexport { __iconNode, Code as default };\n//# sourceMappingURL=code.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 3h6v6\", key: \"1q9fwt\" }],\n  [\"path\", { d: \"M10 14 21 3\", key: \"gplh6r\" }],\n  [\"path\", { d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\", key: \"a6xqqp\" }]\n];\nconst ExternalLink = createLucideIcon(\"external-link\", __iconNode);\n\nexport { __iconNode, ExternalLink as default };\n//# sourceMappingURL=external-link.js.map\n","import { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { \r\n  Search, \r\n  Code, \r\n  Book, \r\n  Server, \r\n  Key,\r\n  Copy,\r\n  ExternalLink,\r\n  ChevronDown,\r\n  ChevronRight,\r\n  Globe,\r\n  Lock,\r\n  Zap\r\n} from 'lucide-react';\r\nimport { apiService } from '@/services/apiService';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface ApiEndpoint {\r\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\r\n  path: string;\r\n  summary: string;\r\n  description: string;\r\n  tags: string[];\r\n  auth: boolean;\r\n  parameters?: ApiParameter[];\r\n  requestBody?: ApiRequestBody;\r\n  responses: ApiResponse[];\r\n  examples: ApiExample[];\r\n}\r\n\r\ninterface ApiParameter {\r\n  name: string;\r\n  in: 'query' | 'path' | 'header';\r\n  required: boolean;\r\n  type: string;\r\n  description: string;\r\n  example?: any;\r\n}\r\n\r\ninterface ApiRequestBody {\r\n  contentType: string;\r\n  schema: any;\r\n  example: any;\r\n}\r\n\r\ninterface ApiResponse {\r\n  status: number;\r\n  description: string;\r\n  schema?: any;\r\n  example?: any;\r\n}\r\n\r\ninterface ApiExample {\r\n  title: string;\r\n  request: any;\r\n  response: any;\r\n}\r\n\r\ninterface ApiInfo {\r\n  title: string;\r\n  version: string;\r\n  description: string;\r\n  baseUrl: string;\r\n  contact: {\r\n    name: string;\r\n    email: string;\r\n    url: string;\r\n  };\r\n  license: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n}\r\n\r\nconst ApiReference = () => {\r\n  const [apiInfo, setApiInfo] = useState<ApiInfo | null>(null);\r\n  const [endpoints, setEndpoints] = useState<ApiEndpoint[]>([]);\r\n  const [filteredEndpoints, setFilteredEndpoints] = useState<ApiEndpoint[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedTag, setSelectedTag] = useState<string>('all');\r\n  const [expandedEndpoints, setExpandedEndpoints] = useState<Set<string>>(new Set());\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchApiDocumentation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filterEndpoints();\r\n  }, [searchTerm, selectedTag, endpoints]);\r\n\r\n  const fetchApiDocumentation = async () => {\r\n    try {\r\n      // Simulate API documentation fetch\r\n      const mockApiInfo: ApiInfo = {\r\n        title: 'AttendanceX API',\r\n        version: '2.0.0',\r\n        description: 'Comprehensive API for attendance management with AI/ML capabilities, real-time analytics, and multi-channel notifications.',\r\n        baseUrl: 'https://api.attendance-x.app/v1',\r\n        contact: {\r\n          name: 'AttendanceX Support',\r\n          email: 'support@attendance-x.com',\r\n          url: 'https://docs.attendance-x.com'\r\n        },\r\n        license: {\r\n          name: 'MIT',\r\n          url: 'https://opensource.org/licenses/MIT'\r\n        }\r\n      };\r\n\r\n      const mockEndpoints: ApiEndpoint[] = [\r\n        // Auth endpoints\r\n        {\r\n          method: 'POST',\r\n          path: '/auth/login',\r\n          summary: 'User Login',\r\n          description: 'Authenticate user with email and password',\r\n          tags: ['Authentication'],\r\n          auth: false,\r\n          requestBody: {\r\n            contentType: 'application/json',\r\n            schema: {\r\n              type: 'object',\r\n              properties: {\r\n                email: { type: 'string', format: 'email' },\r\n                password: { type: 'string', minLength: 6 },\r\n                rememberMe: { type: 'boolean', default: false }\r\n              },\r\n              required: ['email', 'password']\r\n            },\r\n            example: {\r\n              email: 'user@example.com',\r\n              password: 'securePassword123',\r\n              rememberMe: true\r\n            }\r\n          },\r\n          responses: [\r\n            {\r\n              status: 200,\r\n              description: 'Login successful',\r\n              example: {\r\n                success: true,\r\n                data: {\r\n                  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\r\n                  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\r\n                  user: {\r\n                    id: 'user123',\r\n                    email: 'user@example.com',\r\n                    firstName: 'John',\r\n                    lastName: 'Doe'\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              status: 401,\r\n              description: 'Invalid credentials',\r\n              example: {\r\n                success: false,\r\n                error: 'Invalid email or password'\r\n              }\r\n            }\r\n          ],\r\n          examples: [\r\n            {\r\n              title: 'Standard Login',\r\n              request: {\r\n                email: 'user@example.com',\r\n                password: 'password123'\r\n              },\r\n              response: {\r\n                success: true,\r\n                data: {\r\n                  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\r\n                  user: { id: 'user123', email: 'user@example.com' }\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          method: 'POST',\r\n          path: '/auth/register',\r\n          summary: 'User Registration',\r\n          description: 'Register a new user account',\r\n          tags: ['Authentication'],\r\n          auth: false,\r\n          requestBody: {\r\n            contentType: 'application/json',\r\n            schema: {\r\n              type: 'object',\r\n              properties: {\r\n                email: { type: 'string', format: 'email' },\r\n                password: { type: 'string', minLength: 6 },\r\n                firstName: { type: 'string' },\r\n                lastName: { type: 'string' },\r\n                organization: { type: 'string' }\r\n              },\r\n              required: ['email', 'password', 'firstName', 'lastName', 'organization']\r\n            },\r\n            example: {\r\n              email: 'newuser@example.com',\r\n              password: 'securePassword123',\r\n              firstName: 'Jane',\r\n              lastName: 'Smith',\r\n              organization: 'Acme Corp'\r\n            }\r\n          },\r\n          responses: [\r\n            {\r\n              status: 201,\r\n              description: 'Registration successful',\r\n              example: {\r\n                success: true,\r\n                message: 'Registration successful. Check your email for verification.',\r\n                data: {\r\n                  email: 'newuser@example.com',\r\n                  verificationSent: true\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          examples: []\r\n        },\r\n        // Users endpoints\r\n        {\r\n          method: 'GET',\r\n          path: '/users',\r\n          summary: 'List Users',\r\n          description: 'Get a paginated list of users with optional filtering',\r\n          tags: ['Users'],\r\n          auth: true,\r\n          parameters: [\r\n            {\r\n              name: 'page',\r\n              in: 'query',\r\n              required: false,\r\n              type: 'integer',\r\n              description: 'Page number (default: 1)',\r\n              example: 1\r\n            },\r\n            {\r\n              name: 'limit',\r\n              in: 'query',\r\n              required: false,\r\n              type: 'integer',\r\n              description: 'Items per page (default: 20, max: 100)',\r\n              example: 20\r\n            },\r\n            {\r\n              name: 'search',\r\n              in: 'query',\r\n              required: false,\r\n              type: 'string',\r\n              description: 'Search term for name or email',\r\n              example: 'john'\r\n            },\r\n            {\r\n              name: 'role',\r\n              in: 'query',\r\n              required: false,\r\n              type: 'string',\r\n              description: 'Filter by user role',\r\n              example: 'admin'\r\n            }\r\n          ],\r\n          responses: [\r\n            {\r\n              status: 200,\r\n              description: 'Users retrieved successfully',\r\n              example: {\r\n                success: true,\r\n                data: {\r\n                  users: [\r\n                    {\r\n                      id: 'user123',\r\n                      email: 'user@example.com',\r\n                      firstName: 'John',\r\n                      lastName: 'Doe',\r\n                      role: 'participant',\r\n                      status: 'active'\r\n                    }\r\n                  ],\r\n                  pagination: {\r\n                    page: 1,\r\n                    limit: 20,\r\n                    total: 150,\r\n                    pages: 8\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          examples: []\r\n        },\r\n        // Events endpoints\r\n        {\r\n          method: 'POST',\r\n          path: '/events',\r\n          summary: 'Create Event',\r\n          description: 'Create a new event',\r\n          tags: ['Events'],\r\n          auth: true,\r\n          requestBody: {\r\n            contentType: 'application/json',\r\n            schema: {\r\n              type: 'object',\r\n              properties: {\r\n                title: { type: 'string' },\r\n                description: { type: 'string' },\r\n                startDateTime: { type: 'string', format: 'date-time' },\r\n                endDateTime: { type: 'string', format: 'date-time' },\r\n                location: { type: 'object' },\r\n                maxParticipants: { type: 'integer' }\r\n              },\r\n              required: ['title', 'startDateTime', 'endDateTime']\r\n            },\r\n            example: {\r\n              title: 'Team Meeting',\r\n              description: 'Weekly team sync meeting',\r\n              startDateTime: '2024-01-15T10:00:00Z',\r\n              endDateTime: '2024-01-15T11:00:00Z',\r\n              location: {\r\n                type: 'physical',\r\n                address: '123 Main St, Conference Room A'\r\n              },\r\n              maxParticipants: 20\r\n            }\r\n          },\r\n          responses: [\r\n            {\r\n              status: 201,\r\n              description: 'Event created successfully',\r\n              example: {\r\n                success: true,\r\n                data: {\r\n                  id: 'event123',\r\n                  title: 'Team Meeting',\r\n                  startDateTime: '2024-01-15T10:00:00Z',\r\n                  status: 'scheduled'\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          examples: []\r\n        },\r\n        // Attendance endpoints\r\n        {\r\n          method: 'POST',\r\n          path: '/attendances/mark',\r\n          summary: 'Mark Attendance',\r\n          description: 'Mark attendance for an event',\r\n          tags: ['Attendance'],\r\n          auth: true,\r\n          requestBody: {\r\n            contentType: 'application/json',\r\n            schema: {\r\n              type: 'object',\r\n              properties: {\r\n                eventId: { type: 'string' },\r\n                method: { type: 'string', enum: ['qr_code', 'geolocation', 'manual'] },\r\n                location: { type: 'object' },\r\n                notes: { type: 'string' }\r\n              },\r\n              required: ['eventId', 'method']\r\n            },\r\n            example: {\r\n              eventId: 'event123',\r\n              method: 'qr_code',\r\n              location: {\r\n                latitude: 40.7128,\r\n                longitude: -74.0060\r\n              },\r\n              notes: 'Arrived on time'\r\n            }\r\n          },\r\n          responses: [\r\n            {\r\n              status: 201,\r\n              description: 'Attendance marked successfully',\r\n              example: {\r\n                success: true,\r\n                data: {\r\n                  id: 'attendance123',\r\n                  eventId: 'event123',\r\n                  userId: 'user123',\r\n                  checkInTime: '2024-01-15T10:05:00Z',\r\n                  method: 'qr_code',\r\n                  status: 'present'\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          examples: []\r\n        }\r\n      ];\r\n\r\n      setApiInfo(mockApiInfo);\r\n      setEndpoints(mockEndpoints);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Failed to fetch API documentation:', error);\r\n      toast.error('Failed to load API documentation');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filterEndpoints = () => {\r\n    let filtered = endpoints;\r\n\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(endpoint =>\r\n        endpoint.path.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        endpoint.summary.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        endpoint.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (selectedTag !== 'all') {\r\n      filtered = filtered.filter(endpoint =>\r\n        endpoint.tags.includes(selectedTag)\r\n      );\r\n    }\r\n\r\n    setFilteredEndpoints(filtered);\r\n  };\r\n\r\n  const toggleEndpoint = (path: string) => {\r\n    const newExpanded = new Set(expandedEndpoints);\r\n    if (newExpanded.has(path)) {\r\n      newExpanded.delete(path);\r\n    } else {\r\n      newExpanded.add(path);\r\n    }\r\n    setExpandedEndpoints(newExpanded);\r\n  };\r\n\r\n  const copyToClipboard = (text: string) => {\r\n    navigator.clipboard.writeText(text);\r\n    toast.success('Copied to clipboard');\r\n  };\r\n\r\n  const getMethodColor = (method: string) => {\r\n    switch (method) {\r\n      case 'GET':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'POST':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'PUT':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'DELETE':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'PATCH':\r\n        return 'bg-purple-100 text-purple-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const allTags = ['all', ...Array.from(new Set(endpoints.flatMap(e => e.tags)))];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto p-6\">\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-4\"></div>\r\n            <p>Loading API documentation...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">API Reference</h1>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Complete documentation for the AttendanceX API\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <ExternalLink className=\"w-4 h-4 mr-2\" />\r\n            Postman Collection\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <Code className=\"w-4 h-4 mr-2\" />\r\n            OpenAPI Spec\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* API Info */}\r\n      {apiInfo && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <Book className=\"w-5 h-5\" />\r\n              <span>{apiInfo.title}</span>\r\n              <Badge variant=\"outline\">v{apiInfo.version}</Badge>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <p className=\"text-gray-600 mb-4\">{apiInfo.description}</p>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Base URL</p>\r\n                <div className=\"flex items-center space-x-2 mt-1\">\r\n                  <code className=\"text-sm bg-gray-100 px-2 py-1 rounded\">\r\n                    {apiInfo.baseUrl}\r\n                  </code>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"ghost\"\r\n                    onClick={() => copyToClipboard(apiInfo.baseUrl)}\r\n                  >\r\n                    <Copy className=\"w-3 h-3\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Contact</p>\r\n                <p className=\"text-sm mt-1\">\r\n                  <a href={`mailto:${apiInfo.contact.email}`} className=\"text-blue-600 hover:underline\">\r\n                    {apiInfo.contact.email}\r\n                  </a>\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">License</p>\r\n                <p className=\"text-sm mt-1\">\r\n                  <a href={apiInfo.license.url} className=\"text-blue-600 hover:underline\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {apiInfo.license.name}\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <Card>\r\n        <CardContent className=\"pt-6\">\r\n          <div className=\"flex flex-col md:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n                <Input\r\n                  placeholder=\"Search endpoints...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"pl-10\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {allTags.map(tag => (\r\n                <Button\r\n                  key={tag}\r\n                  variant={selectedTag === tag ? \"default\" : \"outline\"}\r\n                  size=\"sm\"\r\n                  onClick={() => setSelectedTag(tag)}\r\n                >\r\n                  {tag}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Endpoints */}\r\n      <div className=\"space-y-4\">\r\n        {filteredEndpoints.map((endpoint, index) => {\r\n          const isExpanded = expandedEndpoints.has(endpoint.path);\r\n          return (\r\n            <Card key={index}>\r\n              <CardHeader \r\n                className=\"cursor-pointer hover:bg-gray-50\"\r\n                onClick={() => toggleEndpoint(endpoint.path)}\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Badge className={getMethodColor(endpoint.method)}>\r\n                      {endpoint.method}\r\n                    </Badge>\r\n                    <code className=\"text-sm font-mono\">{endpoint.path}</code>\r\n                    <span className=\"font-medium\">{endpoint.summary}</span>\r\n                    {endpoint.auth && <Lock className=\"w-4 h-4 text-gray-400\" />}\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {endpoint.tags.map(tag => (\r\n                      <Badge key={tag} variant=\"outline\" className=\"text-xs\">\r\n                        {tag}\r\n                      </Badge>\r\n                    ))}\r\n                    {isExpanded ? <ChevronDown className=\"w-4 h-4\" /> : <ChevronRight className=\"w-4 h-4\" />}\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              \r\n              {isExpanded && (\r\n                <CardContent>\r\n                  <p className=\"text-gray-600 mb-4\">{endpoint.description}</p>\r\n                  \r\n                  <Tabs defaultValue=\"parameters\" className=\"w-full\">\r\n                    <TabsList>\r\n                      {endpoint.parameters && <TabsTrigger value=\"parameters\">Parameters</TabsTrigger>}\r\n                      {endpoint.requestBody && <TabsTrigger value=\"request\">Request</TabsTrigger>}\r\n                      <TabsTrigger value=\"responses\">Responses</TabsTrigger>\r\n                      {endpoint.examples.length > 0 && <TabsTrigger value=\"examples\">Examples</TabsTrigger>}\r\n                    </TabsList>\r\n                    \r\n                    {endpoint.parameters && (\r\n                      <TabsContent value=\"parameters\">\r\n                        <div className=\"space-y-2\">\r\n                          {endpoint.parameters.map((param, i) => (\r\n                            <div key={i} className=\"border rounded p-3\">\r\n                              <div className=\"flex items-center space-x-2 mb-2\">\r\n                                <code className=\"text-sm font-mono\">{param.name}</code>\r\n                                <Badge variant=\"outline\" className=\"text-xs\">{param.in}</Badge>\r\n                                <Badge variant=\"outline\" className=\"text-xs\">{param.type}</Badge>\r\n                                {param.required && <Badge variant=\"destructive\" className=\"text-xs\">required</Badge>}\r\n                              </div>\r\n                              <p className=\"text-sm text-gray-600\">{param.description}</p>\r\n                              {param.example && (\r\n                                <div className=\"mt-2\">\r\n                                  <p className=\"text-xs font-medium text-gray-500\">Example:</p>\r\n                                  <code className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\r\n                                    {JSON.stringify(param.example)}\r\n                                  </code>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </TabsContent>\r\n                    )}\r\n                    \r\n                    {endpoint.requestBody && (\r\n                      <TabsContent value=\"request\">\r\n                        <div className=\"space-y-4\">\r\n                          <div>\r\n                            <p className=\"text-sm font-medium mb-2\">Content-Type: {endpoint.requestBody.contentType}</p>\r\n                            <pre className=\"bg-gray-100 p-4 rounded text-sm overflow-x-auto\">\r\n                              <code>{JSON.stringify(endpoint.requestBody.example, null, 2)}</code>\r\n                            </pre>\r\n                          </div>\r\n                        </div>\r\n                      </TabsContent>\r\n                    )}\r\n                    \r\n                    <TabsContent value=\"responses\">\r\n                      <div className=\"space-y-4\">\r\n                        {endpoint.responses.map((response, i) => (\r\n                          <div key={i} className=\"border rounded p-4\">\r\n                            <div className=\"flex items-center space-x-2 mb-2\">\r\n                              <Badge variant={response.status < 300 ? \"default\" : \"destructive\"}>\r\n                                {response.status}\r\n                              </Badge>\r\n                              <span className=\"font-medium\">{response.description}</span>\r\n                            </div>\r\n                            {response.example && (\r\n                              <pre className=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto mt-2\">\r\n                                <code>{JSON.stringify(response.example, null, 2)}</code>\r\n                              </pre>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </TabsContent>\r\n                    \r\n                    {endpoint.examples.length > 0 && (\r\n                      <TabsContent value=\"examples\">\r\n                        <div className=\"space-y-4\">\r\n                          {endpoint.examples.map((example, i) => (\r\n                            <div key={i} className=\"border rounded p-4\">\r\n                              <h4 className=\"font-medium mb-3\">{example.title}</h4>\r\n                              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                <div>\r\n                                  <p className=\"text-sm font-medium mb-2\">Request</p>\r\n                                  <pre className=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto\">\r\n                                    <code>{JSON.stringify(example.request, null, 2)}</code>\r\n                                  </pre>\r\n                                </div>\r\n                                <div>\r\n                                  <p className=\"text-sm font-medium mb-2\">Response</p>\r\n                                  <pre className=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto\">\r\n                                    <code>{JSON.stringify(example.response, null, 2)}</code>\r\n                                  </pre>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </TabsContent>\r\n                    )}\r\n                  </Tabs>\r\n                </CardContent>\r\n              )}\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {filteredEndpoints.length === 0 && (\r\n        <Card>\r\n          <CardContent className=\"text-center py-8\">\r\n            <p className=\"text-gray-500\">No endpoints found matching your search criteria.</p>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Footer */}\r\n      <Alert>\r\n        <Key className=\"h-4 w-4\" />\r\n        <AlertDescription>\r\n          Most endpoints require authentication. Include your API key in the Authorization header: \r\n          <code className=\"ml-1 bg-gray-100 px-2 py-1 rounded text-sm\">Bearer YOUR_API_KEY</code>\r\n        </AlertDescription>\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiReference;"],"names":["__iconNode","Book","createLucideIcon","ChevronRight","Code","ExternalLink","ApiReference","apiInfo","setApiInfo","useState","endpoints","setEndpoints","filteredEndpoints","setFilteredEndpoints","searchTerm","setSearchTerm","selectedTag","setSelectedTag","expandedEndpoints","setExpandedEndpoints","loading","setLoading","useEffect","fetchApiDocumentation","filterEndpoints","mockApiInfo","mockEndpoints","error","toast","filtered","endpoint","toggleEndpoint","path","newExpanded","copyToClipboard","text","getMethodColor","method","allTags","e","jsx","jsxs","Button","Card","CardHeader","CardTitle","Badge","CardContent","Copy","Search","Input","tag","index","isExpanded","Lock","ChevronDown","Tabs","TabsList","TabsTrigger","TabsContent","param","i","response","example","Alert","Key","AlertDescription"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}