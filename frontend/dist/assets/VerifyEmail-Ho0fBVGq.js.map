{"version":3,"file":"VerifyEmail-Ho0fBVGq.js","sources":["../../src/pages/Auth/VerifyEmail.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Link, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { useAuth } from '@/hooks/use-auth';\r\nimport { \r\n  CheckCircle, \r\n  AlertCircle, \r\n  Loader2, \r\n  Mail, \r\n  ArrowRight,\r\n  Shield,\r\n  RefreshCw,\r\n  Clock,\r\n  XCircle\r\n} from 'lucide-react';\r\n\r\nconst VerifyEmail = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const { verifyEmail, resendEmailVerification } = useAuth();\r\n  \r\n  const [status, setStatus] = useState<'loading' | 'success' | 'error' | 'expired' | 'invalid' | 'used'>('loading');\r\n  const [message, setMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [resending, setResending] = useState(false);\r\n  const [redirectCountdown, setRedirectCountdown] = useState(5);\r\n\r\n  const token = searchParams.get('token');\r\n\r\n  useEffect(() => {\r\n    const handleVerification = async () => {\r\n      if (!token) {\r\n        setStatus('invalid');\r\n        setMessage('Aucun token de vérification fourni. Veuillez vérifier le lien dans votre email.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setStatus('loading');\r\n        setMessage('Vérification de votre adresse email en cours...');\r\n        \r\n        await verifyEmail(token);\r\n        setStatus('success');\r\n        setMessage('Votre adresse email a été vérifiée avec succès ! Vous pouvez maintenant vous connecter.');\r\n        \r\n        // Start countdown for redirect\r\n        const countdownInterval = setInterval(() => {\r\n          setRedirectCountdown((prev) => {\r\n            if (prev <= 1) {\r\n              clearInterval(countdownInterval);\r\n              navigate('/login', { \r\n                replace: true,\r\n                state: { \r\n                  message: 'Email vérifié ! Vous pouvez maintenant vous connecter.',\r\n                  type: 'success'\r\n                }\r\n              });\r\n              return 0;\r\n            }\r\n            return prev - 1;\r\n          });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(countdownInterval);\r\n      } catch (error: any) {\r\n        console.error('Email verification error:', error);\r\n        \r\n        // Handle different error types based on backend error codes\r\n        if (error.message.includes('VERIFICATION_TOKEN_EXPIRED') || error.message.includes('expired')) {\r\n          setStatus('expired');\r\n          setMessage('Ce lien de vérification a expiré. Les liens de vérification sont valides pendant 24 heures pour des raisons de sécurité.');\r\n        } else if (error.message.includes('VERIFICATION_TOKEN_USED') || error.message.includes('used')) {\r\n          setStatus('used');\r\n          setMessage('Ce lien de vérification a déjà été utilisé. Votre email est peut-être déjà vérifié.');\r\n        } else if (error.message.includes('INVALID_VERIFICATION_TOKEN') || error.message.includes('invalid')) {\r\n          setStatus('invalid');\r\n          setMessage('Ce lien de vérification est invalide. Veuillez vérifier le lien dans votre email ou demander un nouveau lien.');\r\n        } else if (error.message.includes('EMAIL_NOT_VERIFIED')) {\r\n          setStatus('error');\r\n          setMessage('Erreur lors de la vérification. Veuillez réessayer ou demander un nouveau lien de vérification.');\r\n        } else {\r\n          setStatus('error');\r\n          setMessage(error.message || 'Une erreur inattendue s\\'est produite lors de la vérification. Veuillez réessayer.');\r\n        }\r\n      }\r\n    };\r\n\r\n    handleVerification();\r\n  }, [token, verifyEmail, navigate]);\r\n\r\n  const handleResendVerification = async () => {\r\n    if (!email.trim()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setResending(true);\r\n      await resendEmailVerification(email);\r\n      setMessage('Un nouveau lien de vérification a été envoyé à votre adresse email.');\r\n    } catch (error: any) {\r\n      console.error('Resend verification error:', error);\r\n      // Error is handled by the hook with toast, but we can also show inline message\r\n      if (error.message.includes('rate limit') || error.message.includes('too many')) {\r\n        setMessage('Trop de tentatives. Veuillez attendre avant de demander un nouveau lien.');\r\n      }\r\n    } finally {\r\n      setResending(false);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    switch (status) {\r\n      case 'loading':\r\n        return <Loader2 className=\"w-8 h-8 animate-spin text-blue-600\" />;\r\n      case 'success':\r\n        return <CheckCircle className=\"w-8 h-8 text-green-600\" />;\r\n      case 'expired':\r\n        return <Clock className=\"w-8 h-8 text-orange-600\" />;\r\n      case 'used':\r\n        return <CheckCircle className=\"w-8 h-8 text-gray-600\" />;\r\n      case 'invalid':\r\n        return <XCircle className=\"w-8 h-8 text-red-600\" />;\r\n      case 'error':\r\n        return <AlertCircle className=\"w-8 h-8 text-red-600\" />;\r\n      default:\r\n        return <Mail className=\"w-8 h-8 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    switch (status) {\r\n      case 'loading':\r\n        return 'border-blue-200 bg-blue-50';\r\n      case 'success':\r\n        return 'border-green-200 bg-green-50';\r\n      case 'expired':\r\n        return 'border-orange-200 bg-orange-50';\r\n      case 'used':\r\n        return 'border-gray-200 bg-gray-50';\r\n      case 'invalid':\r\n      case 'error':\r\n        return 'border-red-200 bg-red-50';\r\n      default:\r\n        return 'border-gray-200 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const getTitle = () => {\r\n    switch (status) {\r\n      case 'loading':\r\n        return 'Vérification en cours...';\r\n      case 'success':\r\n        return 'Email vérifié !';\r\n      case 'expired':\r\n        return 'Lien expiré';\r\n      case 'used':\r\n        return 'Lien déjà utilisé';\r\n      case 'invalid':\r\n        return 'Lien invalide';\r\n      case 'error':\r\n        return 'Erreur de vérification';\r\n      default:\r\n        return 'Vérification d\\'email';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"flex justify-center mb-6\">\r\n            <div className=\"w-16 h-16 bg-white rounded-lg flex items-center justify-center shadow-sm border\">\r\n              {getStatusIcon()}\r\n            </div>\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">{getTitle()}</h1>\r\n          <p className=\"text-gray-600 mt-2\">\r\n            {status === 'loading' && 'Veuillez patienter pendant que nous vérifions votre adresse email'}\r\n            {status === 'success' && `Redirection vers la connexion dans ${redirectCountdown} seconde${redirectCountdown > 1 ? 's' : ''}`}\r\n            {status === 'expired' && 'Le lien de vérification a expiré'}\r\n            {status === 'used' && 'Ce lien a déjà été utilisé'}\r\n            {status === 'invalid' && 'Le lien de vérification est invalide'}\r\n            {status === 'error' && 'Une erreur s\\'est produite lors de la vérification'}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Status Card */}\r\n        <Card className=\"bg-white border-gray-200 shadow-sm\">\r\n          <CardHeader className=\"space-y-1 pb-6\">\r\n            <CardTitle className=\"text-xl text-center text-gray-900\">\r\n              Vérification d'email\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            {/* Status Message */}\r\n            <Alert className={getStatusColor()}>\r\n              {status === 'success' ? (\r\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n              ) : status === 'loading' ? (\r\n                <Loader2 className=\"h-4 w-4 animate-spin text-blue-600\" />\r\n              ) : status === 'expired' ? (\r\n                <Clock className=\"h-4 w-4 text-orange-600\" />\r\n              ) : status === 'used' ? (\r\n                <CheckCircle className=\"h-4 w-4 text-gray-600\" />\r\n              ) : status === 'invalid' ? (\r\n                <XCircle className=\"h-4 w-4 text-red-600\" />\r\n              ) : (\r\n                <AlertCircle className=\"h-4 w-4 text-red-600\" />\r\n              )}\r\n              <AlertDescription className=\"text-gray-700\">\r\n                {message}\r\n              </AlertDescription>\r\n            </Alert>\r\n\r\n            {/* Success Actions */}\r\n            {status === 'success' && (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"bg-green-50 rounded-lg p-4\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <CheckCircle className=\"w-5 h-5 text-green-600\" />\r\n                    <div>\r\n                      <p className=\"text-sm font-medium text-green-900\">Compte activé</p>\r\n                      <p className=\"text-sm text-green-700\">Vous pouvez maintenant vous connecter à votre compte</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"bg-blue-50 rounded-lg p-4\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Clock className=\"w-5 h-5 text-blue-600\" />\r\n                    <div>\r\n                      <p className=\"text-sm font-medium text-blue-900\">Redirection automatique</p>\r\n                      <p className=\"text-sm text-blue-700\">\r\n                        Vous serez redirigé vers la page de connexion dans {redirectCountdown} seconde{redirectCountdown > 1 ? 's' : ''}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <Button\r\n                  asChild\r\n                  className=\"w-full bg-gray-900 text-white hover:bg-gray-800\"\r\n                >\r\n                  <Link to=\"/login\">\r\n                    <ArrowRight className=\"w-4 h-4 mr-2\" />\r\n                    Aller à la connexion maintenant\r\n                  </Link>\r\n                </Button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Error Actions */}\r\n            {(status === 'error' || status === 'expired' || status === 'invalid' || status === 'used') && (\r\n              <div className=\"space-y-4\">\r\n                {/* Expired Token Actions */}\r\n                {status === 'expired' && (\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"bg-orange-50 rounded-lg p-4\">\r\n                      <div className=\"flex items-start space-x-3\">\r\n                        <Clock className=\"w-5 h-5 text-orange-600 mt-0.5\" />\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-orange-900\">Lien expiré</p>\r\n                          <p className=\"text-sm text-orange-700\">\r\n                            Les liens de vérification expirent après 24 heures pour des raisons de sécurité.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"space-y-2\">\r\n                      <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                        Adresse email\r\n                      </label>\r\n                      <input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Entrez votre adresse email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-500 focus:border-transparent\"\r\n                        disabled={resending}\r\n                      />\r\n                      \r\n                      <Button\r\n                        onClick={handleResendVerification}\r\n                        disabled={resending || !email.trim()}\r\n                        variant=\"outline\"\r\n                        className=\"w-full\"\r\n                      >\r\n                        {resending ? (\r\n                          <RefreshCw className=\"w-4 h-4 animate-spin mr-2\" />\r\n                        ) : (\r\n                          <Mail className=\"w-4 h-4 mr-2\" />\r\n                        )}\r\n                        {resending ? 'Envoi en cours...' : 'Envoyer un nouveau lien de vérification'}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Already Used Token */}\r\n                {status === 'used' && (\r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-start space-x-3\">\r\n                      <CheckCircle className=\"w-5 h-5 text-gray-600 mt-0.5\" />\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-900\">Lien déjà utilisé</p>\r\n                        <p className=\"text-sm text-gray-700\">\r\n                          Ce lien de vérification a déjà été utilisé. Votre email est peut-être déjà vérifié.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Invalid Token */}\r\n                {status === 'invalid' && (\r\n                  <div className=\"bg-red-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-start space-x-3\">\r\n                      <XCircle className=\"w-5 h-5 text-red-600 mt-0.5\" />\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-red-900\">Lien invalide</p>\r\n                        <p className=\"text-sm text-red-700\">\r\n                          Ce lien de vérification est invalide. Veuillez vérifier le lien dans votre email.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* General Error */}\r\n                {status === 'error' && (\r\n                  <div className=\"bg-red-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-start space-x-3\">\r\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5\" />\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-red-900\">Erreur de vérification</p>\r\n                        <p className=\"text-sm text-red-700\">\r\n                          Une erreur s'est produite lors de la vérification. Veuillez réessayer.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"space-y-2\">\r\n                  <Button\r\n                    asChild\r\n                    className=\"w-full bg-gray-900 text-white hover:bg-gray-800\"\r\n                  >\r\n                    <Link to=\"/login\">\r\n                      <ArrowRight className=\"w-4 h-4 mr-2\" />\r\n                      Essayer de se connecter\r\n                    </Link>\r\n                  </Button>\r\n                  \r\n                  <Button\r\n                    asChild\r\n                    variant=\"outline\"\r\n                    className=\"w-full\"\r\n                  >\r\n                    <Link to=\"/register\">\r\n                      Retour à l'inscription\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Loading State */}\r\n            {status === 'loading' && (\r\n              <div className=\"text-center py-8\">\r\n                <div className=\"bg-blue-50 rounded-lg p-6\">\r\n                  <Loader2 className=\"w-8 h-8 animate-spin text-blue-600 mx-auto mb-4\" />\r\n                  <p className=\"text-sm font-medium text-blue-900 mb-2\">\r\n                    Vérification en cours...\r\n                  </p>\r\n                  <p className=\"text-sm text-blue-700\">\r\n                    Cela peut prendre quelques instants. Veuillez ne pas fermer cette page.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Security Note */}\r\n        <div className=\"mt-6 text-center\">\r\n          <div className=\"flex items-center justify-center space-x-2 text-sm text-gray-500\">\r\n            <Shield className=\"w-4 h-4\" />\r\n            <span>Vérification sécurisée par AttendanceX</span>\r\n          </div>\r\n          \r\n          {/* Help Text */}\r\n          <div className=\"mt-4 text-xs text-gray-400\">\r\n            <p>Besoin d'aide ? Contactez-nous à support@attendance-x.com</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;"],"names":["VerifyEmail","searchParams","useSearchParams","navigate","useNavigate","verifyEmail","resendEmailVerification","useAuth","status","setStatus","useState","message","setMessage","email","setEmail","resending","setResending","redirectCountdown","setRedirectCountdown","token","useEffect","countdownInterval","prev","error","handleResendVerification","getStatusIcon","jsx","Loader2","CheckCircle","Clock","XCircle","AlertCircle","Mail","getStatusColor","getTitle","jsxs","Card","CardHeader","CardTitle","CardContent","Alert","AlertDescription","Button","Link","ArrowRight","e","RefreshCw","Shield"],"mappings":"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"}