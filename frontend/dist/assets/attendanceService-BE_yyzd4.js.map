{"version":3,"file":"attendanceService-BE_yyzd4.js","sources":["../../src/services/attendanceService.ts"],"sourcesContent":["// src/services/attendanceService.ts - Service pour la gestion des pr√©sences\r\nimport { apiService, type ApiResponse, type PaginatedResponse } from './apiService';\r\nimport { AttendanceMethod, AttendanceStatus, type AttendanceRecord } from '@attendance-x/shared';\r\n\r\nexport interface AttendanceSearchFilters {\r\n  page?: number;\r\n  limit?: number;\r\n  sortBy?: 'checkInTime' | 'createdAt' | 'status';\r\n  sortOrder?: 'asc' | 'desc';\r\n  eventId?: string;\r\n  userId?: string;\r\n  status?: AttendanceStatus;\r\n  method?: AttendanceMethod;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  validationStatus?: 'pending' | 'validated' | 'rejected';\r\n}\r\n\r\nexport interface AttendanceStats {\r\n  total: number;\r\n  present: number;\r\n  absent: number;\r\n  late: number;\r\n  excused: number;\r\n  attendanceRate: number;\r\n  averageCheckInTime: string;\r\n  byMethod: Record<AttendanceMethod, number>;\r\n  byStatus: Record<AttendanceStatus, number>;\r\n  trends: {\r\n    daily: Array<{ date: string; count: number; rate: number }>;\r\n    weekly: Array<{ week: string; count: number; rate: number }>;\r\n    monthly: Array<{ month: string; count: number; rate: number }>;\r\n  };\r\n}\r\n\r\nexport interface AttendancePatterns {\r\n  userId: string;\r\n  userName: string;\r\n  patterns: {\r\n    preferredCheckInTime: string;\r\n    averageLateness: number;\r\n    attendanceStreak: number;\r\n    mostActiveDay: string;\r\n    mostActiveHour: number;\r\n    reliability: number; // 0-100\r\n  };\r\n  insights: string[];\r\n  recommendations: string[];\r\n}\r\n\r\nexport interface CheckInRequest {\r\n  eventId: string;\r\n  method: AttendanceMethod;\r\n  location?: {\r\n    latitude: number;\r\n    longitude: number;\r\n    accuracy?: number;\r\n  };\r\n  qrCode?: string;\r\n  biometricData?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface RealtimeMetrics {\r\n  eventId: string;\r\n  totalExpected: number;\r\n  currentAttendees: number;\r\n  attendanceRate: number;\r\n  lateArrivals: number;\r\n  recentCheckIns: Array<{\r\n    userId: string;\r\n    userName: string;\r\n    checkInTime: string;\r\n    method: AttendanceMethod;\r\n  }>;\r\n  hourlyBreakdown: Array<{\r\n    hour: number;\r\n    checkIns: number;\r\n    cumulative: number;\r\n  }>;\r\n}\r\n\r\nclass AttendanceService {\r\n  // Check-in to event\r\n  async checkIn(data: CheckInRequest): Promise<ApiResponse<AttendanceRecord>> {\r\n    return apiService.post<AttendanceRecord>('/attendances/check-in', data);\r\n  }\r\n\r\n  // Get attendances with filters\r\n  async getAttendances(filters: AttendanceSearchFilters = {}): Promise<ApiResponse<PaginatedResponse<AttendanceRecord>>> {\r\n    return apiService.get<PaginatedResponse<AttendanceRecord>>('/attendances', filters);\r\n  }\r\n\r\n  // Get my attendances\r\n  async getMyAttendances(filters: {\r\n    startDate?: string;\r\n    endDate?: string;\r\n    limit?: number;\r\n    status?: AttendanceStatus;\r\n  } = {}): Promise<ApiResponse<AttendanceRecord[]>> {\r\n    return apiService.get<AttendanceRecord[]>('/attendances/my-attendances', filters);\r\n  }\r\n\r\n  // Get attendance by ID\r\n  async getAttendanceById(id: string): Promise<ApiResponse<AttendanceRecord>> {\r\n    return apiService.get<AttendanceRecord>(`/attendances/${id}`);\r\n  }\r\n\r\n  // Get attendance statistics\r\n  async getAttendanceStats(filters: {\r\n    userId?: string;\r\n    eventId?: string;\r\n    organizerId?: string;\r\n    startDate?: string;\r\n    endDate?: string;\r\n    department?: string;\r\n  } = {}): Promise<ApiResponse<AttendanceStats>> {\r\n    return apiService.get<AttendanceStats>('/attendances/stats', filters);\r\n  }\r\n\r\n  // Get attendance patterns\r\n  async getAttendancePatterns(userId?: string): Promise<ApiResponse<AttendancePatterns>> {\r\n    const endpoint = userId ? `/attendances/patterns/${userId}` : '/attendances/patterns';\r\n    return apiService.get<AttendancePatterns>(endpoint);\r\n  }\r\n\r\n  // Validate attendance (for managers/admins)\r\n  async validateAttendance(id: string, approved: boolean, notes?: string): Promise<ApiResponse<AttendanceRecord>> {\r\n    return apiService.post<AttendanceRecord>(`/attendances/${id}/validate`, { approved, notes });\r\n  }\r\n\r\n  // Bulk validate attendances\r\n  async bulkValidateAttendances(attendanceIds: string[], approved: boolean, notes?: string): Promise<ApiResponse<void>> {\r\n    return apiService.post<void>('/attendances/bulk-validate', { attendanceIds, approved, notes });\r\n  }\r\n\r\n  // Bulk mark attendance\r\n  async bulkMarkAttendance(\r\n    operation: 'mark_present' | 'mark_absent' | 'mark_late',\r\n    eventId: string,\r\n    userIds: string[],\r\n    notes?: string\r\n  ): Promise<ApiResponse<void>> {\r\n    return apiService.post<void>('/attendances/bulk-mark', { operation, eventId, userIds, notes });\r\n  }\r\n\r\n  // Event-specific attendance methods\r\n  async getEventAttendances(eventId: string): Promise<ApiResponse<AttendanceRecord[]>> {\r\n    return apiService.get<AttendanceRecord[]>(`/attendances/events/${eventId}`);\r\n  }\r\n\r\n  async markAbsentees(eventId: string): Promise<ApiResponse<void>> {\r\n    return apiService.post<void>(`/attendances/events/${eventId}/mark-absentees`);\r\n  }\r\n\r\n  async getEventAttendanceReport(eventId: string): Promise<ApiResponse<any>> {\r\n    return apiService.get<any>(`/attendances/events/${eventId}/report`);\r\n  }\r\n\r\n  async getRealtimeMetrics(eventId: string): Promise<ApiResponse<RealtimeMetrics>> {\r\n    return apiService.get<RealtimeMetrics>(`/attendances/events/${eventId}/realtime-metrics`);\r\n  }\r\n\r\n  async synchronizeEventAttendances(eventId: string): Promise<ApiResponse<void>> {\r\n    return apiService.post<void>(`/attendances/events/${eventId}/synchronize`);\r\n  }\r\n\r\n  async diagnoseAttendanceIssues(eventId: string): Promise<ApiResponse<any>> {\r\n    return apiService.get<any>(`/attendances/events/${eventId}/diagnose`);\r\n  }\r\n\r\n  // User-specific reports\r\n  async getUserAttendanceReport(userId: string, filters: {\r\n    startDate?: string;\r\n    endDate?: string;\r\n  } = {}): Promise<ApiResponse<any>> {\r\n    return apiService.get<any>(`/attendances/users/${userId}/report`, filters);\r\n  }\r\n\r\n  // Export attendances\r\n  async exportAttendances(filters: Partial<AttendanceSearchFilters>, format: 'csv' | 'json' | 'excel' = 'csv'): Promise<ApiResponse<Blob>> {\r\n    return apiService.post<Blob>('/attendances/export', { filters, format });\r\n  }\r\n}\r\n\r\nexport const attendanceService = new AttendanceService();"],"names":["AttendanceService","data","apiService","filters","id","userId","endpoint","approved","notes","attendanceIds","operation","eventId","userIds","format","attendanceService"],"mappings":"wCAkFA,MAAMA,CAAkB,CAEtB,MAAM,QAAQC,EAA8D,CAC1E,OAAOC,EAAW,KAAuB,wBAAyBD,CAAI,CAAA,CAIxE,MAAM,eAAeE,EAAmC,GAA+D,CACrH,OAAOD,EAAW,IAAyC,eAAgBC,CAAO,CAAA,CAIpF,MAAM,iBAAiBA,EAKnB,GAA8C,CAChD,OAAOD,EAAW,IAAwB,8BAA+BC,CAAO,CAAA,CAIlF,MAAM,kBAAkBC,EAAoD,CAC1E,OAAOF,EAAW,IAAsB,gBAAgBE,CAAE,EAAE,CAAA,CAI9D,MAAM,mBAAmBD,EAOrB,GAA2C,CAC7C,OAAOD,EAAW,IAAqB,qBAAsBC,CAAO,CAAA,CAItE,MAAM,sBAAsBE,EAA2D,CACrF,MAAMC,EAAWD,EAAS,yBAAyBA,CAAM,GAAK,wBAC9D,OAAOH,EAAW,IAAwBI,CAAQ,CAAA,CAIpD,MAAM,mBAAmBF,EAAYG,EAAmBC,EAAwD,CAC9G,OAAON,EAAW,KAAuB,gBAAgBE,CAAE,YAAa,CAAE,SAAAG,EAAU,MAAAC,EAAO,CAAA,CAI7F,MAAM,wBAAwBC,EAAyBF,EAAmBC,EAA4C,CACpH,OAAON,EAAW,KAAW,6BAA8B,CAAE,cAAAO,EAAe,SAAAF,EAAU,MAAAC,EAAO,CAAA,CAI/F,MAAM,mBACJE,EACAC,EACAC,EACAJ,EAC4B,CAC5B,OAAON,EAAW,KAAW,yBAA0B,CAAE,UAAAQ,EAAW,QAAAC,EAAS,QAAAC,EAAS,MAAAJ,EAAO,CAAA,CAI/F,MAAM,oBAAoBG,EAA2D,CACnF,OAAOT,EAAW,IAAwB,uBAAuBS,CAAO,EAAE,CAAA,CAG5E,MAAM,cAAcA,EAA6C,CAC/D,OAAOT,EAAW,KAAW,uBAAuBS,CAAO,iBAAiB,CAAA,CAG9E,MAAM,yBAAyBA,EAA4C,CACzE,OAAOT,EAAW,IAAS,uBAAuBS,CAAO,SAAS,CAAA,CAGpE,MAAM,mBAAmBA,EAAwD,CAC/E,OAAOT,EAAW,IAAqB,uBAAuBS,CAAO,mBAAmB,CAAA,CAG1F,MAAM,4BAA4BA,EAA6C,CAC7E,OAAOT,EAAW,KAAW,uBAAuBS,CAAO,cAAc,CAAA,CAG3E,MAAM,yBAAyBA,EAA4C,CACzE,OAAOT,EAAW,IAAS,uBAAuBS,CAAO,WAAW,CAAA,CAItE,MAAM,wBAAwBN,EAAgBF,EAG1C,GAA+B,CACjC,OAAOD,EAAW,IAAS,sBAAsBG,CAAM,UAAWF,CAAO,CAAA,CAI3E,MAAM,kBAAkBA,EAA2CU,EAAmC,MAAmC,CACvI,OAAOX,EAAW,KAAW,sBAAuB,CAAE,QAAAC,EAAS,OAAAU,EAAQ,CAAA,CAE3E,CAEO,MAAMC,EAAoB,IAAId"}