import{K as n}from"./index-gm4XY7Dh.js";class r{async getEvents(e={}){return n.get("/events",e)}async getMyEvents(e={}){return n.get("/events/my-events",e)}async getUpcomingEvents(e=10){return n.get("/events/upcoming",{limit:e})}async getEventById(e){return n.get(`/events/${e}`)}async createEvent(e){return n.post("/events",e)}async updateEvent(e,t){return n.put(`/events/${e}`,t)}async duplicateEvent(e,t){return n.post(`/events/${e}/duplicate`,t)}async changeEventStatus(e,t,s){return n.post(`/events/${e}/status`,{status:t,reason:s})}async searchEvents(e,t){return n.post("/events/search",{query:e,...t})}async getRecommendedEvents(e=5){return n.get("/events/recommendations",{limit:e})}async getEventStats(e){return n.get("/events/stats",e?{organizerId:e}:{})}async getEventAnalytics(e){return n.get(`/events/${e}/analytics`)}async checkScheduleConflicts(e){return n.post("/events/check-conflicts",e)}async addParticipant(e,t){return n.post(`/events/${e}/participants`,{userId:t})}async removeParticipant(e,t,s){return n.delete(`/events/${e}/participants/${t}`)}async confirmParticipant(e,t){return n.post(`/events/${e}/participants/${t}/confirm`)}async bulkInviteParticipants(e,t){return n.post(`/events/${e}/participants/bulk-invite`,{userIds:t})}async bulkOperations(e,t,s){return n.post("/events/bulk-operations",{operation:e,eventIds:t,data:s})}async exportEvents(e,t="csv"){return n.post("/events/export",{filters:e,format:t})}}const v=new r;export{v as e};
//# sourceMappingURL=eventService-DkagHfbT.js.map
