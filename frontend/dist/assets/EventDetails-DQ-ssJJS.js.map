{"version":3,"file":"EventDetails-DQ-ssJJS.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/share-2.js","../../src/pages/Events/EventDetails.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"18\", cy: \"5\", r: \"3\", key: \"gq8acd\" }],\n  [\"circle\", { cx: \"6\", cy: \"12\", r: \"3\", key: \"w7nqdw\" }],\n  [\"circle\", { cx: \"18\", cy: \"19\", r: \"3\", key: \"1xt0gg\" }],\n  [\"line\", { x1: \"8.59\", x2: \"15.42\", y1: \"13.51\", y2: \"17.49\", key: \"47mynk\" }],\n  [\"line\", { x1: \"15.41\", x2: \"8.59\", y1: \"6.51\", y2: \"10.49\", key: \"1n3mei\" }]\n];\nconst Share2 = createLucideIcon(\"share-2\", __iconNode);\n\nexport { __iconNode, Share2 as default };\n//# sourceMappingURL=share-2.js.map\n","// src/pages/Events/EventDetails.tsx - Détail d'un événement avec gestion des présences\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth, usePermissions } from '@/hooks/use-auth';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { \r\n  Calendar, \r\n  MapPin, \r\n  Users, \r\n  Clock, \r\n  Edit, \r\n  Trash2,\r\n  Copy,\r\n  QrCode,\r\n  Download,\r\n  UserPlus,\r\n  UserMinus,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertCircle,\r\n  BarChart3,\r\n  Share2,\r\n  ArrowLeft,\r\n  Brain,\r\n  Target,\r\n  TrendingUp\r\n} from 'lucide-react';\r\nimport { eventService, attendanceService, mlService } from '@/services';\r\nimport { AttendancePredictionCard, RecommendationPanel } from '@/components/ml';\r\nimport type { Event, Attendance, EventStatus, AttendancePrediction } from '@attendance-x/shared';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst EventDetails = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const { canManageEvents, canViewAttendances } = usePermissions();\r\n  \r\n  const [event, setEvent] = useState<Event | null>(null);\r\n  const [attendances, setAttendances] = useState<Attendance[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [attendanceLoading, setAttendanceLoading] = useState(false);\r\n  const [stats, setStats] = useState({\r\n    totalParticipants: 0,\r\n    totalAttendances: 0,\r\n    presentCount: 0,\r\n    absentCount: 0,\r\n    lateCount: 0,\r\n    attendanceRate: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadEventDetails();\r\n      loadEventAttendances();\r\n    }\r\n  }, [id]);\r\n\r\n  const loadEventDetails = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await eventService.getEventById(id!);\r\n      \r\n      if (response.success && response.data) {\r\n        setEvent(response.data);\r\n        calculateStats(response.data);\r\n      } else {\r\n        toast.error('Événement non trouvé');\r\n        navigate('/events');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading event:', error);\r\n      toast.error('Erreur lors du chargement de l\\'événement');\r\n      navigate('/events');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadEventAttendances = async () => {\r\n    if (!canViewAttendances) return;\r\n    \r\n    try {\r\n      setAttendanceLoading(true);\r\n      const response = await attendanceService.getEventAttendances(id!);\r\n      \r\n      if (response.success && response.data) {\r\n        setAttendances(response.data);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading attendances:', error);\r\n    } finally {\r\n      setAttendanceLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = (eventData: Event) => {\r\n    const totalParticipants = eventData.participants?.length || 0;\r\n    const presentCount = attendances.filter(a => a.status === 'present').length;\r\n    const absentCount = attendances.filter(a => a.status === 'absent').length;\r\n    const lateCount = attendances.filter(a => a.status === 'late').length;\r\n    const attendanceRate = totalParticipants > 0 ? (presentCount / totalParticipants) * 100 : 0;\r\n\r\n    setStats({\r\n      totalParticipants,\r\n      totalAttendances: attendances.length,\r\n      presentCount,\r\n      absentCount,\r\n      lateCount,\r\n      attendanceRate\r\n    });\r\n  };\r\n\r\n  const getStatusBadge = (status: EventStatus) => {\r\n    const statusConfig = {\r\n      draft: { variant: 'secondary' as const, label: 'Brouillon' },\r\n      published: { variant: 'default' as const, label: 'Publié' },\r\n      ongoing: { variant: 'default' as const, label: 'En cours' },\r\n      completed: { variant: 'outline' as const, label: 'Terminé' },\r\n      cancelled: { variant: 'destructive' as const, label: 'Annulé' }\r\n    };\r\n\r\n    const config = statusConfig[status] || { variant: 'outline' as const, label: status };\r\n    return <Badge variant={config.variant}>{config.label}</Badge>;\r\n  };\r\n\r\n  const getAttendanceStatusBadge = (status: string) => {\r\n    const statusConfig = {\r\n      present: { variant: 'default' as const, label: 'Présent', icon: CheckCircle },\r\n      absent: { variant: 'destructive' as const, label: 'Absent', icon: XCircle },\r\n      late: { variant: 'secondary' as const, label: 'En retard', icon: AlertCircle },\r\n      excused: { variant: 'outline' as const, label: 'Excusé', icon: AlertCircle }\r\n    };\r\n\r\n    const config = statusConfig[status] || { variant: 'outline' as const, label: status, icon: AlertCircle };\r\n    const IconComponent = config.icon;\r\n    \r\n    return (\r\n      <Badge variant={config.variant} className=\"flex items-center gap-1\">\r\n        <IconComponent className=\"w-3 h-3\" />\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getUserInitials = (user: any) => {\r\n    if (user?.firstName && user?.lastName) {\r\n      return `${user.firstName[0]}${user.lastName[0]}`.toUpperCase();\r\n    }\r\n    if (user?.displayName) {\r\n      const names = user.displayName.split(' ');\r\n      return names.length > 1 \r\n        ? `${names[0][0]}${names[1][0]}`.toUpperCase()\r\n        : names[0][0].toUpperCase();\r\n    }\r\n    return user?.email?.[0].toUpperCase() || 'U';\r\n  };\r\n\r\n  const formatDateTime = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('fr-FR', {\r\n      weekday: 'long',\r\n      day: 'numeric',\r\n      month: 'long',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const handleDuplicateEvent = async () => {\r\n    try {\r\n      const response = await eventService.duplicateEvent(id!);\r\n      if (response.success) {\r\n        toast.success('Événement dupliqué avec succès');\r\n        navigate(`/events/${response.data.id}`);\r\n      }\r\n    } catch (error: any) {\r\n      toast.error('Erreur lors de la duplication');\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = async () => {\r\n    if (!confirm('Êtes-vous sûr de vouloir supprimer cet événement ?')) return;\r\n    \r\n    try {\r\n      // Implementation would depend on your API\r\n      toast.success('Événement supprimé');\r\n      navigate('/events');\r\n    } catch (error: any) {\r\n      toast.error('Erreur lors de la suppression');\r\n    }\r\n  };\r\n\r\n  const handleChangeEventStatus = async (newStatus: EventStatus) => {\r\n    try {\r\n      const response = await eventService.changeEventStatus(id!, newStatus);\r\n      if (response.success) {\r\n        setEvent(prev => prev ? { ...prev, status: newStatus } : null);\r\n        toast.success('Statut mis à jour');\r\n      }\r\n    } catch (error: any) {\r\n      toast.error('Erreur lors de la mise à jour du statut');\r\n    }\r\n  };\r\n\r\n  const isEventPast = event ? new Date(event.endDate) < new Date() : false;\r\n  const isEventOngoing = event ? \r\n    new Date(event.startDate) <= new Date() && new Date(event.endDate) >= new Date() : false;\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <div className=\"animate-pulse space-y-6\">\r\n          <div className=\"h-8 bg-muted rounded w-1/3\"></div>\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n            <div className=\"lg:col-span-2 space-y-6\">\r\n              <div className=\"h-64 bg-muted rounded\"></div>\r\n              <div className=\"h-48 bg-muted rounded\"></div>\r\n            </div>\r\n            <div className=\"space-y-6\">\r\n              <div className=\"h-32 bg-muted rounded\"></div>\r\n              <div className=\"h-48 bg-muted rounded\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!event) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <Alert variant=\"destructive\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          <AlertDescription>\r\n            Événement non trouvé ou vous n'avez pas les permissions pour le voir.\r\n          </AlertDescription>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <Button variant=\"outline\" size=\"sm\" onClick={() => navigate('/events')}>\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Retour\r\n          </Button>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-foreground\">{event.title}</h1>\r\n            <div className=\"flex items-center space-x-3 mt-2\">\r\n              {getStatusBadge(event.status)}\r\n              <Badge variant=\"outline\">{event.type}</Badge>\r\n              {isEventOngoing && (\r\n                <Badge variant=\"default\" className=\"animate-pulse\">\r\n                  En cours\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {canManageEvents && (\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Button variant=\"outline\" size=\"sm\" onClick={handleDuplicateEvent}>\r\n              <Copy className=\"w-4 h-4 mr-2\" />\r\n              Dupliquer\r\n            </Button>\r\n            <Button variant=\"outline\" size=\"sm\" asChild>\r\n              <Link to={`/events/${event.id}/edit`}>\r\n                <Edit className=\"w-4 h-4 mr-2\" />\r\n                Modifier\r\n              </Link>\r\n            </Button>\r\n            <Button variant=\"outline\" size=\"sm\">\r\n              <Share2 className=\"w-4 h-4 mr-2\" />\r\n              Partager\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Main Content */}\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {/* Event Info */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Informations de l'événement</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              {event.description && (\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Description</h4>\r\n                  <p className=\"text-muted-foreground\">{event.description}</p>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <Calendar className=\"w-5 h-5 text-blue-600\" />\r\n                  <div>\r\n                    <p className=\"font-medium\">Date de début</p>\r\n                    <p className=\"text-muted-foreground\">{formatDateTime(event.startDate)}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <Clock className=\"w-5 h-5 text-green-600\" />\r\n                  <div>\r\n                    <p className=\"font-medium\">Date de fin</p>\r\n                    <p className=\"text-muted-foreground\">{formatDateTime(event.endDate)}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                {event.location && (\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <MapPin className=\"w-5 h-5 text-red-600\" />\r\n                    <div>\r\n                      <p className=\"font-medium\">Lieu</p>\r\n                      <p className=\"text-muted-foreground\">{event.location.name}</p>\r\n                      {event.location.address && (\r\n                        <p className=\"text-sm text-muted-foreground\">{event.location.address}</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <Users className=\"w-5 h-5 text-purple-600\" />\r\n                  <div>\r\n                    <p className=\"font-medium\">Participants</p>\r\n                    <p className=\"text-muted-foreground\">{stats.totalParticipants} invités</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Attendance Stats */}\r\n          {canViewAttendances && (\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Statistiques de présence</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">{stats.presentCount}</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Présents</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-red-600\">{stats.absentCount}</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Absents</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-yellow-600\">{stats.lateCount}</div>\r\n                    <div className=\"text-sm text-muted-foreground\">En retard</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">{stats.attendanceRate.toFixed(1)}%</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Taux de présence</div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n\r\n          {/* Tabs Content */}\r\n          <Tabs defaultValue=\"participants\" className=\"space-y-4\">\r\n            <TabsList>\r\n              <TabsTrigger value=\"participants\">\r\n                Participants ({stats.totalParticipants})\r\n              </TabsTrigger>\r\n              {canViewAttendances && (\r\n                <TabsTrigger value=\"attendances\">\r\n                  Présences ({stats.totalAttendances})\r\n                </TabsTrigger>\r\n              )}\r\n              {canViewAttendances && !isEventPast && (\r\n                <TabsTrigger value=\"predictions\">\r\n                  <Brain className=\"w-4 h-4 mr-1\" />\r\n                  Prédictions IA\r\n                </TabsTrigger>\r\n              )}\r\n              <TabsTrigger value=\"details\">Détails</TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent value=\"participants\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Liste des participants</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  {event.participants && event.participants.length > 0 ? (\r\n                    <div className=\"space-y-3\">\r\n                      {event.participants.map((participant) => (\r\n                        <div key={participant.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                          <div className=\"flex items-center space-x-3\">\r\n                            <Avatar className=\"w-8 h-8\">\r\n                              <AvatarImage src={participant.profilePicture} />\r\n                              <AvatarFallback>{getUserInitials(participant)}</AvatarFallback>\r\n                            </Avatar>\r\n                            <div>\r\n                              <p className=\"font-medium\">\r\n                                {participant.displayName || `${participant.firstName} ${participant.lastName}`}\r\n                              </p>\r\n                              <p className=\"text-sm text-muted-foreground\">{participant.email}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Badge variant=\"outline\">{participant.role}</Badge>\r\n                            {/* Show attendance status if available */}\r\n                            {attendances.find(a => a.userId === participant.id) && \r\n                              getAttendanceStatusBadge(\r\n                                attendances.find(a => a.userId === participant.id)?.status || 'absent'\r\n                              )\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-8\">\r\n                      <Users className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                      <p className=\"text-muted-foreground\">Aucun participant invité</p>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n\r\n            {canViewAttendances && (\r\n              <TabsContent value=\"attendances\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Présences enregistrées</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {attendanceLoading ? (\r\n                      <div className=\"text-center py-8\">\r\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\r\n                        <p className=\"text-muted-foreground mt-2\">Chargement des présences...</p>\r\n                      </div>\r\n                    ) : attendances.length > 0 ? (\r\n                      <div className=\"space-y-3\">\r\n                        {attendances.map((attendance) => (\r\n                          <div key={attendance.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                            <div className=\"flex items-center space-x-3\">\r\n                              <Avatar className=\"w-8 h-8\">\r\n                                <AvatarImage src={attendance.user?.profilePicture} />\r\n                                <AvatarFallback>{getUserInitials(attendance.user)}</AvatarFallback>\r\n                              </Avatar>\r\n                              <div>\r\n                                <p className=\"font-medium\">\r\n                                  {attendance.user?.displayName || \r\n                                   `${attendance.user?.firstName} ${attendance.user?.lastName}` ||\r\n                                   attendance.user?.email}\r\n                                </p>\r\n                                {attendance.checkInTime && (\r\n                                  <p className=\"text-sm text-muted-foreground\">\r\n                                    Arrivé le {formatDateTime(attendance.checkInTime)}\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              {getAttendanceStatusBadge(attendance.status)}\r\n                              <Badge variant=\"outline\">{attendance.method}</Badge>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-8\">\r\n                        <CheckCircle className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                        <p className=\"text-muted-foreground\">Aucune présence enregistrée</p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n            )}\r\n\r\n            {canViewAttendances && !isEventPast && (\r\n              <TabsContent value=\"predictions\">\r\n                <div className=\"space-y-6\">\r\n                  {/* Prédictions Header */}\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center\">\r\n                        <Brain className=\"w-5 h-5 mr-2 text-primary\" />\r\n                        Prédictions de Présence IA\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n                        <div className=\"text-center\">\r\n                          <div className=\"text-2xl font-bold text-blue-600\">\r\n                            {Math.round((stats.totalParticipants * 0.85))}\r\n                          </div>\r\n                          <div className=\"text-sm text-muted-foreground\">Présence prédite</div>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <div className=\"text-2xl font-bold text-green-600\">85%</div>\r\n                          <div className=\"text-sm text-muted-foreground\">Taux prédit</div>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <div className=\"text-2xl font-bold text-purple-600\">92%</div>\r\n                          <div className=\"text-sm text-muted-foreground\">Confiance IA</div>\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Les prédictions sont basées sur l'historique de présence, les patterns comportementaux et les caractéristiques de l'événement.\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Prédictions par participant */}\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Prédictions par participant</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      {event.participants && event.participants.length > 0 ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                          {event.participants.slice(0, 6).map((participant) => (\r\n                            <AttendancePredictionCard\r\n                              key={participant.id}\r\n                              userId={participant.id}\r\n                              eventId={event.id}\r\n                              userName={participant.displayName || `${participant.firstName} ${participant.lastName}`}\r\n                              compact={true}\r\n                              showFactors={false}\r\n                              showRecommendations={false}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"text-center py-8\">\r\n                          <Brain className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                          <p className=\"text-muted-foreground\">Aucun participant pour les prédictions</p>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {event.participants && event.participants.length > 6 && (\r\n                        <div className=\"text-center mt-4\">\r\n                          <Button variant=\"outline\" onClick={() => navigate('/predictions')}>\r\n                            <TrendingUp className=\"w-4 h-4 mr-2\" />\r\n                            Voir toutes les prédictions ({event.participants.length})\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Recommandations pour l'événement */}\r\n                  <RecommendationPanel\r\n                    type=\"event\"\r\n                    targetId={event.id}\r\n                    context={{ eventType: event.type, participantCount: stats.totalParticipants }}\r\n                    maxRecommendations={3}\r\n                    showPriority={true}\r\n                    showActions={true}\r\n                  />\r\n                </div>\r\n              </TabsContent>\r\n            )}\r\n\r\n            <TabsContent value=\"details\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Détails techniques</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <p className=\"font-medium\">ID de l'événement</p>\r\n                      <p className=\"text-muted-foreground font-mono text-sm\">{event.id}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">Créé le</p>\r\n                      <p className=\"text-muted-foreground\">{formatDateTime(event.createdAt)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">Organisateur</p>\r\n                      <p className=\"text-muted-foreground\">\r\n                        {event.organizer?.displayName || event.organizer?.email}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">Dernière modification</p>\r\n                      <p className=\"text-muted-foreground\">{formatDateTime(event.updatedAt)}</p>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </div>\r\n\r\n        {/* Sidebar */}\r\n        <div className=\"space-y-6\">\r\n          {/* Quick Actions */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Actions rapides</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-3\">\r\n              {isEventOngoing && (\r\n                <Button className=\"w-full\" asChild>\r\n                  <Link to={`/attendances/mark/${event.id}`}>\r\n                    <QrCode className=\"w-4 h-4 mr-2\" />\r\n                    Marquer les présences\r\n                  </Link>\r\n                </Button>\r\n              )}\r\n              \r\n              {canViewAttendances && (\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <Download className=\"w-4 h-4 mr-2\" />\r\n                  Exporter les présences\r\n                </Button>\r\n              )}\r\n              \r\n              <Button variant=\"outline\" className=\"w-full\">\r\n                <BarChart3 className=\"w-4 h-4 mr-2\" />\r\n                Voir les analytics\r\n              </Button>\r\n              \r\n              {canManageEvents && event.status === 'published' && !isEventPast && (\r\n                <Button \r\n                  variant=\"outline\" \r\n                  className=\"w-full\"\r\n                  onClick={() => handleChangeEventStatus('cancelled')}\r\n                >\r\n                  <XCircle className=\"w-4 h-4 mr-2\" />\r\n                  Annuler l'événement\r\n                </Button>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Event Status */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Statut de l'événement</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>Statut actuel</span>\r\n                  {getStatusBadge(event.status)}\r\n                </div>\r\n                \r\n                {isEventPast && (\r\n                  <Alert>\r\n                    <AlertCircle className=\"h-4 w-4\" />\r\n                    <AlertDescription>\r\n                      Cet événement est terminé.\r\n                    </AlertDescription>\r\n                  </Alert>\r\n                )}\r\n                \r\n                {isEventOngoing && (\r\n                  <Alert>\r\n                    <CheckCircle className=\"h-4 w-4\" />\r\n                    <AlertDescription>\r\n                      Cet événement est actuellement en cours.\r\n                    </AlertDescription>\r\n                  </Alert>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* QR Code */}\r\n          {(isEventOngoing || !isEventPast) && (\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Code QR de l'événement</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"text-center\">\r\n                <div className=\"w-32 h-32 bg-muted rounded-lg mx-auto mb-4 flex items-center justify-center\">\r\n                  <QrCode className=\"w-16 h-16 text-muted-foreground\" />\r\n                </div>\r\n                <p className=\"text-sm text-muted-foreground mb-3\">\r\n                  Scannez ce code pour marquer votre présence\r\n                </p>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\r\n                  <Download className=\"w-4 h-4 mr-2\" />\r\n                  Télécharger le QR Code\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetails;"],"names":["__iconNode","Share2","createLucideIcon","EventDetails","id","useParams","navigate","useNavigate","user","useAuth","canManageEvents","canViewAttendances","usePermissions","event","setEvent","useState","attendances","setAttendances","loading","setLoading","attendanceLoading","setAttendanceLoading","stats","setStats","useEffect","loadEventDetails","loadEventAttendances","response","eventService","calculateStats","toast","error","attendanceService","eventData","totalParticipants","_a","presentCount","a","absentCount","lateCount","attendanceRate","getStatusBadge","status","config","Badge","getAttendanceStatusBadge","CheckCircle","XCircle","AlertCircle","IconComponent","jsx","getUserInitials","names","formatDateTime","dateString","handleDuplicateEvent","handleChangeEventStatus","newStatus","prev","isEventPast","isEventOngoing","jsxs","Button","ArrowLeft","Copy","Link","Edit","Card","CardHeader","CardTitle","CardContent","Calendar","Clock","MapPin","Users","Tabs","TabsList","TabsTrigger","Brain","TabsContent","participant","Avatar","AvatarImage","AvatarFallback","attendance","_b","_c","_d","_e","AttendancePredictionCard","TrendingUp","RecommendationPanel","QrCode","Download","BarChart3","Alert","AlertDescription"],"mappings":"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","x_google_ignoreList":[0]}