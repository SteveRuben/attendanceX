{"version":3,"file":"PredictionsPage-DmibxLNF.js","sources":["../../src/pages/Analytics/PredictionsPage.tsx"],"sourcesContent":["// src/pages/Analytics/PredictionsPage.tsx - Page de prédictions détaillées\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { \r\n  TrendingUp, \r\n  Users, \r\n  Calendar, \r\n  Search,\r\n  Filter,\r\n  Download,\r\n  RefreshCw,\r\n  Target,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Clock\r\n} from 'lucide-react';\r\nimport { AttendancePredictionCard } from '@/components/ml';\r\nimport { mlService, eventService, type AttendancePrediction } from '@/services';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface Event {\r\n  id: string;\r\n  title: string;\r\n  startDateTime: string;\r\n  participants: string[];\r\n  organizerId: string;\r\n}\r\n\r\nconst PredictionsPage = () => {\r\n  const [events, setEvents] = useState<Event[]>([]);\r\n  const [selectedEvent, setSelectedEvent] = useState<Event | null>(null);\r\n  const [predictions, setPredictions] = useState<AttendancePrediction[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [riskFilter, setRiskFilter] = useState<'all' | 'high' | 'medium' | 'low'>('all');\r\n  const [statusFilter, setStatusFilter] = useState<'all' | 'present' | 'late' | 'absent' | 'excused'>('all');\r\n\r\n  useEffect(() => {\r\n    loadEvents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedEvent) {\r\n      loadPredictions();\r\n    }\r\n  }, [selectedEvent]);\r\n\r\n  const loadEvents = async () => {\r\n    try {\r\n      const response = await eventService.getUpcomingEvents(20);\r\n      if (response.success && response.data) {\r\n        setEvents(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedEvent(response.data[0]);\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading events:', error);\r\n      toast.error('Erreur lors du chargement des événements');\r\n    }\r\n  };\r\n\r\n  const loadPredictions = async () => {\r\n    if (!selectedEvent) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await mlService.batchPredictAttendance({\r\n        eventId: selectedEvent.id,\r\n        userIds: selectedEvent.participants,\r\n        includeFactors: true,\r\n        includeRecommendations: true\r\n      });\r\n\r\n      if (response.success && response.data) {\r\n        setPredictions(response.data);\r\n      } else {\r\n        toast.error('Erreur lors du chargement des prédictions');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading predictions:', error);\r\n      toast.error('Erreur lors du chargement des prédictions');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredPredictions = predictions.filter(prediction => {\r\n    // Filtre par terme de recherche\r\n    if (searchTerm && !prediction.userName.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n      return false;\r\n    }\r\n\r\n    // Filtre par niveau de risque\r\n    if (riskFilter !== 'all' && prediction.prediction.riskLevel !== riskFilter) {\r\n      return false;\r\n    }\r\n\r\n    // Filtre par statut prédit\r\n    if (statusFilter !== 'all' && prediction.prediction.expectedStatus !== statusFilter) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  const getStatistics = () => {\r\n    if (predictions.length === 0) return null;\r\n\r\n    const totalPredictions = predictions.length;\r\n    const willAttend = predictions.filter(p => p.prediction.willAttend).length;\r\n    const highRisk = predictions.filter(p => p.prediction.riskLevel === 'high').length;\r\n    const averageConfidence = predictions.reduce((sum, p) => {\r\n      const confidenceScore = p.prediction.confidence === 'high' ? 1 : \r\n                             p.prediction.confidence === 'medium' ? 0.7 : 0.4;\r\n      return sum + confidenceScore;\r\n    }, 0) / totalPredictions;\r\n\r\n    return {\r\n      totalPredictions,\r\n      willAttend,\r\n      attendanceRate: Math.round((willAttend / totalPredictions) * 100),\r\n      highRisk,\r\n      averageConfidence: Math.round(averageConfidence * 100)\r\n    };\r\n  };\r\n\r\n  const exportPredictions = () => {\r\n    if (predictions.length === 0) {\r\n      toast.warning('Aucune prédiction à exporter');\r\n      return;\r\n    }\r\n\r\n    const csvContent = [\r\n      ['Utilisateur', 'Probabilité', 'Statut Prédit', 'Niveau de Risque', 'Confiance'].join(','),\r\n      ...predictions.map(p => [\r\n        p.userName,\r\n        `${Math.round(p.prediction.probability * 100)}%`,\r\n        p.prediction.expectedStatus,\r\n        p.prediction.riskLevel,\r\n        p.prediction.confidence\r\n      ].join(','))\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `predictions-${selectedEvent?.title || 'event'}-${new Date().toISOString().split('T')[0]}.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n\r\n    toast.success('Prédictions exportées avec succès');\r\n  };\r\n\r\n  const stats = getStatistics();\r\n\r\n  return (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\r\n            <TrendingUp className=\"w-8 h-8 mr-3 text-primary\" />\r\n            Prédictions de Présence\r\n          </h1>\r\n          <p className=\"text-muted-foreground mt-1\">\r\n            Prédictions IA pour les événements à venir\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Button variant=\"outline\" onClick={exportPredictions} disabled={predictions.length === 0}>\r\n            <Download className=\"w-4 h-4 mr-2\" />\r\n            Exporter\r\n          </Button>\r\n          <Button variant=\"outline\" onClick={loadPredictions} disabled={!selectedEvent}>\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Actualiser\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Event Selection */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Calendar className=\"w-5 h-5 mr-2\" />\r\n            Sélection d'événement\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"flex-1\">\r\n              <Select \r\n                value={selectedEvent?.id || ''} \r\n                onValueChange={(value) => {\r\n                  const event = events.find(e => e.id === value);\r\n                  setSelectedEvent(event || null);\r\n                }}\r\n              >\r\n                <SelectTrigger>\r\n                  <SelectValue placeholder=\"Sélectionner un événement\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {events.map(event => (\r\n                    <SelectItem key={event.id} value={event.id}>\r\n                      <div className=\"flex items-center justify-between w-full\">\r\n                        <span>{event.title}</span>\r\n                        <Badge variant=\"outline\" className=\"ml-2\">\r\n                          {event.participants.length} participants\r\n                        </Badge>\r\n                      </div>\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n            {selectedEvent && (\r\n              <div className=\"text-sm text-muted-foreground\">\r\n                {new Date(selectedEvent.startDateTime).toLocaleString('fr-FR')}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Statistics */}\r\n      {stats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-muted-foreground\">Total Participants</p>\r\n                  <p className=\"text-2xl font-bold\">{stats.totalPredictions}</p>\r\n                </div>\r\n                <Users className=\"w-8 h-8 text-blue-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-muted-foreground\">Taux de Présence Prédit</p>\r\n                  <p className=\"text-2xl font-bold\">{stats.attendanceRate}%</p>\r\n                </div>\r\n                <CheckCircle className=\"w-8 h-8 text-green-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-muted-foreground\">Risque Élevé</p>\r\n                  <p className=\"text-2xl font-bold\">{stats.highRisk}</p>\r\n                </div>\r\n                <AlertTriangle className=\"w-8 h-8 text-red-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-muted-foreground\">Confiance Moyenne</p>\r\n                  <p className=\"text-2xl font-bold\">{stats.averageConfidence}%</p>\r\n                </div>\r\n                <Target className=\"w-8 h-8 text-purple-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n                <Input\r\n                  placeholder=\"Rechercher un participant...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"pl-10\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <Select value={riskFilter} onValueChange={(value: any) => setRiskFilter(value)}>\r\n              <SelectTrigger className=\"w-[150px]\">\r\n                <SelectValue placeholder=\"Niveau de risque\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">Tous les risques</SelectItem>\r\n                <SelectItem value=\"high\">Risque élevé</SelectItem>\r\n                <SelectItem value=\"medium\">Risque moyen</SelectItem>\r\n                <SelectItem value=\"low\">Risque faible</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n            <Select value={statusFilter} onValueChange={(value: any) => setStatusFilter(value)}>\r\n              <SelectTrigger className=\"w-[150px]\">\r\n                <SelectValue placeholder=\"Statut prédit\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">Tous les statuts</SelectItem>\r\n                <SelectItem value=\"present\">Présent</SelectItem>\r\n                <SelectItem value=\"late\">En retard</SelectItem>\r\n                <SelectItem value=\"absent\">Absent</SelectItem>\r\n                <SelectItem value=\"excused\">Excusé</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Predictions Grid */}\r\n      {loading ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {[...Array(6)].map((_, i) => (\r\n            <div key={i} className=\"h-64 bg-muted rounded animate-pulse\"></div>\r\n          ))}\r\n        </div>\r\n      ) : filteredPredictions.length > 0 ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredPredictions.map((prediction) => (\r\n            <AttendancePredictionCard\r\n              key={prediction.userId}\r\n              userId={prediction.userId}\r\n              eventId={prediction.eventId}\r\n              userName={prediction.userName}\r\n              compact={false}\r\n              showFactors={true}\r\n              showRecommendations={true}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : selectedEvent ? (\r\n        <Card>\r\n          <CardContent className=\"p-12 text-center\">\r\n            <TrendingUp className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-foreground mb-2\">\r\n              Aucune prédiction trouvée\r\n            </h3>\r\n            <p className=\"text-muted-foreground mb-4\">\r\n              {searchTerm || riskFilter !== 'all' || statusFilter !== 'all' \r\n                ? 'Aucune prédiction ne correspond aux filtres sélectionnés.'\r\n                : 'Aucune prédiction disponible pour cet événement.'\r\n              }\r\n            </p>\r\n            {(searchTerm || riskFilter !== 'all' || statusFilter !== 'all') && (\r\n              <Button \r\n                variant=\"outline\" \r\n                onClick={() => {\r\n                  setSearchTerm('');\r\n                  setRiskFilter('all');\r\n                  setStatusFilter('all');\r\n                }}\r\n              >\r\n                Réinitialiser les filtres\r\n              </Button>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <Card>\r\n          <CardContent className=\"p-12 text-center\">\r\n            <Calendar className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-foreground mb-2\">\r\n              Sélectionnez un événement\r\n            </h3>\r\n            <p className=\"text-muted-foreground\">\r\n              Choisissez un événement pour voir les prédictions de présence.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionsPage;"],"names":["PredictionsPage","events","setEvents","useState","selectedEvent","setSelectedEvent","predictions","setPredictions","loading","setLoading","searchTerm","setSearchTerm","riskFilter","setRiskFilter","statusFilter","setStatusFilter","useEffect","loadEvents","loadPredictions","response","eventService","error","toast","mlService","filteredPredictions","prediction","getStatistics","totalPredictions","willAttend","p","highRisk","averageConfidence","sum","confidenceScore","exportPredictions","csvContent","blob","url","a","stats","jsxs","jsx","TrendingUp","Button","Download","RefreshCw","Card","CardHeader","CardTitle","Calendar","CardContent","Select","value","event","e","SelectTrigger","SelectValue","SelectContent","SelectItem","Badge","Users","CheckCircle","AlertTriangle","Target","Search","Input","_","i","AttendancePredictionCard"],"mappings":"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"}