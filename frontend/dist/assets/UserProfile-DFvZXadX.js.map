{"version":3,"file":"UserProfile-DFvZXadX.js","sources":["../../src/pages/Users/UserProfile.tsx"],"sourcesContent":["// src/pages/Users/UserProfile.tsx - Profil détaillé d'un utilisateur\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth, usePermissions } from '@/hooks/use-auth';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { \r\n  User, \r\n  Mail, \r\n  Phone, \r\n  Building, \r\n  Calendar, \r\n  MapPin,\r\n  Shield,\r\n  Edit,\r\n  Settings,\r\n  BarChart3,\r\n  CheckCircle,\r\n  XCircle,\r\n  Clock,\r\n  TrendingUp,\r\n  ArrowLeft,\r\n  UserCheck,\r\n  UserX\r\n} from 'lucide-react';\r\nimport { userService, attendanceService, eventService } from '@/services';\r\nimport type { User as UserType, UserRole, UserStatus } from '@attendance-x/shared';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst UserProfile = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const { user: currentUser } = useAuth();\r\n  const { canManageUsers, canViewReports } = usePermissions();\r\n  \r\n  const [user, setUser] = useState<UserType | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [attendanceStats, setAttendanceStats] = useState({\r\n    totalEvents: 0,\r\n    attendedEvents: 0,\r\n    attendanceRate: 0,\r\n    totalPresent: 0,\r\n    totalAbsent: 0,\r\n    totalLate: 0,\r\n    averageCheckInTime: '',\r\n    streak: 0\r\n  });\r\n  const [recentAttendances, setRecentAttendances] = useState<any[]>([]);\r\n  const [upcomingEvents, setUpcomingEvents] = useState<any[]>([]);\r\n\r\n  // Check if viewing own profile\r\n  const isOwnProfile = !id || id === currentUser?.id;\r\n  const targetUserId = isOwnProfile ? currentUser?.id : id;\r\n\r\n  useEffect(() => {\r\n    if (targetUserId) {\r\n      loadUserProfile();\r\n      loadUserStats();\r\n    }\r\n  }, [targetUserId]);\r\n\r\n  const loadUserProfile = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      let userData: UserType;\r\n      \r\n      if (isOwnProfile) {\r\n        const response = await userService.getMyProfile();\r\n        if (!response.success || !response.data) {\r\n          throw new Error('Impossible de charger votre profil');\r\n        }\r\n        userData = response.data;\r\n      } else {\r\n        const response = await userService.getUserById(targetUserId!);\r\n        if (!response.success || !response.data) {\r\n          throw new Error('Utilisateur non trouvé');\r\n        }\r\n        userData = response.data;\r\n      }\r\n      \r\n      setUser(userData);\r\n      \r\n    } catch (error: any) {\r\n      console.error('Error loading user profile:', error);\r\n      toast.error(error.message || 'Erreur lors du chargement du profil');\r\n      if (!isOwnProfile) {\r\n        navigate('/users');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadUserStats = async () => {\r\n    try {\r\n      // Load attendance stats\r\n      const attendanceResponse = await attendanceService.getAttendanceStats({\r\n        userId: targetUserId\r\n      });\r\n      \r\n      if (attendanceResponse.success && attendanceResponse.data) {\r\n        setAttendanceStats(attendanceResponse.data);\r\n      }\r\n\r\n      // Load recent attendances\r\n      const recentResponse = await attendanceService.getMyAttendances({\r\n        limit: 10\r\n      });\r\n      \r\n      if (recentResponse.success && recentResponse.data) {\r\n        setRecentAttendances(recentResponse.data);\r\n      }\r\n\r\n      // Load upcoming events if user is participant\r\n      if (canViewReports) {\r\n        const eventsResponse = await eventService.getEvents({\r\n          participantId: targetUserId,\r\n          status: 'published',\r\n          limit: 5\r\n        });\r\n        \r\n        if (eventsResponse.success && eventsResponse.data) {\r\n          setUpcomingEvents(eventsResponse.data.data);\r\n        }\r\n      }\r\n      \r\n    } catch (error: any) {\r\n      console.error('Error loading user stats:', error);\r\n    }\r\n  };\r\n\r\n  const getRoleBadge = (role: UserRole) => {\r\n    const roleConfig = {\r\n      super_admin: { variant: 'destructive' as const, label: 'Super Admin', icon: Shield },\r\n      admin: { variant: 'destructive' as const, label: 'Admin', icon: Shield },\r\n      organizer: { variant: 'default' as const, label: 'Organisateur', icon: User },\r\n      moderator: { variant: 'secondary' as const, label: 'Modérateur', icon: UserCheck },\r\n      analyst: { variant: 'outline' as const, label: 'Analyste', icon: BarChart3 },\r\n      participant: { variant: 'outline' as const, label: 'Participant', icon: User }\r\n    };\r\n\r\n    const config = roleConfig[role] || { variant: 'outline' as const, label: role, icon: User };\r\n    const IconComponent = config.icon;\r\n    \r\n    return (\r\n      <Badge variant={config.variant} className=\"flex items-center gap-1\">\r\n        <IconComponent className=\"w-3 h-3\" />\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getStatusBadge = (status: UserStatus) => {\r\n    const statusConfig = {\r\n      active: { variant: 'default' as const, label: 'Actif', icon: CheckCircle },\r\n      inactive: { variant: 'secondary' as const, label: 'Inactif', icon: XCircle },\r\n      pending: { variant: 'outline' as const, label: 'En attente', icon: Clock },\r\n      suspended: { variant: 'destructive' as const, label: 'Suspendu', icon: XCircle }\r\n    };\r\n\r\n    const config = statusConfig[status] || { variant: 'outline' as const, label: status, icon: Clock };\r\n    const IconComponent = config.icon;\r\n    \r\n    return (\r\n      <Badge variant={config.variant} className=\"flex items-center gap-1\">\r\n        <IconComponent className=\"w-3 h-3\" />\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getUserInitials = (user: UserType) => {\r\n    if (user.firstName && user.lastName) {\r\n      return `${user.firstName[0]}${user.lastName[0]}`.toUpperCase();\r\n    }\r\n    if (user.displayName) {\r\n      const names = user.displayName.split(' ');\r\n      return names.length > 1 \r\n        ? `${names[0][0]}${names[1][0]}`.toUpperCase()\r\n        : names[0][0].toUpperCase();\r\n    }\r\n    return user.email[0].toUpperCase();\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('fr-FR', {\r\n      day: 'numeric',\r\n      month: 'long',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatDateTime = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('fr-FR', {\r\n      day: 'numeric',\r\n      month: 'short',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const handleChangeUserStatus = async (newStatus: UserStatus) => {\r\n    if (!user || !canManageUsers) return;\r\n    \r\n    try {\r\n      const response = await userService.changeUserStatus(user.id, newStatus);\r\n      if (response.success) {\r\n        setUser(prev => prev ? { ...prev, status: newStatus } : null);\r\n        toast.success('Statut utilisateur mis à jour');\r\n      }\r\n    } catch (error: any) {\r\n      toast.error('Erreur lors de la mise à jour du statut');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <div className=\"animate-pulse space-y-6\">\r\n          <div className=\"h-8 bg-muted rounded w-1/3\"></div>\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n            <div className=\"lg:col-span-2 space-y-6\">\r\n              <div className=\"h-64 bg-muted rounded\"></div>\r\n              <div className=\"h-48 bg-muted rounded\"></div>\r\n            </div>\r\n            <div className=\"space-y-6\">\r\n              <div className=\"h-32 bg-muted rounded\"></div>\r\n              <div className=\"h-48 bg-muted rounded\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <Alert variant=\"destructive\">\r\n          <XCircle className=\"h-4 w-4\" />\r\n          <AlertDescription>\r\n            Utilisateur non trouvé ou vous n'avez pas les permissions pour voir ce profil.\r\n          </AlertDescription>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          {!isOwnProfile && (\r\n            <Button variant=\"outline\" size=\"sm\" onClick={() => navigate('/users')}>\r\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n              Retour\r\n            </Button>\r\n          )}\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-foreground\">\r\n              {isOwnProfile ? 'Mon profil' : 'Profil utilisateur'}\r\n            </h1>\r\n            <p className=\"text-muted-foreground mt-1\">\r\n              {user.displayName || `${user.firstName} ${user.lastName}`}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          {isOwnProfile && (\r\n            <Button variant=\"outline\" size=\"sm\">\r\n              <Settings className=\"w-4 h-4 mr-2\" />\r\n              Paramètres\r\n            </Button>\r\n          )}\r\n          {canManageUsers && !isOwnProfile && (\r\n            <>\r\n              {user.status === 'active' ? (\r\n                <Button \r\n                  variant=\"outline\" \r\n                  size=\"sm\"\r\n                  onClick={() => handleChangeUserStatus('inactive')}\r\n                >\r\n                  <UserX className=\"w-4 h-4 mr-2\" />\r\n                  Désactiver\r\n                </Button>\r\n              ) : (\r\n                <Button \r\n                  variant=\"outline\" \r\n                  size=\"sm\"\r\n                  onClick={() => handleChangeUserStatus('active')}\r\n                >\r\n                  <UserCheck className=\"w-4 h-4 mr-2\" />\r\n                  Activer\r\n                </Button>\r\n              )}\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Edit className=\"w-4 h-4 mr-2\" />\r\n                Modifier\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Main Content */}\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {/* User Info */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Informations personnelles</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex items-start space-x-6\">\r\n                <Avatar className=\"w-24 h-24\">\r\n                  <AvatarImage src={user.profilePicture} />\r\n                  <AvatarFallback className=\"text-2xl\">{getUserInitials(user)}</AvatarFallback>\r\n                </Avatar>\r\n                \r\n                <div className=\"flex-1 space-y-4\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <h2 className=\"text-2xl font-semibold\">\r\n                      {user.displayName || `${user.firstName} ${user.lastName}`}\r\n                    </h2>\r\n                    {getRoleBadge(user.role)}\r\n                    {getStatusBadge(user.status)}\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <Mail className=\"w-5 h-5 text-blue-600\" />\r\n                      <div>\r\n                        <p className=\"font-medium\">Email</p>\r\n                        <p className=\"text-muted-foreground\">{user.email}</p>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {user.phone && (\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <Phone className=\"w-5 h-5 text-green-600\" />\r\n                        <div>\r\n                          <p className=\"font-medium\">Téléphone</p>\r\n                          <p className=\"text-muted-foreground\">{user.phone}</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {user.department && (\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <Building className=\"w-5 h-5 text-purple-600\" />\r\n                        <div>\r\n                          <p className=\"font-medium\">Département</p>\r\n                          <p className=\"text-muted-foreground\">{user.department}</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <Calendar className=\"w-5 h-5 text-orange-600\" />\r\n                      <div>\r\n                        <p className=\"font-medium\">Membre depuis</p>\r\n                        <p className=\"text-muted-foreground\">{formatDate(user.createdAt)}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Attendance Stats */}\r\n          {canViewReports && (\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Statistiques de présence</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">{attendanceStats.totalEvents}</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Événements</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">{attendanceStats.attendedEvents}</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Participés</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">{attendanceStats.attendanceRate.toFixed(1)}%</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Taux présence</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-orange-600\">{attendanceStats.streak}</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Série actuelle</div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n\r\n          {/* Tabs Content */}\r\n          <Tabs defaultValue=\"activity\" className=\"space-y-4\">\r\n            <TabsList>\r\n              <TabsTrigger value=\"activity\">Activité récente</TabsTrigger>\r\n              {canViewReports && (\r\n                <TabsTrigger value=\"events\">Événements à venir</TabsTrigger>\r\n              )}\r\n              <TabsTrigger value=\"details\">Détails du compte</TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent value=\"activity\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Présences récentes</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  {recentAttendances.length > 0 ? (\r\n                    <div className=\"space-y-3\">\r\n                      {recentAttendances.map((attendance) => (\r\n                        <div key={attendance.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                          <div className=\"flex items-center space-x-3\">\r\n                            <div className={`w-3 h-3 rounded-full ${\r\n                              attendance.status === 'present' ? 'bg-green-500' :\r\n                              attendance.status === 'late' ? 'bg-yellow-500' : 'bg-red-500'\r\n                            }`} />\r\n                            <div>\r\n                              <p className=\"font-medium\">{attendance.event?.title}</p>\r\n                              <p className=\"text-sm text-muted-foreground\">\r\n                                {attendance.checkInTime ? formatDateTime(attendance.checkInTime) : 'Non marqué'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <Badge variant={\r\n                            attendance.status === 'present' ? 'default' :\r\n                            attendance.status === 'late' ? 'secondary' : 'destructive'\r\n                          }>\r\n                            {attendance.status === 'present' ? 'Présent' :\r\n                             attendance.status === 'late' ? 'En retard' : 'Absent'}\r\n                          </Badge>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-8\">\r\n                      <CheckCircle className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                      <p className=\"text-muted-foreground\">Aucune activité récente</p>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n\r\n            {canViewReports && (\r\n              <TabsContent value=\"events\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Événements à venir</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {upcomingEvents.length > 0 ? (\r\n                      <div className=\"space-y-3\">\r\n                        {upcomingEvents.map((event) => (\r\n                          <div key={event.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                            <div className=\"flex items-center space-x-3\">\r\n                              <Calendar className=\"w-5 h-5 text-blue-600\" />\r\n                              <div>\r\n                                <p className=\"font-medium\">{event.title}</p>\r\n                                <p className=\"text-sm text-muted-foreground\">\r\n                                  {formatDateTime(event.startDate)}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            <Badge variant=\"outline\">{event.type}</Badge>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-8\">\r\n                        <Calendar className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                        <p className=\"text-muted-foreground\">Aucun événement à venir</p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n            )}\r\n\r\n            <TabsContent value=\"details\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Détails du compte</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <p className=\"font-medium\">ID utilisateur</p>\r\n                      <p className=\"text-muted-foreground font-mono text-sm\">{user.id}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">Email vérifié</p>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {user.emailVerified ? (\r\n                          <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n                        ) : (\r\n                          <XCircle className=\"w-4 h-4 text-red-600\" />\r\n                        )}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {user.emailVerified ? 'Vérifié' : 'Non vérifié'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">2FA activé</p>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {user.twoFactorEnabled ? (\r\n                          <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n                        ) : (\r\n                          <XCircle className=\"w-4 h-4 text-red-600\" />\r\n                        )}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {user.twoFactorEnabled ? 'Activé' : 'Désactivé'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">Dernière connexion</p>\r\n                      <p className=\"text-muted-foreground\">\r\n                        {user.lastLoginAt ? formatDateTime(user.lastLoginAt) : 'Jamais'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </div>\r\n\r\n        {/* Sidebar */}\r\n        <div className=\"space-y-6\">\r\n          {/* Quick Stats */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Résumé</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-muted-foreground\">Présences</span>\r\n                <span className=\"font-medium\">{attendanceStats.totalPresent}</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-muted-foreground\">Absences</span>\r\n                <span className=\"font-medium\">{attendanceStats.totalAbsent}</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-muted-foreground\">Retards</span>\r\n                <span className=\"font-medium\">{attendanceStats.totalLate}</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-muted-foreground\">Taux de présence</span>\r\n                <span className=\"font-medium\">{attendanceStats.attendanceRate.toFixed(1)}%</span>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Account Status */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Statut du compte</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span>Statut</span>\r\n                {getStatusBadge(user.status)}\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span>Rôle</span>\r\n                {getRoleBadge(user.role)}\r\n              </div>\r\n              {user.accountLockedUntil && new Date(user.accountLockedUntil) > new Date() && (\r\n                <Alert variant=\"destructive\">\r\n                  <XCircle className=\"h-4 w-4\" />\r\n                  <AlertDescription>\r\n                    Compte verrouillé jusqu'au {formatDateTime(user.accountLockedUntil)}\r\n                  </AlertDescription>\r\n                </Alert>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;"],"names":["UserProfile","id","useParams","navigate","useNavigate","currentUser","useAuth","canManageUsers","canViewReports","usePermissions","user","setUser","useState","loading","setLoading","attendanceStats","setAttendanceStats","recentAttendances","setRecentAttendances","upcomingEvents","setUpcomingEvents","isOwnProfile","targetUserId","useEffect","loadUserProfile","loadUserStats","userData","response","userService","error","toast","attendanceResponse","attendanceService","recentResponse","eventsResponse","eventService","getRoleBadge","role","config","Shield","User","UserCheck","BarChart3","IconComponent","Badge","jsx","getStatusBadge","status","CheckCircle","XCircle","Clock","getUserInitials","names","formatDate","dateString","formatDateTime","handleChangeUserStatus","newStatus","prev","jsxs","Button","ArrowLeft","Settings","Fragment","UserX","Edit","Card","CardHeader","CardTitle","CardContent","Avatar","AvatarImage","AvatarFallback","Mail","Phone","Building","Calendar","Tabs","TabsList","TabsTrigger","TabsContent","attendance","_a","event","Alert","AlertDescription"],"mappings":"28BAiCA,MAAMA,GAAc,IAAM,CACxB,KAAM,CAAE,GAAAC,CAAA,EAAOC,GAAA,EACTC,EAAWC,GAAA,EACX,CAAE,KAAMC,CAAA,EAAgBC,EAAA,EACxB,CAAE,eAAAC,EAAgB,eAAAC,CAAA,EAAmBC,EAAA,EAErC,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAA0B,IAAI,EAChD,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAiBC,CAAkB,EAAIJ,WAAS,CACrD,YAAa,EACb,eAAgB,EAChB,eAAgB,EAChB,aAAc,EACd,YAAa,EACb,UAAW,EACX,mBAAoB,GACpB,OAAQ,CAAA,CACT,EACK,CAACK,EAAmBC,CAAoB,EAAIN,EAAAA,SAAgB,CAAA,CAAE,EAC9D,CAACO,EAAgBC,CAAiB,EAAIR,EAAAA,SAAgB,CAAA,CAAE,EAGxDS,EAAe,CAACpB,GAAMA,KAAOI,GAAA,YAAAA,EAAa,IAC1CiB,EAAeD,EAAehB,GAAA,YAAAA,EAAa,GAAKJ,EAEtDsB,EAAAA,UAAU,IAAM,CACVD,IACFE,EAAA,EACAC,EAAA,EACF,EACC,CAACH,CAAY,CAAC,EAEjB,MAAME,EAAkB,SAAY,CAClC,GAAI,CACFV,EAAW,EAAI,EAEf,IAAIY,EAEJ,GAAIL,EAAc,CAChB,MAAMM,EAAW,MAAMC,EAAY,aAAA,EACnC,GAAI,CAACD,EAAS,SAAW,CAACA,EAAS,KACjC,MAAM,IAAI,MAAM,oCAAoC,EAEtDD,EAAWC,EAAS,IAAA,KACf,CACL,MAAMA,EAAW,MAAMC,EAAY,YAAYN,CAAa,EAC5D,GAAI,CAACK,EAAS,SAAW,CAACA,EAAS,KACjC,MAAM,IAAI,MAAM,wBAAwB,EAE1CD,EAAWC,EAAS,IAAA,CAGtBhB,EAAQe,CAAQ,CAAA,OAETG,EAAY,CACnB,QAAQ,MAAM,8BAA+BA,CAAK,EAClDC,EAAM,MAAMD,EAAM,SAAW,qCAAqC,EAC7DR,GACHlB,EAAS,QAAQ,CACnB,QACF,CACEW,EAAW,EAAK,CAAA,CAClB,EAGIW,EAAgB,SAAY,CAChC,GAAI,CAEF,MAAMM,EAAqB,MAAMC,EAAkB,mBAAmB,CACpE,OAAQV,CAAA,CACT,EAEGS,EAAmB,SAAWA,EAAmB,MACnDf,EAAmBe,EAAmB,IAAI,EAI5C,MAAME,EAAiB,MAAMD,EAAkB,iBAAiB,CAC9D,MAAO,EAAA,CACR,EAOD,GALIC,EAAe,SAAWA,EAAe,MAC3Cf,EAAqBe,EAAe,IAAI,EAItCzB,EAAgB,CAClB,MAAM0B,EAAiB,MAAMC,GAAa,UAAU,CAClD,cAAeb,EACf,OAAQ,YACR,MAAO,CAAA,CACR,EAEGY,EAAe,SAAWA,EAAe,MAC3Cd,EAAkBc,EAAe,KAAK,IAAI,CAC5C,CACF,OAEOL,EAAY,CACnB,QAAQ,MAAM,4BAA6BA,CAAK,CAAA,CAClD,EAGIO,EAAgBC,GAAmB,CAUvC,MAAMC,EATa,CACjB,YAAa,CAAE,QAAS,cAAwB,MAAO,cAAe,KAAMC,CAAA,EAC5E,MAAO,CAAE,QAAS,cAAwB,MAAO,QAAS,KAAMA,CAAA,EAChE,UAAW,CAAE,QAAS,UAAoB,MAAO,eAAgB,KAAMC,CAAA,EACvE,UAAW,CAAE,QAAS,YAAsB,MAAO,aAAc,KAAMC,CAAA,EACvE,QAAS,CAAE,QAAS,UAAoB,MAAO,WAAY,KAAMC,EAAA,EACjE,YAAa,CAAE,QAAS,UAAoB,MAAO,cAAe,KAAMF,CAAA,CAAK,EAGrDH,CAAI,GAAK,CAAE,QAAS,UAAoB,MAAOA,EAAM,KAAMG,CAAA,EAC/EG,EAAgBL,EAAO,KAE7B,cACGM,EAAA,CAAM,QAASN,EAAO,QAAS,UAAU,0BACxC,SAAA,CAAAO,EAAAA,IAACF,EAAA,CAAc,UAAU,SAAA,CAAU,EAClCL,EAAO,KAAA,EACV,CAAA,EAIEQ,EAAkBC,GAAuB,CAQ7C,MAAMT,EAPe,CACnB,OAAQ,CAAE,QAAS,UAAoB,MAAO,QAAS,KAAMU,CAAA,EAC7D,SAAU,CAAE,QAAS,YAAsB,MAAO,UAAW,KAAMC,CAAA,EACnE,QAAS,CAAE,QAAS,UAAoB,MAAO,aAAc,KAAMC,CAAA,EACnE,UAAW,CAAE,QAAS,cAAwB,MAAO,WAAY,KAAMD,CAAA,CAAQ,EAGrDF,CAAM,GAAK,CAAE,QAAS,UAAoB,MAAOA,EAAQ,KAAMG,CAAA,EACrFP,EAAgBL,EAAO,KAE7B,cACGM,EAAA,CAAM,QAASN,EAAO,QAAS,UAAU,0BACxC,SAAA,CAAAO,EAAAA,IAACF,EAAA,CAAc,UAAU,SAAA,CAAU,EAClCL,EAAO,KAAA,EACV,CAAA,EAIEa,EAAmBzC,GAAmB,CAC1C,GAAIA,EAAK,WAAaA,EAAK,SACzB,MAAO,GAAGA,EAAK,UAAU,CAAC,CAAC,GAAGA,EAAK,SAAS,CAAC,CAAC,GAAG,YAAA,EAEnD,GAAIA,EAAK,YAAa,CACpB,MAAM0C,EAAQ1C,EAAK,YAAY,MAAM,GAAG,EACxC,OAAO0C,EAAM,OAAS,EAClB,GAAGA,EAAM,CAAC,EAAE,CAAC,CAAC,GAAGA,EAAM,CAAC,EAAE,CAAC,CAAC,GAAG,YAAA,EAC/BA,EAAM,CAAC,EAAE,CAAC,EAAE,YAAA,CAAY,CAE9B,OAAO1C,EAAK,MAAM,CAAC,EAAE,YAAA,CAAY,EAG7B2C,EAAcC,GACX,IAAI,KAAKA,CAAU,EAAE,mBAAmB,QAAS,CACtD,IAAK,UACL,MAAO,OACP,KAAM,SAAA,CACP,EAGGC,EAAkBD,GACf,IAAI,KAAKA,CAAU,EAAE,mBAAmB,QAAS,CACtD,IAAK,UACL,MAAO,QACP,KAAM,UACN,OAAQ,SAAA,CACT,EAGGE,EAAyB,MAAOC,GAA0B,CAC9D,GAAI,GAAC/C,GAAQ,CAACH,GAEd,GAAI,EACe,MAAMqB,EAAY,iBAAiBlB,EAAK,GAAI+C,CAAS,GACzD,UACX9C,EAAQ+C,GAAQA,EAAO,CAAE,GAAGA,EAAM,OAAQD,CAAA,EAAc,IAAI,EAC5D3B,EAAM,QAAQ,+BAA+B,EAC/C,MACmB,CACnBA,EAAM,MAAM,yCAAyC,CAAA,CACvD,EAGF,OAAIjB,QAEC,MAAA,CAAI,UAAU,uBACb,SAAA8C,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAd,EAAAA,IAAC,MAAA,CAAI,UAAU,4BAAA,CAA6B,EAC5Cc,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAd,EAAAA,IAAC,MAAA,CAAI,UAAU,uBAAA,CAAwB,EACvCA,EAAAA,IAAC,MAAA,CAAI,UAAU,uBAAA,CAAwB,CAAA,EACzC,EACAc,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAd,EAAAA,IAAC,MAAA,CAAI,UAAU,uBAAA,CAAwB,EACvCA,EAAAA,IAAC,MAAA,CAAI,UAAU,uBAAA,CAAwB,CAAA,CAAA,CACzC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAICnC,EAcHiD,EAAAA,KAAC,MAAA,CAAI,UAAU,iCAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAA,CAACtC,GACAsC,EAAAA,KAACC,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMzD,EAAS,QAAQ,EAClE,SAAA,CAAA0C,EAAAA,IAACgB,GAAA,CAAU,UAAU,cAAA,CAAe,EAAE,QAAA,EAExC,SAED,MAAA,CACC,SAAA,CAAAhB,MAAC,KAAA,CAAG,UAAU,qCACX,SAAAxB,EAAe,aAAe,qBACjC,EACAwB,EAAAA,IAAC,IAAA,CAAE,UAAU,6BACV,SAAAnC,EAAK,aAAe,GAAGA,EAAK,SAAS,IAAIA,EAAK,QAAQ,EAAA,CACzD,CAAA,CAAA,CACF,CAAA,EACF,EAEAiD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAtC,GACCsC,EAAAA,KAACC,EAAA,CAAO,QAAQ,UAAU,KAAK,KAC7B,SAAA,CAAAf,EAAAA,IAACiB,EAAA,CAAS,UAAU,cAAA,CAAe,EAAE,YAAA,EAEvC,EAEDvD,GAAkB,CAACc,GAClBsC,EAAAA,KAAAI,EAAAA,SAAA,CACG,SAAA,CAAArD,EAAK,SAAW,SACfiD,EAAAA,KAACC,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMJ,EAAuB,UAAU,EAEhD,SAAA,CAAAX,EAAAA,IAACmB,GAAA,CAAM,UAAU,cAAA,CAAe,EAAE,YAAA,CAAA,CAAA,EAIpCL,EAAAA,KAACC,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMJ,EAAuB,QAAQ,EAE9C,SAAA,CAAAX,EAAAA,IAACJ,EAAA,CAAU,UAAU,cAAA,CAAe,EAAE,SAAA,CAAA,CAAA,EAI1CkB,EAAAA,KAACC,EAAA,CAAO,QAAQ,UAAU,KAAK,KAC7B,SAAA,CAAAf,EAAAA,IAACoB,GAAA,CAAK,UAAU,cAAA,CAAe,EAAE,UAAA,CAAA,CAEnC,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,EAEAN,EAAAA,KAAC,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BAEb,SAAA,CAAAA,OAACO,EAAA,CACC,SAAA,CAAArB,MAACsB,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAU,SAAA,2BAAA,CAAyB,EACtC,EACAvB,MAACwB,EAAA,CACC,SAAAV,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAA,EAAAA,KAACW,GAAA,CAAO,UAAU,YAChB,SAAA,CAAAzB,EAAAA,IAAC0B,GAAA,CAAY,IAAK7D,EAAK,cAAA,CAAgB,QACtC8D,GAAA,CAAe,UAAU,WAAY,SAAArB,EAAgBzC,CAAI,CAAA,CAAE,CAAA,EAC9D,EAEAiD,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAd,EAAAA,IAAC,KAAA,CAAG,UAAU,yBACX,SAAAnC,EAAK,aAAe,GAAGA,EAAK,SAAS,IAAIA,EAAK,QAAQ,GACzD,EACC0B,EAAa1B,EAAK,IAAI,EACtBoC,EAAepC,EAAK,MAAM,CAAA,EAC7B,EAEAiD,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAd,EAAAA,IAAC4B,GAAA,CAAK,UAAU,uBAAA,CAAwB,SACvC,MAAA,CACC,SAAA,CAAA5B,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,QAAK,EAChCA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAyB,WAAK,KAAA,CAAM,CAAA,CAAA,CACnD,CAAA,EACF,EAECnC,EAAK,OACJiD,OAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAd,EAAAA,IAAC6B,GAAA,CAAM,UAAU,wBAAA,CAAyB,SACzC,MAAA,CACC,SAAA,CAAA7B,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,YAAS,EACpCA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAyB,WAAK,KAAA,CAAM,CAAA,CAAA,CACnD,CAAA,EACF,EAGDnC,EAAK,YACJiD,OAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAd,EAAAA,IAAC8B,GAAA,CAAS,UAAU,yBAAA,CAA0B,SAC7C,MAAA,CACC,SAAA,CAAA9B,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,cAAW,EACtCA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAyB,WAAK,UAAA,CAAW,CAAA,CAAA,CACxD,CAAA,EACF,EAGFc,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAd,EAAAA,IAAC+B,EAAA,CAAS,UAAU,yBAAA,CAA0B,SAC7C,MAAA,CACC,SAAA,CAAA/B,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,gBAAa,QACvC,IAAA,CAAE,UAAU,wBAAyB,SAAAQ,EAAW3C,EAAK,SAAS,CAAA,CAAE,CAAA,CAAA,CACnE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGCF,UACE0D,EAAA,CACC,SAAA,CAAArB,MAACsB,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAU,SAAA,0BAAA,CAAwB,EACrC,EACAvB,MAACwB,EAAA,CACC,SAAAV,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAd,EAAAA,IAAC,MAAA,CAAI,UAAU,mCAAoC,SAAA9B,EAAgB,YAAY,EAC/E8B,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,YAAA,CAAU,CAAA,EAC3D,EACAc,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAd,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAqC,SAAA9B,EAAgB,eAAe,EACnF8B,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,YAAA,CAAU,CAAA,EAC3D,EACAc,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,qCAAsC,SAAA,CAAA5C,EAAgB,eAAe,QAAQ,CAAC,EAAE,GAAA,EAAC,EAChG8B,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,eAAA,CAAa,CAAA,EAC9D,EACAc,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAd,EAAAA,IAAC,MAAA,CAAI,UAAU,qCAAsC,SAAA9B,EAAgB,OAAO,EAC5E8B,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,gBAAA,CAAc,CAAA,CAAA,CAC/D,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIFc,EAAAA,KAACkB,GAAA,CAAK,aAAa,WAAW,UAAU,YACtC,SAAA,CAAAlB,OAACmB,GAAA,CACC,SAAA,CAAAjC,EAAAA,IAACkC,EAAA,CAAY,MAAM,WAAW,SAAA,mBAAgB,EAC7CvE,GACCqC,EAAAA,IAACkC,EAAA,CAAY,MAAM,SAAS,SAAA,qBAAkB,EAEhDlC,EAAAA,IAACkC,EAAA,CAAY,MAAM,UAAU,SAAA,mBAAA,CAAiB,CAAA,EAChD,EAEAlC,MAACmC,EAAA,CAAY,MAAM,WACjB,gBAACd,EAAA,CACC,SAAA,CAAArB,MAACsB,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAU,SAAA,oBAAA,CAAkB,EAC/B,QACCC,EAAA,CACE,SAAApD,EAAkB,OAAS,QACzB,MAAA,CAAI,UAAU,YACZ,SAAAA,EAAkB,IAAKgE,GAAA,OACtBtB,OAAAA,OAAC,MAAA,CAAwB,UAAU,0DACjC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAd,EAAAA,IAAC,MAAA,CAAI,UAAW,wBACdoC,EAAW,SAAW,UAAY,eAClCA,EAAW,SAAW,OAAS,gBAAkB,YACnD,GAAI,SACH,MAAA,CACC,SAAA,CAAApC,MAAC,IAAA,CAAE,UAAU,cAAe,UAAAqC,EAAAD,EAAW,QAAX,YAAAC,EAAkB,MAAM,EACpDrC,EAAAA,IAAC,IAAA,CAAE,UAAU,gCACV,SAAAoC,EAAW,YAAc1B,EAAe0B,EAAW,WAAW,EAAI,YAAA,CACrE,CAAA,CAAA,CACF,CAAA,EACF,EACApC,EAAAA,IAACD,GAAM,QACLqC,EAAW,SAAW,UAAY,UAClCA,EAAW,SAAW,OAAS,YAAc,cAE5C,SAAAA,EAAW,SAAW,UAAY,UAClCA,EAAW,SAAW,OAAS,YAAc,QAAA,CAChD,CAAA,CAAA,EAnBQA,EAAW,EAoBrB,EACD,EACH,EAEAtB,OAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAd,EAAAA,IAACG,EAAA,CAAY,UAAU,8CAAA,CAA+C,EACtEH,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,yBAAA,CAAuB,CAAA,CAAA,CAC9D,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,EAECrC,GACCqC,EAAAA,IAACmC,EAAA,CAAY,MAAM,SACjB,gBAACd,EAAA,CACC,SAAA,CAAArB,MAACsB,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAU,SAAA,oBAAA,CAAkB,EAC/B,QACCC,EAAA,CACE,SAAAlD,EAAe,OAAS,QACtB,MAAA,CAAI,UAAU,YACZ,SAAAA,EAAe,IAAKgE,GACnBxB,OAAC,MAAA,CAAmB,UAAU,0DAC5B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAd,EAAAA,IAAC+B,EAAA,CAAS,UAAU,uBAAA,CAAwB,SAC3C,MAAA,CACC,SAAA,CAAA/B,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAe,SAAAsC,EAAM,MAAM,QACvC,IAAA,CAAE,UAAU,gCACV,SAAA5B,EAAe4B,EAAM,SAAS,CAAA,CACjC,CAAA,CAAA,CACF,CAAA,EACF,EACAtC,EAAAA,IAACD,EAAA,CAAM,QAAQ,UAAW,WAAM,IAAA,CAAK,CAAA,CAAA,EAV7BuC,EAAM,EAWhB,CACD,EACH,EAEAxB,OAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAd,EAAAA,IAAC+B,EAAA,CAAS,UAAU,8CAAA,CAA+C,EACnE/B,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,yBAAA,CAAuB,CAAA,CAAA,CAC9D,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,EAGFA,MAACmC,EAAA,CAAY,MAAM,UACjB,gBAACd,EAAA,CACC,SAAA,CAAArB,MAACsB,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAU,SAAA,mBAAA,CAAiB,EAC9B,QACCC,EAAA,CAAY,UAAU,YACrB,SAAAV,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAd,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,iBAAc,EACzCA,EAAAA,IAAC,IAAA,CAAE,UAAU,0CAA2C,WAAK,EAAA,CAAG,CAAA,EAClE,SACC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,gBAAa,EACxCc,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAjD,EAAK,oBACHsC,EAAA,CAAY,UAAU,yBAAyB,EAEhDH,EAAAA,IAACI,EAAA,CAAQ,UAAU,sBAAA,CAAuB,QAE3C,OAAA,CAAK,UAAU,wBACb,SAAAvC,EAAK,cAAgB,UAAY,aAAA,CACpC,CAAA,CAAA,CACF,CAAA,EACF,SACC,MAAA,CACC,SAAA,CAAAmC,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,aAAU,EACrCc,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAjD,EAAK,uBACHsC,EAAA,CAAY,UAAU,yBAAyB,EAEhDH,EAAAA,IAACI,EAAA,CAAQ,UAAU,sBAAA,CAAuB,QAE3C,OAAA,CAAK,UAAU,wBACb,SAAAvC,EAAK,iBAAmB,SAAW,WAAA,CACtC,CAAA,CAAA,CACF,CAAA,EACF,SACC,MAAA,CACC,SAAA,CAAAmC,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,qBAAkB,EAC7CA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBACV,SAAAnC,EAAK,YAAc6C,EAAe7C,EAAK,WAAW,EAAI,QAAA,CACzD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGAiD,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,OAACO,EAAA,CACC,SAAA,CAAArB,MAACsB,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAU,SAAA,QAAA,CAAM,EACnB,EACAT,EAAAA,KAACU,EAAA,CAAY,UAAU,YACrB,SAAA,CAAAV,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAd,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,YAAS,EACjDA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAe,WAAgB,YAAA,CAAa,CAAA,EAC9D,EACAc,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAd,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,WAAQ,EAChDA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAe,WAAgB,WAAA,CAAY,CAAA,EAC7D,EACAc,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAd,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,UAAO,EAC/CA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAe,WAAgB,SAAA,CAAU,CAAA,EAC3D,EACAc,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAd,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,mBAAgB,EACxDc,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAA5C,EAAgB,eAAe,QAAQ,CAAC,EAAE,GAAA,CAAA,CAAC,CAAA,CAAA,CAC5E,CAAA,CAAA,CACF,CAAA,EACF,SAGCmD,EAAA,CACC,SAAA,CAAArB,MAACsB,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAU,SAAA,kBAAA,CAAgB,EAC7B,EACAT,EAAAA,KAACU,EAAA,CAAY,UAAU,YACrB,SAAA,CAAAV,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAd,EAAAA,IAAC,QAAK,SAAA,QAAA,CAAM,EACXC,EAAepC,EAAK,MAAM,CAAA,EAC7B,EACAiD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAd,EAAAA,IAAC,QAAK,SAAA,MAAA,CAAI,EACTT,EAAa1B,EAAK,IAAI,CAAA,EACzB,EACCA,EAAK,oBAAsB,IAAI,KAAKA,EAAK,kBAAkB,EAAI,IAAI,MAClEiD,EAAAA,KAACyB,EAAA,CAAM,QAAQ,cACb,SAAA,CAAAvC,EAAAA,IAACI,EAAA,CAAQ,UAAU,SAAA,CAAU,SAC5BoC,EAAA,CAAiB,SAAA,CAAA,8BACY9B,EAAe7C,EAAK,kBAAkB,CAAA,CAAA,CACpE,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,QAlWG,MAAA,CAAI,UAAU,uBACb,SAAAiD,EAAAA,KAACyB,EAAA,CAAM,QAAQ,cACb,SAAA,CAAAvC,EAAAA,IAACI,EAAA,CAAQ,UAAU,SAAA,CAAU,EAC7BJ,EAAAA,IAACwC,GAAiB,SAAA,gFAAA,CAElB,CAAA,CAAA,CACF,CAAA,CACF,CA6VN"}