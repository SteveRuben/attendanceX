{"version":3,"file":"InsightsWidget-Cl0kgkMs.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/minus.js","../../src/components/ml/AnomalyAlert.tsx","../../src/components/ml/InsightsWidget.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }]];\nconst Minus = createLucideIcon(\"minus\", __iconNode);\n\nexport { __iconNode, Minus as default };\n//# sourceMappingURL=minus.js.map\n","// src/components/ml/AnomalyAlert.tsx - Composant d'alerte d'anomalie\r\nimport { useState, useEffect } from 'react';\r\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { \r\n  AlertTriangle, \r\n  AlertCircle, \r\n  Info, \r\n  X, \r\n  Eye, \r\n  Clock,\r\n  Users,\r\n  Calendar,\r\n  TrendingDown\r\n} from 'lucide-react';\r\nimport { mlService, type MLAnomaly } from '@/services';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface AnomalyAlertProps {\r\n  timeframe?: {\r\n    start: string;\r\n    end: string;\r\n  };\r\n  type?: 'attendance' | 'behavior' | 'event';\r\n  threshold?: number;\r\n  autoRefresh?: boolean;\r\n  refreshInterval?: number; // en minutes\r\n  onAnomalyClick?: (anomaly: MLAnomaly) => void;\r\n  compact?: boolean;\r\n}\r\n\r\nconst AnomalyAlert = ({\r\n  timeframe,\r\n  type = 'attendance',\r\n  threshold = 0.7,\r\n  autoRefresh = false,\r\n  refreshInterval = 15,\r\n  onAnomalyClick,\r\n  compact = false\r\n}: AnomalyAlertProps) => {\r\n  const [anomalies, setAnomalies] = useState<MLAnomaly[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [dismissed, setDismissed] = useState<Set<string>>(new Set());\r\n\r\n  useEffect(() => {\r\n    loadAnomalies();\r\n    \r\n    if (autoRefresh) {\r\n      const interval = setInterval(loadAnomalies, refreshInterval * 60 * 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [timeframe, type, threshold, autoRefresh, refreshInterval]);\r\n\r\n  const loadAnomalies = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const defaultTimeframe = timeframe || {\r\n        start: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 24h ago\r\n        end: new Date().toISOString()\r\n      };\r\n\r\n      const response = await mlService.detectAnomalies({\r\n        type,\r\n        timeframe: defaultTimeframe,\r\n        threshold,\r\n        includeRecommendations: true\r\n      });\r\n\r\n      if (response.success && response.data) {\r\n        setAnomalies(response.data.anomalies);\r\n      } else {\r\n        setError('Impossible de charger les anomalies');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message || 'Erreur lors du chargement');\r\n      console.error('Error loading anomalies:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getSeverityIcon = (severity: string) => {\r\n    switch (severity) {\r\n      case 'high':\r\n        return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\r\n      case 'medium':\r\n        return <AlertCircle className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'low':\r\n        return <Info className=\"w-4 h-4 text-blue-500\" />;\r\n      default:\r\n        return <Info className=\"w-4 h-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'high': return 'border-red-500 bg-red-50';\r\n      case 'medium': return 'border-yellow-500 bg-yellow-50';\r\n      case 'low': return 'border-blue-500 bg-blue-50';\r\n      default: return 'border-gray-500 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const getTypeIcon = (anomalyType: string) => {\r\n    if (anomalyType.includes('attendance')) return <Users className=\"w-4 h-4\" />;\r\n    if (anomalyType.includes('event')) return <Calendar className=\"w-4 h-4\" />;\r\n    if (anomalyType.includes('behavior')) return <TrendingDown className=\"w-4 h-4\" />;\r\n    return <AlertCircle className=\"w-4 h-4\" />;\r\n  };\r\n\r\n  const handleDismiss = (anomalyId: string) => {\r\n    setDismissed(prev => new Set([...prev, anomalyId]));\r\n  };\r\n\r\n  const handleView = (anomaly: MLAnomaly) => {\r\n    onAnomalyClick?.(anomaly);\r\n  };\r\n\r\n  const visibleAnomalies = anomalies.filter(anomaly => !dismissed.has(anomaly.id));\r\n  const highSeverityCount = visibleAnomalies.filter(a => a.severity === 'high').length;\r\n  const mediumSeverityCount = visibleAnomalies.filter(a => a.severity === 'medium').length;\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card className={compact ? 'h-20' : 'h-32'}>\r\n        <CardContent className=\"p-4 flex items-center justify-center\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary\"></div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"destructive\">\r\n        <AlertTriangle className=\"h-4 w-4\" />\r\n        <AlertTitle>Erreur de détection</AlertTitle>\r\n        <AlertDescription>{error}</AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (visibleAnomalies.length === 0) {\r\n    if (compact) {\r\n      return (\r\n        <Card className=\"h-20\">\r\n          <CardContent className=\"p-4 flex items-center justify-center\">\r\n            <div className=\"flex items-center text-green-600\">\r\n              <Info className=\"w-4 h-4 mr-2\" />\r\n              <span className=\"text-sm\">Aucune anomalie détectée</span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Alert>\r\n        <Info className=\"h-4 w-4\" />\r\n        <AlertTitle>Système normal</AlertTitle>\r\n        <AlertDescription>\r\n          Aucune anomalie détectée dans les dernières 24 heures.\r\n        </AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (compact) {\r\n    return (\r\n      <Card className=\"h-20\">\r\n        <CardContent className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <AlertTriangle className=\"w-4 h-4 text-red-500\" />\r\n              <span className=\"text-sm font-medium\">\r\n                {visibleAnomalies.length} anomalie{visibleAnomalies.length > 1 ? 's' : ''}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-1\">\r\n              {highSeverityCount > 0 && (\r\n                <Badge variant=\"destructive\" className=\"text-xs\">\r\n                  {highSeverityCount} critique{highSeverityCount > 1 ? 's' : ''}\r\n                </Badge>\r\n              )}\r\n              {mediumSeverityCount > 0 && (\r\n                <Badge variant=\"secondary\" className=\"text-xs\">\r\n                  {mediumSeverityCount} modérée{mediumSeverityCount > 1 ? 's' : ''}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      {/* Résumé */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3\">\r\n          <CardTitle className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <AlertTriangle className=\"w-5 h-5 text-red-500\" />\r\n              <span>Anomalies Détectées</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Badge variant=\"outline\" className=\"text-xs\">\r\n                {visibleAnomalies.length} total\r\n              </Badge>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={loadAnomalies}>\r\n                Actualiser\r\n              </Button>\r\n            </div>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center space-x-4 text-sm\">\r\n            <div className=\"flex items-center space-x-1\">\r\n              <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\r\n              <span>{highSeverityCount} critique{highSeverityCount > 1 ? 's' : ''}</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-1\">\r\n              <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\r\n              <span>{mediumSeverityCount} modérée{mediumSeverityCount > 1 ? 's' : ''}</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-1\">\r\n              <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\r\n              <span>{visibleAnomalies.filter(a => a.severity === 'low').length} mineure{visibleAnomalies.filter(a => a.severity === 'low').length > 1 ? 's' : ''}</span>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Liste des anomalies */}\r\n      <div className=\"space-y-2\">\r\n        {visibleAnomalies.slice(0, 5).map((anomaly) => (\r\n          <Alert key={anomaly.id} className={getSeverityColor(anomaly.severity)}>\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex items-start space-x-3\">\r\n                {getSeverityIcon(anomaly.severity)}\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center space-x-2 mb-1\">\r\n                    {getTypeIcon(anomaly.type)}\r\n                    <AlertTitle className=\"text-sm\">\r\n                      {anomaly.description}\r\n                    </AlertTitle>\r\n                  </div>\r\n                  <AlertDescription className=\"text-xs\">\r\n                    <div className=\"flex items-center space-x-4 mb-2\">\r\n                      <span className=\"flex items-center\">\r\n                        <Clock className=\"w-3 h-3 mr-1\" />\r\n                        {new Date(anomaly.detectedAt).toLocaleString('fr-FR')}\r\n                      </span>\r\n                      <span className=\"flex items-center\">\r\n                        <Users className=\"w-3 h-3 mr-1\" />\r\n                        {anomaly.affectedEntities.length} entité{anomaly.affectedEntities.length > 1 ? 's' : ''} affectée{anomaly.affectedEntities.length > 1 ? 's' : ''}\r\n                      </span>\r\n                      <Badge variant=\"outline\" className=\"text-xs\">\r\n                        {Math.round(anomaly.confidence * 100)}% confiance\r\n                      </Badge>\r\n                    </div>\r\n                    {anomaly.recommendations && anomaly.recommendations.length > 0 && (\r\n                      <div className=\"mt-2 p-2 bg-white/50 rounded text-xs\">\r\n                        <strong>Recommandation:</strong> {anomaly.recommendations[0]}\r\n                      </div>\r\n                    )}\r\n                  </AlertDescription>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleView(anomaly)}\r\n                  className=\"h-6 w-6 p-0\"\r\n                >\r\n                  <Eye className=\"w-3 h-3\" />\r\n                </Button>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleDismiss(anomaly.id)}\r\n                  className=\"h-6 w-6 p-0\"\r\n                >\r\n                  <X className=\"w-3 h-3\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Alert>\r\n        ))}\r\n      </div>\r\n\r\n      {visibleAnomalies.length > 5 && (\r\n        <div className=\"text-center\">\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            Voir {visibleAnomalies.length - 5} anomalie{visibleAnomalies.length - 5 > 1 ? 's' : ''} de plus\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnomalyAlert;","// src/components/ml/InsightsWidget.tsx - Widget d'insights IA\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { \r\n  Lightbulb, \r\n  TrendingUp, \r\n  TrendingDown, \r\n  Minus,\r\n  Target,\r\n  Users,\r\n  Calendar,\r\n  BarChart3,\r\n  ArrowRight,\r\n  Sparkles,\r\n  Brain\r\n} from 'lucide-react';\r\nimport { mlService, type MLInsight, type MLTrend } from '@/services';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface InsightsWidgetProps {\r\n  type: 'user' | 'event' | 'department' | 'global';\r\n  targetId?: string;\r\n  timeframe?: {\r\n    start: string;\r\n    end: string;\r\n  };\r\n  maxInsights?: number;\r\n  showTrends?: boolean;\r\n  showRecommendations?: boolean;\r\n  compact?: boolean;\r\n  onInsightClick?: (insight: MLInsight) => void;\r\n}\r\n\r\nconst InsightsWidget = ({\r\n  type,\r\n  targetId,\r\n  timeframe,\r\n  maxInsights = 3,\r\n  showTrends = true,\r\n  showRecommendations = true,\r\n  compact = false,\r\n  onInsightClick\r\n}: InsightsWidgetProps) => {\r\n  const [insights, setInsights] = useState<MLInsight[]>([]);\r\n  const [trends, setTrends] = useState<MLTrend[]>([]);\r\n  const [recommendations, setRecommendations] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadInsights();\r\n  }, [type, targetId, timeframe]);\r\n\r\n  const loadInsights = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const defaultTimeframe = timeframe || {\r\n        start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(), // 30 days ago\r\n        end: new Date().toISOString()\r\n      };\r\n\r\n      const response = await mlService.generateInsights({\r\n        type,\r\n        targetId,\r\n        timeframe: defaultTimeframe,\r\n        includeRecommendations: showRecommendations\r\n      });\r\n\r\n      if (response.success && response.data) {\r\n        setInsights(response.data.insights.slice(0, maxInsights));\r\n        setTrends(response.data.trends);\r\n        setRecommendations(response.data.recommendations);\r\n      } else {\r\n        setError('Impossible de charger les insights');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message || 'Erreur lors du chargement');\r\n      console.error('Error loading insights:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCategoryIcon = (category: string) => {\r\n    switch (category) {\r\n      case 'user_preference': return <Users className=\"w-4 h-4\" />;\r\n      case 'scheduling': return <Calendar className=\"w-4 h-4\" />;\r\n      case 'performance': return <BarChart3 className=\"w-4 h-4\" />;\r\n      case 'trend': return <TrendingUp className=\"w-4 h-4\" />;\r\n      case 'seasonal': return <Calendar className=\"w-4 h-4\" />;\r\n      default: return <Lightbulb className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const getTrendIcon = (direction: string) => {\r\n    switch (direction) {\r\n      case 'up': return <TrendingUp className=\"w-4 h-4 text-green-600\" />;\r\n      case 'down': return <TrendingDown className=\"w-4 h-4 text-red-600\" />;\r\n      case 'stable': return <Minus className=\"w-4 h-4 text-gray-600\" />;\r\n      default: return <Minus className=\"w-4 h-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getSignificanceColor = (significance: string) => {\r\n    switch (significance) {\r\n      case 'high': return 'text-red-600 bg-red-50';\r\n      case 'medium': return 'text-yellow-600 bg-yellow-50';\r\n      case 'low': return 'text-blue-600 bg-blue-50';\r\n      default: return 'text-gray-600 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.8) return 'text-green-600';\r\n    if (confidence >= 0.6) return 'text-yellow-600';\r\n    return 'text-red-600';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card className={compact ? 'h-32' : 'h-48'}>\r\n        <CardContent className=\"p-6 flex items-center justify-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Card className={compact ? 'h-32' : 'h-48'}>\r\n        <CardContent className=\"p-6 flex flex-col items-center justify-center\">\r\n          <Brain className=\"w-8 h-8 text-red-500 mb-2\" />\r\n          <p className=\"text-sm text-muted-foreground text-center\">{error}</p>\r\n          <Button variant=\"outline\" size=\"sm\" onClick={loadInsights} className=\"mt-2\">\r\n            Réessayer\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (insights.length === 0 && trends.length === 0) {\r\n    return (\r\n      <Card className={compact ? 'h-32' : 'h-48'}>\r\n        <CardContent className=\"p-6 flex flex-col items-center justify-center\">\r\n          <Sparkles className=\"w-8 h-8 text-muted-foreground mb-2\" />\r\n          <p className=\"text-sm text-muted-foreground text-center\">\r\n            Aucun insight disponible pour cette période\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (compact) {\r\n    return (\r\n      <Card className=\"h-32\">\r\n        <CardContent className=\"p-4\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Brain className=\"w-4 h-4 text-primary\" />\r\n              <span className=\"text-sm font-medium\">Insights IA</span>\r\n            </div>\r\n            <Badge variant=\"outline\" className=\"text-xs\">\r\n              {insights.length} insight{insights.length > 1 ? 's' : ''}\r\n            </Badge>\r\n          </div>\r\n          \r\n          {insights.length > 0 && (\r\n            <div className=\"space-y-1\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                {getCategoryIcon(insights[0].category)}\r\n                <span className=\"text-xs text-muted-foreground truncate\">\r\n                  {insights[0].title}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Progress \r\n                  value={insights[0].confidence * 100} \r\n                  className=\"h-1 flex-1 mr-2\"\r\n                />\r\n                <span className=\"text-xs text-muted-foreground\">\r\n                  {Math.round(insights[0].confidence * 100)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"pb-3\">\r\n        <CardTitle className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Brain className=\"w-5 h-5 text-primary\" />\r\n            <span>Insights IA</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Badge variant=\"outline\" className=\"text-xs\">\r\n              {insights.length} insight{insights.length > 1 ? 's' : ''}\r\n            </Badge>\r\n            <Button variant=\"outline\" size=\"sm\" onClick={loadInsights}>\r\n              Actualiser\r\n            </Button>\r\n          </div>\r\n        </CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Insights principaux */}\r\n        {insights.length > 0 && (\r\n          <div className=\"space-y-3\">\r\n            <h4 className=\"text-sm font-medium flex items-center\">\r\n              <Lightbulb className=\"w-4 h-4 mr-1\" />\r\n              Insights Clés\r\n            </h4>\r\n            {insights.map((insight, index) => (\r\n              <div \r\n                key={index} \r\n                className=\"p-3 border rounded-lg hover:bg-muted/50 cursor-pointer transition-colors\"\r\n                onClick={() => onInsightClick?.(insight)}\r\n              >\r\n                <div className=\"flex items-start justify-between mb-2\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getCategoryIcon(insight.category)}\r\n                    <span className=\"font-medium text-sm\">{insight.title}</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Badge \r\n                      variant=\"outline\" \r\n                      className={`text-xs ${getConfidenceColor(insight.confidence)}`}\r\n                    >\r\n                      {Math.round(insight.confidence * 100)}%\r\n                    </Badge>\r\n                    {insight.actionable && (\r\n                      <Badge variant=\"secondary\" className=\"text-xs\">\r\n                        Actionnable\r\n                      </Badge>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <p className=\"text-sm text-muted-foreground mb-2\">\r\n                  {insight.description}\r\n                </p>\r\n\r\n                {insight.action && (\r\n                  <div className=\"flex items-center text-xs text-primary\">\r\n                    <Target className=\"w-3 h-3 mr-1\" />\r\n                    <span>{insight.action.description}</span>\r\n                    <ArrowRight className=\"w-3 h-3 ml-1\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Tendances */}\r\n        {showTrends && trends.length > 0 && (\r\n          <div className=\"space-y-3\">\r\n            <h4 className=\"text-sm font-medium flex items-center\">\r\n              <TrendingUp className=\"w-4 h-4 mr-1\" />\r\n              Tendances\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 gap-2\">\r\n              {trends.slice(0, 3).map((trend, index) => (\r\n                <div key={index} className=\"flex items-center justify-between p-2 bg-muted rounded\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getTrendIcon(trend.direction)}\r\n                    <span className=\"text-sm\">{trend.metric}</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className={`text-sm font-medium ${\r\n                      trend.direction === 'up' ? 'text-green-600' : \r\n                      trend.direction === 'down' ? 'text-red-600' : 'text-gray-600'\r\n                    }`}>\r\n                      {trend.direction === 'up' ? '+' : trend.direction === 'down' ? '-' : ''}\r\n                      {Math.abs(trend.change)}%\r\n                    </span>\r\n                    <Badge \r\n                      variant=\"outline\" \r\n                      className={`text-xs ${getSignificanceColor(trend.significance)}`}\r\n                    >\r\n                      {trend.significance}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Recommandations */}\r\n        {showRecommendations && recommendations.length > 0 && (\r\n          <div className=\"space-y-3\">\r\n            <h4 className=\"text-sm font-medium flex items-center\">\r\n              <Target className=\"w-4 h-4 mr-1\" />\r\n              Recommandations\r\n            </h4>\r\n            <div className=\"space-y-2\">\r\n              {recommendations.slice(0, 2).map((recommendation, index) => (\r\n                <div key={index} className=\"text-sm text-muted-foreground bg-blue-50 p-3 rounded border-l-4 border-blue-500\">\r\n                  {recommendation}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Footer */}\r\n        <div className=\"flex items-center justify-between pt-2 border-t text-xs text-muted-foreground\">\r\n          <span>Dernière mise à jour: {new Date().toLocaleTimeString('fr-FR')}</span>\r\n          <span>IA v2.0</span>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InsightsWidget;"],"names":["__iconNode","Minus","createLucideIcon","AnomalyAlert","timeframe","type","threshold","autoRefresh","refreshInterval","onAnomalyClick","compact","anomalies","setAnomalies","useState","loading","setLoading","error","setError","dismissed","setDismissed","useEffect","loadAnomalies","interval","defaultTimeframe","response","mlService","err","getSeverityIcon","severity","jsx","AlertTriangle","AlertCircle","Info","getSeverityColor","getTypeIcon","anomalyType","Users","Calendar","TrendingDown","handleDismiss","anomalyId","prev","handleView","anomaly","visibleAnomalies","highSeverityCount","a","mediumSeverityCount","Card","CardContent","jsxs","Alert","AlertTitle","AlertDescription","Badge","CardHeader","CardTitle","Button","Clock","Eye","X","InsightsWidget","targetId","maxInsights","showTrends","showRecommendations","onInsightClick","insights","setInsights","trends","setTrends","recommendations","setRecommendations","loadInsights","getCategoryIcon","category","BarChart3","TrendingUp","Lightbulb","getTrendIcon","direction","getSignificanceColor","significance","getConfidenceColor","confidence","Brain","Sparkles","Progress","insight","index","Target","ArrowRight","trend","recommendation"],"mappings":"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","x_google_ignoreList":[0]}