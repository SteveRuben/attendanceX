{"version":3,"file":"Dashboard-DelBZfXi.js","sources":["../../src/pages/Dashboard/Dashboard.tsx"],"sourcesContent":["// src/pages/Dashboard/Dashboard.tsx - Dashboard principal AttendanceX\r\nimport { useState, useEffect } from 'react';\r\nimport { useAuth, usePermissions } from '@/hooks/use-auth';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { \r\n  Calendar, \r\n  Users, \r\n  TrendingUp, \r\n  Clock, \r\n  MapPin, \r\n  Bell, \r\n  BarChart3,\r\n  Activity,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  XCircle,\r\n  Plus,\r\n  Filter,\r\n  Download,\r\n  RefreshCw,\r\n  Brain,\r\n  Target,\r\n  Zap\r\n} from 'lucide-react';\r\nimport { eventService, attendanceService, userService, notificationService } from '@/services';\r\nimport { InsightsWidget, AnomalyAlert, RecommendationPanel } from '@/components/ml';\r\nimport type { Event, Attendance, User } from '@attendance-x/shared';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface DashboardStats {\r\n  totalEvents: number;\r\n  upcomingEvents: number;\r\n  totalUsers: number;\r\n  activeUsers: number;\r\n  attendanceRate: number;\r\n  totalAttendances: number;\r\n  pendingNotifications: number;\r\n}\r\n\r\ninterface RecentActivity {\r\n  id: string;\r\n  type: 'event_created' | 'attendance_marked' | 'user_joined' | 'notification_sent';\r\n  title: string;\r\n  description: string;\r\n  timestamp: string;\r\n  user: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useAuth();\r\n  const { canCreateEvents, canManageUsers, canViewReports, isAdmin } = usePermissions();\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState<DashboardStats>({\r\n    totalEvents: 0,\r\n    upcomingEvents: 0,\r\n    totalUsers: 0,\r\n    activeUsers: 0,\r\n    attendanceRate: 0,\r\n    totalAttendances: 0,\r\n    pendingNotifications: 0\r\n  });\r\n  \r\n  const [upcomingEvents, setUpcomingEvents] = useState<Event[]>([]);\r\n  const [recentAttendances, setRecentAttendances] = useState<Attendance[]>([]);\r\n  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Load data in parallel\r\n      const [\r\n        eventsResponse,\r\n        upcomingEventsResponse,\r\n        attendanceStatsResponse,\r\n        userStatsResponse,\r\n        myAttendancesResponse,\r\n        notificationsResponse\r\n      ] = await Promise.allSettled([\r\n        eventService.getEventStats(),\r\n        eventService.getUpcomingEvents(5),\r\n        attendanceService.getAttendanceStats(),\r\n        isAdmin ? userService.getUserStats() : Promise.resolve({ data: null }),\r\n        attendanceService.getMyAttendances({ limit: 5 }),\r\n        notificationService.getMyNotifications({ limit: 5, unreadOnly: true })\r\n      ]);\r\n\r\n      // Process results\r\n      const eventStats = eventsResponse.status === 'fulfilled' ? eventsResponse.value.data : null;\r\n      const upcomingEventsData = upcomingEventsResponse.status === 'fulfilled' ? upcomingEventsResponse.value.data : [];\r\n      const attendanceStats = attendanceStatsResponse.status === 'fulfilled' ? attendanceStatsResponse.value.data : null;\r\n      const userStats = userStatsResponse.status === 'fulfilled' ? userStatsResponse.value.data : null;\r\n      const myAttendances = myAttendancesResponse.status === 'fulfilled' ? myAttendancesResponse.value.data : [];\r\n      const notifications = notificationsResponse.status === 'fulfilled' ? notificationsResponse.value.data : null;\r\n\r\n      // Update stats\r\n      setStats({\r\n        totalEvents: eventStats?.total || 0,\r\n        upcomingEvents: eventStats?.upcoming || 0,\r\n        totalUsers: userStats?.total || 0,\r\n        activeUsers: userStats?.active || 0,\r\n        attendanceRate: attendanceStats?.attendanceRate || 0,\r\n        totalAttendances: attendanceStats?.total || 0,\r\n        pendingNotifications: notifications?.pagination?.total || 0\r\n      });\r\n\r\n      setUpcomingEvents(upcomingEventsData || []);\r\n      setRecentAttendances(myAttendances || []);\r\n\r\n      // Generate recent activity\r\n      const activities: RecentActivity[] = [];\r\n      \r\n      if (upcomingEventsData) {\r\n        upcomingEventsData.slice(0, 3).forEach(event => {\r\n          activities.push({\r\n            id: `event-${event.id}`,\r\n            type: 'event_created',\r\n            title: 'Nouvel √©v√©nement',\r\n            description: event.title,\r\n            timestamp: event.createdAt,\r\n            user: event.organizer?.displayName || 'Organisateur',\r\n            icon: <Calendar className=\"w-4 h-4 text-blue-600\" />\r\n          });\r\n        });\r\n      }\r\n\r\n      if (myAttendances) {\r\n        myAttendances.slice(0, 2).forEach(attendance => {\r\n          activities.push({\r\n            id: `attendance-${attendance.id}`,\r\n            type: 'attendance_marked',\r\n            title: 'Pr√©sence marqu√©e',\r\n            description: `√âv√©nement: ${attendance.event?.title || 'N/A'}`,\r\n            timestamp: attendance.checkInTime || attendance.createdAt,\r\n            user: user?.displayName || 'Vous',\r\n            icon: <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n          });\r\n        });\r\n      }\r\n\r\n      setRecentActivity(activities.sort((a, b) => \r\n        new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\r\n      ).slice(0, 5));\r\n\r\n    } catch (error: any) {\r\n      console.error('Error loading dashboard data:', error);\r\n      toast.error('Erreur lors du chargement du tableau de bord');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await loadDashboardData();\r\n    setRefreshing(false);\r\n    toast.success('Tableau de bord actualis√©');\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    const statusConfig = {\r\n      active: { variant: 'default' as const, label: 'Actif' },\r\n      upcoming: { variant: 'secondary' as const, label: '√Ä venir' },\r\n      ongoing: { variant: 'default' as const, label: 'En cours' },\r\n      completed: { variant: 'outline' as const, label: 'Termin√©' },\r\n      cancelled: { variant: 'destructive' as const, label: 'Annul√©' },\r\n      present: { variant: 'default' as const, label: 'Pr√©sent' },\r\n      absent: { variant: 'destructive' as const, label: 'Absent' },\r\n      late: { variant: 'secondary' as const, label: 'En retard' }\r\n    };\r\n\r\n    const config = statusConfig[status as keyof typeof statusConfig] || \r\n                   { variant: 'outline' as const, label: status };\r\n\r\n    return <Badge variant={config.variant}>{config.label}</Badge>;\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('fr-FR', {\r\n      day: 'numeric',\r\n      month: 'short',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <div className=\"animate-pulse space-y-6\">\r\n          <div className=\"h-8 bg-muted rounded w-1/3\"></div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            {[...Array(4)].map((_, i) => (\r\n              <div key={i} className=\"h-32 bg-muted rounded\"></div>\r\n            ))}\r\n          </div>\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {[...Array(2)].map((_, i) => (\r\n              <div key={i} className=\"h-96 bg-muted rounded\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-foreground\">\r\n            Bonjour, {user?.firstName || user?.displayName} üëã\r\n          </h1>\r\n          <p className=\"text-muted-foreground mt-1\">\r\n            Voici un aper√ßu de votre activit√© AttendanceX\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={handleRefresh}\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`w-4 h-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\r\n            Actualiser\r\n          </Button>\r\n          {canCreateEvents && (\r\n            <Button size=\"sm\">\r\n              <Plus className=\"w-4 h-4 mr-2\" />\r\n              Nouvel √©v√©nement\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <Card className=\"metric-card\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"metric-label\">√âv√©nements totaux</p>\r\n                <p className=\"metric-value\">{stats.totalEvents}</p>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  {stats.upcomingEvents} √† venir\r\n                </p>\r\n              </div>\r\n              <Calendar className=\"w-8 h-8 text-blue-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"metric-card\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"metric-label\">Taux de pr√©sence</p>\r\n                <p className=\"metric-value\">{stats.attendanceRate.toFixed(1)}%</p>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  {stats.totalAttendances} pr√©sences\r\n                </p>\r\n              </div>\r\n              <TrendingUp className=\"w-8 h-8 text-green-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {isAdmin && (\r\n          <Card className=\"metric-card\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"metric-label\">Utilisateurs</p>\r\n                  <p className=\"metric-value\">{stats.totalUsers}</p>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    {stats.activeUsers} actifs\r\n                  </p>\r\n                </div>\r\n                <Users className=\"w-8 h-8 text-purple-600\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        <Card className=\"metric-card\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"metric-label\">Notifications</p>\r\n                <p className=\"metric-value\">{stats.pendingNotifications}</p>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Non lues\r\n                </p>\r\n              </div>\r\n              <Bell className=\"w-8 h-8 text-orange-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Upcoming Events */}\r\n        <div className=\"lg:col-span-2\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between\">\r\n              <CardTitle className=\"flex items-center\">\r\n                <Calendar className=\"w-5 h-5 mr-2\" />\r\n                √âv√©nements √† venir\r\n              </CardTitle>\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                Voir tout\r\n              </Button>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {upcomingEvents.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {upcomingEvents.map((event) => (\r\n                    <div key={event.id} className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors\">\r\n                      <div className=\"flex-1\">\r\n                        <h4 className=\"font-medium text-foreground\">{event.title}</h4>\r\n                        <div className=\"flex items-center space-x-4 mt-2 text-sm text-muted-foreground\">\r\n                          <div className=\"flex items-center\">\r\n                            <Clock className=\"w-4 h-4 mr-1\" />\r\n                            {formatDate(event.startDate)}\r\n                          </div>\r\n                          {event.location && (\r\n                            <div className=\"flex items-center\">\r\n                              <MapPin className=\"w-4 h-4 mr-1\" />\r\n                              {event.location.name}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {getStatusBadge(event.status)}\r\n                        <Button variant=\"outline\" size=\"sm\">\r\n                          D√©tails\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-8\">\r\n                  <Calendar className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                  <p className=\"text-muted-foreground\">Aucun √©v√©nement √† venir</p>\r\n                  {canCreateEvents && (\r\n                    <Button className=\"mt-4\" size=\"sm\">\r\n                      <Plus className=\"w-4 h-4 mr-2\" />\r\n                      Cr√©er un √©v√©nement\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Recent Activity */}\r\n        <div>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Activity className=\"w-5 h-5 mr-2\" />\r\n                Activit√© r√©cente\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {recentActivity.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {recentActivity.map((activity) => (\r\n                    <div key={activity.id} className=\"flex items-start space-x-3\">\r\n                      <div className=\"flex-shrink-0 mt-1\">\r\n                        {activity.icon}\r\n                      </div>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <p className=\"text-sm font-medium text-foreground\">\r\n                          {activity.title}\r\n                        </p>\r\n                        <p className=\"text-sm text-muted-foreground truncate\">\r\n                          {activity.description}\r\n                        </p>\r\n                        <p className=\"text-xs text-muted-foreground mt-1\">\r\n                          {formatDate(activity.timestamp)} ‚Ä¢ {activity.user}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-8\">\r\n                  <Activity className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                  <p className=\"text-muted-foreground\">Aucune activit√© r√©cente</p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* AI/ML Widgets Section */}\r\n      {canViewReports && (\r\n        <div className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-xl font-semibold flex items-center\">\r\n              <Brain className=\"w-6 h-6 mr-2 text-primary\" />\r\n              Intelligence Artificielle\r\n            </h2>\r\n            <Button variant=\"outline\" size=\"sm\" onClick={() => window.location.href = '/analytics'}>\r\n              <Zap className=\"w-4 h-4 mr-2\" />\r\n              Dashboard IA complet\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Insights Widget */}\r\n            <InsightsWidget\r\n              type=\"global\"\r\n              timeframe={{\r\n                start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\r\n                end: new Date().toISOString()\r\n              }}\r\n              maxInsights={2}\r\n              showTrends={true}\r\n              showRecommendations={false}\r\n              compact={false}\r\n            />\r\n\r\n            {/* Anomaly Alert */}\r\n            <AnomalyAlert\r\n              type=\"attendance\"\r\n              timeframe={{\r\n                start: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n                end: new Date().toISOString()\r\n              }}\r\n              threshold={0.7}\r\n              autoRefresh={true}\r\n              refreshInterval={15}\r\n              compact={false}\r\n            />\r\n          </div>\r\n\r\n          {/* Recommendations Panel */}\r\n          <RecommendationPanel\r\n            type=\"global\"\r\n            targetId=\"system\"\r\n            maxRecommendations={3}\r\n            showPriority={true}\r\n            showActions={true}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Quick Actions */}\r\n      {(canCreateEvents || canManageUsers || canViewReports) && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Actions rapides</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n              {canCreateEvents && (\r\n                <Button variant=\"outline\" className=\"h-20 flex-col\">\r\n                  <Plus className=\"w-6 h-6 mb-2\" />\r\n                  Cr√©er un √©v√©nement\r\n                </Button>\r\n              )}\r\n              {canViewReports && (\r\n                <Button variant=\"outline\" className=\"h-20 flex-col\" onClick={() => window.location.href = '/reports'}>\r\n                  <BarChart3 className=\"w-6 h-6 mb-2\" />\r\n                  G√©n√©rer un rapport\r\n                </Button>\r\n              )}\r\n              {canViewReports && (\r\n                <Button variant=\"outline\" className=\"h-20 flex-col\" onClick={() => window.location.href = '/predictions'}>\r\n                  <Target className=\"w-6 h-6 mb-2\" />\r\n                  Pr√©dictions IA\r\n                </Button>\r\n              )}\r\n              {canManageUsers && (\r\n                <Button variant=\"outline\" className=\"h-20 flex-col\">\r\n                  <Users className=\"w-6 h-6 mb-2\" />\r\n                  G√©rer les utilisateurs\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"names":["Dashboard","user","useAuth","canCreateEvents","canManageUsers","canViewReports","isAdmin","usePermissions","loading","setLoading","useState","stats","setStats","upcomingEvents","setUpcomingEvents","recentAttendances","setRecentAttendances","recentActivity","setRecentActivity","refreshing","setRefreshing","useEffect","loadDashboardData","eventsResponse","upcomingEventsResponse","attendanceStatsResponse","userStatsResponse","myAttendancesResponse","notificationsResponse","eventService","attendanceService","userService","notificationService","eventStats","upcomingEventsData","attendanceStats","userStats","myAttendances","notifications","_a","activities","event","jsx","Calendar","attendance","CheckCircle","a","b","error","toast","handleRefresh","getStatusBadge","status","config","Badge","formatDate","dateString","jsxs","_","i","Button","RefreshCw","Plus","Card","CardContent","TrendingUp","Users","Bell","CardHeader","CardTitle","Clock","MapPin","Activity","activity","Brain","Zap","InsightsWidget","AnomalyAlert","RecommendationPanel","BarChart3","Target"],"mappings":"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"}