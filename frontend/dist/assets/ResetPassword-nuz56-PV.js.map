{"version":3,"file":"ResetPassword-nuz56-PV.js","sources":["../../src/pages/Auth/ResetPassword.tsx"],"sourcesContent":["// src/pages/auth/ResetPassword.tsx - Version moderne et optimisÃ©e\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams, Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { useAuth } from '@/hooks/use-auth';\r\nimport { Loader2, Lock, ArrowLeft, Key, CheckCircle, Eye, EyeOff, AlertCircle, Shield } from 'lucide-react';\r\n\r\nconst ResetPassword = () => {\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [passwordStrength, setPasswordStrength] = useState(0);\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const { resetPassword, isAuthenticated } = useAuth();\r\n  const token = searchParams.get('token');\r\n\r\n  // Redirect if already authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/dashboard', { replace: true });\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      toast.error('Invalid or missing recovery token');\r\n      navigate('/forgot-password');\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  // Password strength calculation\r\n  useEffect(() => {\r\n    const calculateStrength = (password: string) => {\r\n      let strength = 0;\r\n      if (password.length >= 6) strength += 1;\r\n      if (password.length >= 8) strength += 1;\r\n      if (/[A-Z]/.test(password)) strength += 1;\r\n      if (/[0-9]/.test(password)) strength += 1;\r\n      if (/[^A-Za-z0-9]/.test(password)) strength += 1;\r\n      return strength;\r\n    };\r\n    \r\n    setPasswordStrength(calculateStrength(formData.password));\r\n  }, [formData.password]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n    } else if (formData.password.length < 6) {\r\n      newErrors.password = 'Password must be at least 6 characters';\r\n    }\r\n    \r\n    if (!formData.confirmPassword) {\r\n      newErrors.confirmPassword = 'Please confirm your password';\r\n    } else if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = 'Passwords do not match';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n\r\n    setLoading(true);\r\n    setErrors({});\r\n\r\n    try {\r\n      await resetPassword(token!, formData.password);\r\n      setSuccess(true);\r\n      \r\n      // Redirect to login after 3 seconds\r\n      setTimeout(() => {\r\n        navigate('/login', { \r\n          state: { message: 'Password reset successfully! You can now sign in with your new password.' }\r\n        });\r\n      }, 3000);\r\n    } catch (error: any) {\r\n      if (error.message.includes('Invalid token')) {\r\n        setErrors({ general: 'This reset link is invalid or has expired. Please request a new one.' });\r\n      } else if (error.message.includes('Token expired')) {\r\n        setErrors({ general: 'This reset link has expired. Please request a new one.' });\r\n      } else {\r\n        setErrors({ general: error.message || 'Failed to reset password. Please try again.' });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear field-specific error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: '' }));\r\n    }\r\n  };\r\n\r\n  const getPasswordStrengthColor = () => {\r\n    if (passwordStrength <= 1) return 'bg-red-500';\r\n    if (passwordStrength <= 2) return 'bg-yellow-500';\r\n    if (passwordStrength <= 3) return 'bg-blue-500';\r\n    return 'bg-green-500';\r\n  };\r\n\r\n  const getPasswordStrengthText = () => {\r\n    if (passwordStrength <= 1) return 'Weak';\r\n    if (passwordStrength <= 2) return 'Fair';\r\n    if (passwordStrength <= 3) return 'Good';\r\n    return 'Strong';\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-md w-full\">\r\n          {/* Header */}\r\n          <div className=\"text-center mb-8\">\r\n            <div className=\"flex justify-center mb-6\">\r\n              <div className=\"w-12 h-12 bg-green-500 rounded-lg flex items-center justify-center\">\r\n                <CheckCircle className=\"text-white w-6 h-6\" />\r\n              </div>\r\n            </div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900\">Password updated!</h1>\r\n            <p className=\"text-gray-600 mt-2\">Your password has been successfully reset</p>\r\n          </div>\r\n\r\n          {/* Success Card */}\r\n          <Card className=\"bg-white border-gray-200 shadow-sm\">\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"text-center space-y-4\">\r\n                <Alert>\r\n                  <CheckCircle className=\"h-4 w-4\" />\r\n                  <AlertDescription>\r\n                    You will be redirected to the sign in page in a few seconds.\r\n                  </AlertDescription>\r\n                </Alert>\r\n                \r\n                <div className=\"pt-4\">\r\n                  <Button asChild className=\"w-full bg-gray-900 text-white hover:bg-gray-800 font-medium\">\r\n                    <Link to=\"/login\">\r\n                      <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n                      Continue to sign in\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"flex justify-center mb-6\">\r\n            <div className=\"w-12 h-12 bg-gray-900 rounded-lg flex items-center justify-center\">\r\n              <Shield className=\"text-white w-6 h-6\" />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Set new password</h1>\r\n          <p className=\"text-gray-600 mt-2\">Choose a secure password for your account</p>\r\n        </div>\r\n\r\n        {/* Reset Password Form */}\r\n        <Card className=\"bg-white border-gray-200 shadow-sm\">\r\n          <CardHeader className=\"space-y-1 pb-6\">\r\n            <CardTitle className=\"text-xl text-center text-gray-900\">Create new password</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {/* General Error */}\r\n            {errors.general && (\r\n              <Alert className=\"mb-4\" variant=\"destructive\">\r\n                <AlertCircle className=\"h-4 w-4\" />\r\n                <AlertDescription>{errors.general}</AlertDescription>\r\n              </Alert>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                    New password\r\n                  </Label>\r\n                  <div className=\"relative\">\r\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                    <Input\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      required\r\n                      value={formData.password}\r\n                      onChange={handleChange}\r\n                      className={`pl-10 pr-10 w-full ${errors.password ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                      placeholder=\"At least 6 characters\"\r\n                      minLength={6}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 z-10\"\r\n                    >\r\n                      {showPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\r\n                    </button>\r\n                  </div>\r\n                  {formData.password && (\r\n                    <div className=\"mt-2\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\r\n                          <div \r\n                            className={`h-2 rounded-full transition-all duration-300 ${getPasswordStrengthColor()}`}\r\n                            style={{ width: `${(passwordStrength / 5) * 100}%` }}\r\n                          />\r\n                        </div>\r\n                        <span className=\"text-xs text-gray-600\">{getPasswordStrengthText()}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {errors.password && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700 mb-2 block\">\r\n                    Confirm new password\r\n                  </Label>\r\n                  <div className=\"relative\">\r\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 pointer-events-none z-10\" />\r\n                    <Input\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      type={showConfirmPassword ? 'text' : 'password'}\r\n                      required\r\n                      value={formData.confirmPassword}\r\n                      onChange={handleChange}\r\n                      className={`pl-10 pr-10 w-full ${errors.confirmPassword ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''}`}\r\n                      placeholder=\"Confirm your password\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 z-10\"\r\n                    >\r\n                      {showConfirmPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\r\n                    </button>\r\n                  </div>\r\n                  {errors.confirmPassword && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.confirmPassword}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"w-full bg-gray-900 text-white hover:bg-gray-800 font-medium\"\r\n              >\r\n                {loading ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin mr-2\" />\r\n                ) : (\r\n                  <Key className=\"w-4 h-4 mr-2\" />\r\n                )}\r\n                {loading ? 'Updating password...' : 'Update password'}\r\n              </Button>\r\n            </form>\r\n\r\n            <div className=\"mt-6\">\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <div className=\"w-full border-t border-gray-200\" />\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                  <span className=\"px-2 bg-white text-gray-500\">Need help?</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-6 text-center\">\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"text-gray-700 hover:text-gray-900 font-medium hover:underline inline-flex items-center\"\r\n                >\r\n                  <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n                  Back to sign in\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Security tips */}\r\n        <div className=\"mt-6\">\r\n          <Alert>\r\n            <Lock className=\"h-4 w-4\" />\r\n            <AlertDescription>\r\n              <strong>Security tip:</strong> Use a unique password that you don't use for other accounts.\r\n            </AlertDescription>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;"],"names":["ResetPassword","formData","setFormData","useState","loading","setLoading","success","setSuccess","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","errors","setErrors","passwordStrength","setPasswordStrength","searchParams","useSearchParams","navigate","useNavigate","resetPassword","isAuthenticated","useAuth","token","useEffect","toast","password","strength","validateForm","newErrors","handleSubmit","e","error","handleChange","name","value","prev","getPasswordStrengthColor","getPasswordStrengthText","jsxs","jsx","CheckCircle","Card","CardContent","Alert","AlertDescription","Button","Link","ArrowLeft","Shield","CardHeader","CardTitle","AlertCircle","Label","Lock","Input","EyeOff","Eye","Loader2","Key"],"mappings":"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"}