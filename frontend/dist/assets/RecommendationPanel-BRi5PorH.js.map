{"version":3,"file":"RecommendationPanel-BRi5PorH.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/lightbulb.js","../../../node_modules/lucide-react/dist/esm/icons/sparkles.js","../../src/components/ml/RecommendationPanel.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5\",\n      key: \"1gvzjb\"\n    }\n  ],\n  [\"path\", { d: \"M9 18h6\", key: \"x1upvd\" }],\n  [\"path\", { d: \"M10 22h4\", key: \"ceow96\" }]\n];\nconst Lightbulb = createLucideIcon(\"lightbulb\", __iconNode);\n\nexport { __iconNode, Lightbulb as default };\n//# sourceMappingURL=lightbulb.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z\",\n      key: \"4pj2yx\"\n    }\n  ],\n  [\"path\", { d: \"M20 3v4\", key: \"1olli1\" }],\n  [\"path\", { d: \"M22 5h-4\", key: \"1gvqau\" }],\n  [\"path\", { d: \"M4 17v2\", key: \"vumght\" }],\n  [\"path\", { d: \"M5 18H3\", key: \"zchphs\" }]\n];\nconst Sparkles = createLucideIcon(\"sparkles\", __iconNode);\n\nexport { __iconNode, Sparkles as default };\n//# sourceMappingURL=sparkles.js.map\n","// src/components/ml/RecommendationPanel.tsx - Panneau de recommandations intelligentes\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { \r\n  Lightbulb, \r\n  Target, \r\n  CheckCircle, \r\n  Clock, \r\n  Users, \r\n  Calendar,\r\n  TrendingUp,\r\n  AlertCircle,\r\n  ArrowRight,\r\n  Sparkles,\r\n  X\r\n} from 'lucide-react';\r\nimport { mlService } from '@/services';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface Recommendation {\r\n  id: string;\r\n  type: string;\r\n  title: string;\r\n  description: string;\r\n  confidence: number;\r\n  priority: 'low' | 'medium' | 'high';\r\n  category: string;\r\n  actionable: boolean;\r\n  action?: {\r\n    type: string;\r\n    description: string;\r\n    target?: string;\r\n  };\r\n  estimatedImpact?: string;\r\n  timeToImplement?: string;\r\n}\r\n\r\ninterface RecommendationPanelProps {\r\n  type: 'attendance' | 'event' | 'user' | 'department';\r\n  targetId: string;\r\n  context?: Record<string, any>;\r\n  maxRecommendations?: number;\r\n  showPriority?: boolean;\r\n  showActions?: boolean;\r\n  onRecommendationApply?: (recommendation: Recommendation) => void;\r\n  onRecommendationDismiss?: (recommendationId: string) => void;\r\n}\r\n\r\nconst RecommendationPanel = ({\r\n  type,\r\n  targetId,\r\n  context,\r\n  maxRecommendations = 5,\r\n  showPriority = true,\r\n  showActions = true,\r\n  onRecommendationApply,\r\n  onRecommendationDismiss\r\n}: RecommendationPanelProps) => {\r\n  const [recommendations, setRecommendations] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [dismissed, setDismissed] = useState<Set<string>>(new Set());\r\n  const [applied, setApplied] = useState<Set<string>>(new Set());\r\n\r\n  useEffect(() => {\r\n    loadRecommendations();\r\n  }, [type, targetId, context]);\r\n\r\n  const loadRecommendations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await mlService.getRecommendations({\r\n        type,\r\n        targetId,\r\n        context\r\n      });\r\n\r\n      if (response.success && response.data) {\r\n        setRecommendations(response.data.recommendations);\r\n      } else {\r\n        setError('Impossible de charger les recommandations');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message || 'Erreur lors du chargement');\r\n      console.error('Error loading recommendations:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getPriorityIcon = (priority: string) => {\r\n    switch (priority) {\r\n      case 'high': return <AlertCircle className=\"w-4 h-4 text-red-500\" />;\r\n      case 'medium': return <Clock className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'low': return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\r\n      default: return <Lightbulb className=\"w-4 h-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  const getPriorityColor = (priority: string) => {\r\n    switch (priority) {\r\n      case 'high': return 'border-red-200 bg-red-50';\r\n      case 'medium': return 'border-yellow-200 bg-yellow-50';\r\n      case 'low': return 'border-green-200 bg-green-50';\r\n      default: return 'border-blue-200 bg-blue-50';\r\n    }\r\n  };\r\n\r\n  const getCategoryIcon = (category: string) => {\r\n    switch (category) {\r\n      case 'scheduling': return <Calendar className=\"w-4 h-4\" />;\r\n      case 'engagement': return <Users className=\"w-4 h-4\" />;\r\n      case 'optimization': return <TrendingUp className=\"w-4 h-4\" />;\r\n      case 'communication': return <Target className=\"w-4 h-4\" />;\r\n      default: return <Lightbulb className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.8) return 'text-green-600';\r\n    if (confidence >= 0.6) return 'text-yellow-600';\r\n    return 'text-red-600';\r\n  };\r\n\r\n  const handleApply = (recommendation: Recommendation) => {\r\n    setApplied(prev => new Set([...prev, recommendation.id]));\r\n    onRecommendationApply?.(recommendation);\r\n    toast.success('Recommandation appliquée');\r\n  };\r\n\r\n  const handleDismiss = (recommendationId: string) => {\r\n    setDismissed(prev => new Set([...prev, recommendationId]));\r\n    onRecommendationDismiss?.(recommendationId);\r\n  };\r\n\r\n  // Simuler des recommandations structurées à partir des chaînes\r\n  const structuredRecommendations: Recommendation[] = recommendations.map((rec, index) => ({\r\n    id: `rec-${index}`,\r\n    type: type,\r\n    title: rec.length > 50 ? rec.substring(0, 50) + '...' : rec,\r\n    description: rec,\r\n    confidence: 0.8 + (Math.random() * 0.2), // Simulation\r\n    priority: index === 0 ? 'high' : index === 1 ? 'medium' : 'low',\r\n    category: index % 4 === 0 ? 'scheduling' : \r\n              index % 4 === 1 ? 'engagement' : \r\n              index % 4 === 2 ? 'optimization' : 'communication',\r\n    actionable: true,\r\n    action: {\r\n      type: 'implement',\r\n      description: 'Appliquer cette recommandation',\r\n    },\r\n    estimatedImpact: index === 0 ? 'Élevé' : index === 1 ? 'Moyen' : 'Faible',\r\n    timeToImplement: index === 0 ? '5 min' : index === 1 ? '15 min' : '30 min'\r\n  }));\r\n\r\n  const visibleRecommendations = structuredRecommendations\r\n    .filter(rec => !dismissed.has(rec.id))\r\n    .slice(0, maxRecommendations);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardContent className=\"p-6 flex items-center justify-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Card>\r\n        <CardContent className=\"p-6 flex flex-col items-center justify-center\">\r\n          <AlertCircle className=\"w-8 h-8 text-red-500 mb-2\" />\r\n          <p className=\"text-sm text-muted-foreground text-center\">{error}</p>\r\n          <Button variant=\"outline\" size=\"sm\" onClick={loadRecommendations} className=\"mt-2\">\r\n            Réessayer\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (visibleRecommendations.length === 0) {\r\n    return (\r\n      <Card>\r\n        <CardContent className=\"p-6 flex flex-col items-center justify-center\">\r\n          <Sparkles className=\"w-8 h-8 text-muted-foreground mb-2\" />\r\n          <p className=\"text-sm text-muted-foreground text-center\">\r\n            Aucune recommandation disponible pour le moment\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"pb-3\">\r\n        <CardTitle className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Lightbulb className=\"w-5 h-5 text-primary\" />\r\n            <span>Recommandations IA</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Badge variant=\"outline\" className=\"text-xs\">\r\n              {visibleRecommendations.length} recommandation{visibleRecommendations.length > 1 ? 's' : ''}\r\n            </Badge>\r\n            <Button variant=\"outline\" size=\"sm\" onClick={loadRecommendations}>\r\n              Actualiser\r\n            </Button>\r\n          </div>\r\n        </CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"space-y-4\">\r\n        {visibleRecommendations.map((recommendation) => (\r\n          <div \r\n            key={recommendation.id}\r\n            className={`p-4 border rounded-lg ${getPriorityColor(recommendation.priority)} ${\r\n              applied.has(recommendation.id) ? 'opacity-60' : ''\r\n            }`}\r\n          >\r\n            <div className=\"flex items-start justify-between mb-3\">\r\n              <div className=\"flex items-start space-x-3\">\r\n                {showPriority && getPriorityIcon(recommendation.priority)}\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center space-x-2 mb-1\">\r\n                    {getCategoryIcon(recommendation.category)}\r\n                    <h4 className=\"font-medium text-sm\">{recommendation.title}</h4>\r\n                  </div>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    {recommendation.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={() => handleDismiss(recommendation.id)}\r\n                className=\"h-6 w-6 p-0\"\r\n              >\r\n                <X className=\"w-3 h-3\" />\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Métriques */}\r\n            <div className=\"flex items-center space-x-4 mb-3 text-xs\">\r\n              <div className=\"flex items-center space-x-1\">\r\n                <span className=\"text-muted-foreground\">Confiance:</span>\r\n                <span className={`font-medium ${getConfidenceColor(recommendation.confidence)}`}>\r\n                  {Math.round(recommendation.confidence * 100)}%\r\n                </span>\r\n              </div>\r\n              {recommendation.estimatedImpact && (\r\n                <div className=\"flex items-center space-x-1\">\r\n                  <span className=\"text-muted-foreground\">Impact:</span>\r\n                  <span className=\"font-medium\">{recommendation.estimatedImpact}</span>\r\n                </div>\r\n              )}\r\n              {recommendation.timeToImplement && (\r\n                <div className=\"flex items-center space-x-1\">\r\n                  <span className=\"text-muted-foreground\">Temps:</span>\r\n                  <span className=\"font-medium\">{recommendation.timeToImplement}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Badges */}\r\n            <div className=\"flex items-center space-x-2 mb-3\">\r\n              <Badge variant=\"outline\" className=\"text-xs capitalize\">\r\n                {recommendation.priority}\r\n              </Badge>\r\n              <Badge variant=\"secondary\" className=\"text-xs capitalize\">\r\n                {recommendation.category}\r\n              </Badge>\r\n              {recommendation.actionable && (\r\n                <Badge variant=\"default\" className=\"text-xs\">\r\n                  Actionnable\r\n                </Badge>\r\n              )}\r\n              {applied.has(recommendation.id) && (\r\n                <Badge variant=\"default\" className=\"text-xs bg-green-600\">\r\n                  ✓ Appliquée\r\n                </Badge>\r\n              )}\r\n            </div>\r\n\r\n            {/* Actions */}\r\n            {showActions && recommendation.actionable && !applied.has(recommendation.id) && (\r\n              <div className=\"flex items-center justify-between\">\r\n                {recommendation.action && (\r\n                  <div className=\"flex items-center text-xs text-primary\">\r\n                    <Target className=\"w-3 h-3 mr-1\" />\r\n                    <span>{recommendation.action.description}</span>\r\n                  </div>\r\n                )}\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleApply(recommendation)}\r\n                  className=\"ml-auto\"\r\n                >\r\n                  Appliquer\r\n                  <ArrowRight className=\"w-3 h-3 ml-1\" />\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        {/* Footer */}\r\n        <div className=\"flex items-center justify-between pt-2 border-t text-xs text-muted-foreground\">\r\n          <span>\r\n            {applied.size} appliquée{applied.size > 1 ? 's' : ''}, {dismissed.size} ignorée{dismissed.size > 1 ? 's' : ''}\r\n          </span>\r\n          <span>IA v2.0</span>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RecommendationPanel;"],"names":["__iconNode","Lightbulb","createLucideIcon","Sparkles","RecommendationPanel","type","targetId","context","maxRecommendations","showPriority","showActions","onRecommendationApply","onRecommendationDismiss","recommendations","setRecommendations","useState","loading","setLoading","error","setError","dismissed","setDismissed","applied","setApplied","useEffect","loadRecommendations","response","mlService","err","getPriorityIcon","priority","jsx","AlertCircle","Clock","CheckCircle","getPriorityColor","getCategoryIcon","category","Calendar","Users","TrendingUp","Target","getConfidenceColor","confidence","handleApply","recommendation","prev","toast","handleDismiss","recommendationId","visibleRecommendations","rec","index","Card","CardContent","jsxs","Button","CardHeader","CardTitle","Badge","X","ArrowRight"],"mappings":"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","x_google_ignoreList":[0,1]}