{"version":3,"file":"ReportsList-DhwvwMWC.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/file-text.js","../../src/services/reportService.ts","../../src/components/ui/dialog.tsx","../../src/pages/Reports/ReportsList.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"path\", { d: \"M10 9H8\", key: \"b1mrlr\" }],\n  [\"path\", { d: \"M16 13H8\", key: \"t4e002\" }],\n  [\"path\", { d: \"M16 17H8\", key: \"z1uh3a\" }]\n];\nconst FileText = createLucideIcon(\"file-text\", __iconNode);\n\nexport { __iconNode, FileText as default };\n//# sourceMappingURL=file-text.js.map\n","// src/services/reportService.ts - Service pour la gestion des rapports\r\nimport { apiService, type ApiResponse, type PaginatedResponse } from './apiService';\r\n\r\nexport type ReportType = \r\n  | 'attendance_summary'\r\n  | 'event_detail'\r\n  | 'user_attendance'\r\n  | 'department_analytics'\r\n  | 'monthly_summary'\r\n  | 'custom';\r\n\r\nexport type ReportFormat = 'pdf' | 'excel' | 'csv' | 'json';\r\n\r\nexport type ReportStatus = 'pending' | 'processing' | 'completed' | 'failed';\r\n\r\nexport interface Report {\r\n  id: string;\r\n  type: ReportType;\r\n  format: ReportFormat;\r\n  status: ReportStatus;\r\n  title: string;\r\n  description?: string;\r\n  filters: Record<string, any>;\r\n  options: Record<string, any>;\r\n  generatedBy: string;\r\n  generatedAt: string;\r\n  completedAt?: string;\r\n  downloadUrl?: string;\r\n  fileSize?: number;\r\n  error?: string;\r\n}\r\n\r\nexport interface GenerateReportRequest {\r\n  type: ReportType;\r\n  format?: ReportFormat;\r\n  filters?: {\r\n    eventId?: string;\r\n    userId?: string;\r\n    organizerId?: string;\r\n    department?: string;\r\n    startDate?: string;\r\n    endDate?: string;\r\n    month?: number;\r\n    year?: number;\r\n  };\r\n  options?: {\r\n    includeCharts?: boolean;\r\n    includeInsights?: boolean;\r\n    language?: 'fr' | 'en';\r\n    template?: string;\r\n  };\r\n}\r\n\r\nexport interface ReportSearchFilters {\r\n  page?: number;\r\n  limit?: number;\r\n  sortBy?: 'createdAt' | 'type' | 'status';\r\n  sortOrder?: 'asc' | 'desc';\r\n  type?: ReportType;\r\n  status?: ReportStatus;\r\n  generatedBy?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  format?: ReportFormat;\r\n}\r\n\r\nexport interface ReportStats {\r\n  total: number;\r\n  completed: number;\r\n  failed: number;\r\n  pending: number;\r\n  byType: Record<ReportType, number>;\r\n  byFormat: Record<ReportFormat, number>;\r\n  averageGenerationTime: number;\r\n  totalFileSize: number;\r\n}\r\n\r\nexport interface ScheduledReport {\r\n  id: string;\r\n  name: string;\r\n  type: ReportType;\r\n  schedule: {\r\n    frequency: 'daily' | 'weekly' | 'monthly';\r\n    dayOfWeek?: number;\r\n    dayOfMonth?: number;\r\n    time: string;\r\n  };\r\n  recipients: string[];\r\n  filters: Record<string, any>;\r\n  options: Record<string, any>;\r\n  isActive: boolean;\r\n  lastRun?: string;\r\n  nextRun: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface ReportTemplate {\r\n  id: string;\r\n  name: string;\r\n  type: ReportType;\r\n  description: string;\r\n  template: string;\r\n  variables: Array<{\r\n    name: string;\r\n    type: string;\r\n    required: boolean;\r\n    description: string;\r\n  }>;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nclass ReportService {\r\n  // Generate report\r\n  async generateReport(data: GenerateReportRequest): Promise<ApiResponse<Report>> {\r\n    return apiService.post<Report>('/reports/generate', data);\r\n  }\r\n\r\n  // Preview report\r\n  async previewReport(data: GenerateReportRequest): Promise<ApiResponse<any>> {\r\n    return apiService.post<any>('/reports/preview', data);\r\n  }\r\n\r\n  // Get reports list\r\n  async getReports(filters: ReportSearchFilters = {}): Promise<ApiResponse<PaginatedResponse<Report>>> {\r\n    return apiService.get<PaginatedResponse<Report>>('/reports', filters);\r\n  }\r\n\r\n  // Get report by ID\r\n  async getReportById(id: string): Promise<ApiResponse<Report>> {\r\n    return apiService.get<Report>(`/reports/${id}`);\r\n  }\r\n\r\n  // Download report\r\n  async downloadReport(id: string): Promise<ApiResponse<Blob>> {\r\n    return apiService.get<Blob>(`/reports/${id}/download`);\r\n  }\r\n\r\n  // Delete report\r\n  async deleteReport(id: string): Promise<ApiResponse<void>> {\r\n    return apiService.delete<void>(`/reports/${id}`);\r\n  }\r\n\r\n  // Get report statistics\r\n  async getReportStats(filters: {\r\n    generatedBy?: string;\r\n    startDate?: string;\r\n    endDate?: string;\r\n  } = {}): Promise<ApiResponse<ReportStats>> {\r\n    return apiService.get<ReportStats>('/reports/stats', filters);\r\n  }\r\n\r\n  // Schedule report\r\n  async scheduleReport(data: {\r\n    name: string;\r\n    type: ReportType;\r\n    schedule: {\r\n      frequency: 'daily' | 'weekly' | 'monthly';\r\n      dayOfWeek?: number;\r\n      dayOfMonth?: number;\r\n      time: string;\r\n    };\r\n    recipients: string[];\r\n    filters?: Record<string, any>;\r\n    options?: Record<string, any>;\r\n    isActive?: boolean;\r\n  }): Promise<ApiResponse<ScheduledReport>> {\r\n    return apiService.post<ScheduledReport>('/reports/schedule', data);\r\n  }\r\n\r\n  // Get report templates\r\n  async getReportTemplates(): Promise<ApiResponse<ReportTemplate[]>> {\r\n    return apiService.get<ReportTemplate[]>('/reports/templates');\r\n  }\r\n\r\n  // Get report template by ID\r\n  async getReportTemplate(id: string): Promise<ApiResponse<ReportTemplate>> {\r\n    return apiService.get<ReportTemplate>(`/reports/templates/${id}`);\r\n  }\r\n\r\n  // Quick report generation methods\r\n  async generateAttendanceReport(eventId: string, format: ReportFormat = 'pdf'): Promise<ApiResponse<Report>> {\r\n    return apiService.post<Report>(`/reports/attendance/${eventId}`, {}, { format });\r\n  }\r\n\r\n  async generateUserReport(userId: string, options: {\r\n    format?: ReportFormat;\r\n    startDate?: string;\r\n    endDate?: string;\r\n  } = {}): Promise<ApiResponse<Report>> {\r\n    return apiService.post<Report>(`/reports/user/${userId}`, {}, options);\r\n  }\r\n\r\n  async generateMonthlySummary(options: {\r\n    month: number;\r\n    year: number;\r\n    format?: ReportFormat;\r\n  }): Promise<ApiResponse<Report>> {\r\n    return apiService.post<Report>('/reports/monthly-summary', {}, options);\r\n  }\r\n\r\n  // Maintenance\r\n  async cleanupExpiredReports(): Promise<ApiResponse<void>> {\r\n    return apiService.post<void>('/reports/cleanup-expired');\r\n  }\r\n}\r\n\r\nexport const reportService = new ReportService();","import * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\r\n  showCloseButton?: boolean\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\r\n          >\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  )\r\n}\r\n\r\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\r\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n","// src/pages/Reports/ReportsList.tsx - Liste des rapports avec génération\r\nimport { useState, useEffect } from 'react';\r\nimport { useAuth, usePermissions } from '@/hooks/use-auth';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\r\nimport { Label } from '@/components/ui/label';\r\nimport { \r\n  BarChart3, \r\n  Search, \r\n  Plus, \r\n  Download,\r\n  FileText,\r\n  Calendar,\r\n  Users,\r\n  TrendingUp,\r\n  Clock,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertCircle,\r\n  Loader2,\r\n  Filter\r\n} from 'lucide-react';\r\nimport { reportService } from '@/services';\r\nimport type { Report, ReportType, ReportFormat, ReportStatus } from '@/services/reportService';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface ReportFilters {\r\n  search: string;\r\n  type: ReportType | 'all';\r\n  status: ReportStatus | 'all';\r\n  format: ReportFormat | 'all';\r\n}\r\n\r\ninterface GenerateReportForm {\r\n  type: ReportType;\r\n  format: ReportFormat;\r\n  filters: {\r\n    startDate: string;\r\n    endDate: string;\r\n    eventId: string;\r\n    userId: string;\r\n    department: string;\r\n  };\r\n  options: {\r\n    includeCharts: boolean;\r\n    includeInsights: boolean;\r\n    language: 'fr' | 'en';\r\n  };\r\n}\r\n\r\nconst ReportsList = () => {\r\n  const { user } = useAuth();\r\n  const { canViewReports, canManageReports } = usePermissions();\r\n  \r\n  const [reports, setReports] = useState<Report[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [generating, setGenerating] = useState(false);\r\n  const [showGenerateDialog, setShowGenerateDialog] = useState(false);\r\n  const [filters, setFilters] = useState<ReportFilters>({\r\n    search: '',\r\n    type: 'all',\r\n    status: 'all',\r\n    format: 'all'\r\n  });\r\n  const [generateForm, setGenerateForm] = useState<GenerateReportForm>({\r\n    type: 'attendance_summary',\r\n    format: 'pdf',\r\n    filters: {\r\n      startDate: '',\r\n      endDate: '',\r\n      eventId: '',\r\n      userId: '',\r\n      department: ''\r\n    },\r\n    options: {\r\n      includeCharts: true,\r\n      includeInsights: true,\r\n      language: 'fr'\r\n    }\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    limit: 20,\r\n    total: 0,\r\n    totalPages: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadReports();\r\n  }, [filters, pagination.page]);\r\n\r\n  const loadReports = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const params: any = {\r\n        page: pagination.page,\r\n        limit: pagination.limit,\r\n        sortBy: 'createdAt',\r\n        sortOrder: 'desc'\r\n      };\r\n\r\n      if (filters.search) params.search = filters.search;\r\n      if (filters.type !== 'all') params.type = filters.type;\r\n      if (filters.status !== 'all') params.status = filters.status;\r\n      if (filters.format !== 'all') params.format = filters.format;\r\n\r\n      const response = await reportService.getReports(params);\r\n      \r\n      if (response.success && response.data) {\r\n        setReports(response.data.data);\r\n        setPagination(prev => ({\r\n          ...prev,\r\n          total: response.data.pagination.total,\r\n          totalPages: response.data.pagination.totalPages\r\n        }));\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading reports:', error);\r\n      toast.error('Erreur lors du chargement des rapports');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (key: keyof ReportFilters, value: any) => {\r\n    setFilters(prev => ({ ...prev, [key]: value }));\r\n    setPagination(prev => ({ ...prev, page: 1 }));\r\n  };\r\n\r\n  const getStatusBadge = (status: ReportStatus) => {\r\n    const statusConfig = {\r\n      pending: { variant: 'secondary' as const, label: 'En attente', icon: Clock },\r\n      processing: { variant: 'default' as const, label: 'En cours', icon: Loader2 },\r\n      completed: { variant: 'default' as const, label: 'Terminé', icon: CheckCircle },\r\n      failed: { variant: 'destructive' as const, label: 'Échec', icon: XCircle }\r\n    };\r\n\r\n    const config = statusConfig[status] || { variant: 'outline' as const, label: status, icon: AlertCircle };\r\n    const IconComponent = config.icon;\r\n    \r\n    return (\r\n      <Badge variant={config.variant} className=\"flex items-center gap-1\">\r\n        <IconComponent className={`w-3 h-3 ${status === 'processing' ? 'animate-spin' : ''}`} />\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getTypeLabel = (type: ReportType) => {\r\n    const typeLabels = {\r\n      attendance_summary: 'Résumé des présences',\r\n      event_detail: 'Détail d\\'événement',\r\n      user_attendance: 'Présences utilisateur',\r\n      department_analytics: 'Analytics département',\r\n      monthly_summary: 'Résumé mensuel',\r\n      custom: 'Personnalisé'\r\n    };\r\n    return typeLabels[type] || type;\r\n  };\r\n\r\n  const getFormatBadge = (format: ReportFormat) => {\r\n    const formatConfig = {\r\n      pdf: { variant: 'destructive' as const, label: 'PDF' },\r\n      excel: { variant: 'default' as const, label: 'Excel' },\r\n      csv: { variant: 'secondary' as const, label: 'CSV' },\r\n      json: { variant: 'outline' as const, label: 'JSON' }\r\n    };\r\n\r\n    const config = formatConfig[format] || { variant: 'outline' as const, label: format };\r\n    return <Badge variant={config.variant}>{config.label}</Badge>;\r\n  };\r\n\r\n  const handleGenerateReport = async () => {\r\n    try {\r\n      setGenerating(true);\r\n      \r\n      const response = await reportService.generateReport({\r\n        type: generateForm.type,\r\n        format: generateForm.format,\r\n        filters: generateForm.filters,\r\n        options: generateForm.options\r\n      });\r\n\r\n      if (response.success) {\r\n        toast.success('Génération du rapport lancée');\r\n        setShowGenerateDialog(false);\r\n        loadReports();\r\n      }\r\n    } catch (error: any) {\r\n      toast.error('Erreur lors de la génération du rapport');\r\n    } finally {\r\n      setGenerating(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadReport = async (reportId: string) => {\r\n    try {\r\n      const response = await reportService.downloadReport(reportId);\r\n      if (response.success) {\r\n        toast.success('Téléchargement en cours');\r\n        // Handle file download\r\n      }\r\n    } catch (error: any) {\r\n      toast.error('Erreur lors du téléchargement');\r\n    }\r\n  };\r\n\r\n  const handleDeleteReport = async (reportId: string) => {\r\n    try {\r\n      await reportService.deleteReport(reportId);\r\n      toast.success('Rapport supprimé');\r\n      loadReports();\r\n    } catch (error: any) {\r\n      toast.error('Erreur lors de la suppression');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('fr-FR', {\r\n      day: 'numeric',\r\n      month: 'short',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 B';\r\n    const k = 1024;\r\n    const sizes = ['B', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  if (loading && reports.length === 0) {\r\n    return (\r\n      <div className=\"container-fluid py-6\">\r\n        <div className=\"animate-pulse space-y-6\">\r\n          <div className=\"h-8 bg-muted rounded w-1/3\"></div>\r\n          <div className=\"grid gap-4\">\r\n            {[...Array(5)].map((_, i) => (\r\n              <div key={i} className=\"h-24 bg-muted rounded\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-foreground\">Rapports</h1>\r\n          <p className=\"text-muted-foreground mt-1\">\r\n            Générez et consultez vos rapports d'analyse\r\n          </p>\r\n        </div>\r\n        {canViewReports && (\r\n          <Dialog open={showGenerateDialog} onOpenChange={setShowGenerateDialog}>\r\n            <DialogTrigger asChild>\r\n              <Button>\r\n                <Plus className=\"w-4 h-4 mr-2\" />\r\n                Générer un rapport\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent className=\"max-w-2xl\">\r\n              <DialogHeader>\r\n                <DialogTitle>Générer un nouveau rapport</DialogTitle>\r\n              </DialogHeader>\r\n              <div className=\"space-y-6\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"type\">Type de rapport</Label>\r\n                    <Select \r\n                      value={generateForm.type} \r\n                      onValueChange={(value) => setGenerateForm(prev => ({ ...prev, type: value as ReportType }))}\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"attendance_summary\">Résumé des présences</SelectItem>\r\n                        <SelectItem value=\"event_detail\">Détail d'événement</SelectItem>\r\n                        <SelectItem value=\"user_attendance\">Présences utilisateur</SelectItem>\r\n                        <SelectItem value=\"department_analytics\">Analytics département</SelectItem>\r\n                        <SelectItem value=\"monthly_summary\">Résumé mensuel</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div>\r\n                    <Label htmlFor=\"format\">Format</Label>\r\n                    <Select \r\n                      value={generateForm.format} \r\n                      onValueChange={(value) => setGenerateForm(prev => ({ ...prev, format: value as ReportFormat }))}\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"pdf\">PDF</SelectItem>\r\n                        <SelectItem value=\"excel\">Excel</SelectItem>\r\n                        <SelectItem value=\"csv\">CSV</SelectItem>\r\n                        <SelectItem value=\"json\">JSON</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"startDate\">Date de début</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      value={generateForm.filters.startDate}\r\n                      onChange={(e) => setGenerateForm(prev => ({\r\n                        ...prev,\r\n                        filters: { ...prev.filters, startDate: e.target.value }\r\n                      }))}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Label htmlFor=\"endDate\">Date de fin</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      value={generateForm.filters.endDate}\r\n                      onChange={(e) => setGenerateForm(prev => ({\r\n                        ...prev,\r\n                        filters: { ...prev.filters, endDate: e.target.value }\r\n                      }))}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <label className=\"flex items-center space-x-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={generateForm.options.includeCharts}\r\n                      onChange={(e) => setGenerateForm(prev => ({\r\n                        ...prev,\r\n                        options: { ...prev.options, includeCharts: e.target.checked }\r\n                      }))}\r\n                    />\r\n                    <span>Inclure les graphiques</span>\r\n                  </label>\r\n                  <label className=\"flex items-center space-x-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={generateForm.options.includeInsights}\r\n                      onChange={(e) => setGenerateForm(prev => ({\r\n                        ...prev,\r\n                        options: { ...prev.options, includeInsights: e.target.checked }\r\n                      }))}\r\n                    />\r\n                    <span>Inclure les insights</span>\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"flex justify-end space-x-3\">\r\n                  <Button variant=\"outline\" onClick={() => setShowGenerateDialog(false)}>\r\n                    Annuler\r\n                  </Button>\r\n                  <Button onClick={handleGenerateReport} disabled={generating}>\r\n                    {generating ? (\r\n                      <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                    ) : (\r\n                      <BarChart3 className=\"w-4 h-4 mr-2\" />\r\n                    )}\r\n                    Générer\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n                <Input\r\n                  placeholder=\"Rechercher des rapports...\"\r\n                  value={filters.search}\r\n                  onChange={(e) => handleFilterChange('search', e.target.value)}\r\n                  className=\"pl-10\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <Select value={filters.type} onValueChange={(value) => handleFilterChange('type', value)}>\r\n              <SelectTrigger className=\"w-[200px]\">\r\n                <SelectValue placeholder=\"Type\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">Tous les types</SelectItem>\r\n                <SelectItem value=\"attendance_summary\">Résumé présences</SelectItem>\r\n                <SelectItem value=\"event_detail\">Détail événement</SelectItem>\r\n                <SelectItem value=\"user_attendance\">Présences utilisateur</SelectItem>\r\n                <SelectItem value=\"department_analytics\">Analytics département</SelectItem>\r\n                <SelectItem value=\"monthly_summary\">Résumé mensuel</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n            <Select value={filters.status} onValueChange={(value) => handleFilterChange('status', value)}>\r\n              <SelectTrigger className=\"w-[150px]\">\r\n                <SelectValue placeholder=\"Statut\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">Tous les statuts</SelectItem>\r\n                <SelectItem value=\"pending\">En attente</SelectItem>\r\n                <SelectItem value=\"processing\">En cours</SelectItem>\r\n                <SelectItem value=\"completed\">Terminé</SelectItem>\r\n                <SelectItem value=\"failed\">Échec</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Reports List */}\r\n      <div className=\"space-y-4\">\r\n        {reports.length > 0 ? (\r\n          reports.map((report) => (\r\n            <Card key={report.id} className=\"card-interactive\">\r\n              <CardContent className=\"p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <FileText className=\"w-8 h-8 text-blue-600\" />\r\n                    </div>\r\n                    \r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center space-x-3 mb-2\">\r\n                        <h3 className=\"text-lg font-semibold text-foreground\">\r\n                          {report.title || getTypeLabel(report.type)}\r\n                        </h3>\r\n                        {getStatusBadge(report.status)}\r\n                        {getFormatBadge(report.format)}\r\n                      </div>\r\n                      \r\n                      <div className=\"flex flex-wrap items-center gap-4 text-sm text-muted-foreground\">\r\n                        <div className=\"flex items-center\">\r\n                          <Calendar className=\"w-4 h-4 mr-1\" />\r\n                          Généré le {formatDate(report.generatedAt)}\r\n                        </div>\r\n                        <div className=\"flex items-center\">\r\n                          <Users className=\"w-4 h-4 mr-1\" />\r\n                          Par {report.generatedBy}\r\n                        </div>\r\n                        {report.fileSize && (\r\n                          <div className=\"flex items-center\">\r\n                            <Download className=\"w-4 h-4 mr-1\" />\r\n                            {formatFileSize(report.fileSize)}\r\n                          </div>\r\n                        )}\r\n                        {report.completedAt && (\r\n                          <div className=\"flex items-center\">\r\n                            <Clock className=\"w-4 h-4 mr-1\" />\r\n                            Terminé le {formatDate(report.completedAt)}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      \r\n                      {report.description && (\r\n                        <p className=\"text-muted-foreground text-sm mt-2\">\r\n                          {report.description}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {report.status === 'completed' && report.downloadUrl && (\r\n                      <Button \r\n                        variant=\"outline\" \r\n                        size=\"sm\"\r\n                        onClick={() => handleDownloadReport(report.id)}\r\n                      >\r\n                        <Download className=\"w-4 h-4 mr-2\" />\r\n                        Télécharger\r\n                      </Button>\r\n                    )}\r\n                    \r\n                    {canManageReports && (\r\n                      <Button \r\n                        variant=\"outline\" \r\n                        size=\"sm\"\r\n                        onClick={() => handleDeleteReport(report.id)}\r\n                      >\r\n                        Supprimer\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                {report.error && (\r\n                  <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-md\">\r\n                    <p className=\"text-sm text-red-600\">\r\n                      <AlertCircle className=\"w-4 h-4 inline mr-2\" />\r\n                      Erreur: {report.error}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          <Card>\r\n            <CardContent className=\"p-12 text-center\">\r\n              <BarChart3 className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n              <h3 className=\"text-lg font-medium text-foreground mb-2\">\r\n                Aucun rapport trouvé\r\n              </h3>\r\n              <p className=\"text-muted-foreground mb-4\">\r\n                {Object.values(filters).some(f => f && f !== 'all')\r\n                  ? 'Aucun rapport ne correspond à vos critères de recherche.'\r\n                  : 'Vous n\\'avez pas encore généré de rapport.'\r\n                }\r\n              </p>\r\n              {canViewReports && (\r\n                <Button onClick={() => setShowGenerateDialog(true)}>\r\n                  <Plus className=\"w-4 h-4 mr-2\" />\r\n                  Générer votre premier rapport\r\n                </Button>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {pagination.totalPages > 1 && (\r\n        <div className=\"flex items-center justify-between\">\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Affichage de {((pagination.page - 1) * pagination.limit) + 1} à{' '}\r\n            {Math.min(pagination.page * pagination.limit, pagination.total)} sur {pagination.total} rapports\r\n          </p>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setPagination(prev => ({ ...prev, page: prev.page - 1 }))}\r\n              disabled={pagination.page === 1}\r\n            >\r\n              Précédent\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setPagination(prev => ({ ...prev, page: prev.page + 1 }))}\r\n              disabled={pagination.page === pagination.totalPages}\r\n            >\r\n              Suivant\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportsList;"],"names":["__iconNode","FileText","createLucideIcon","ReportService","data","apiService","filters","id","eventId","format","userId","options","reportService","Dialog","props","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","className","jsx","DialogPrimitive.Overlay","cn","DialogContent","children","showCloseButton","jsxs","DialogPrimitive.Content","DialogPrimitive.Close","XIcon","DialogHeader","DialogTitle","DialogPrimitive.Title","ReportsList","user","useAuth","canViewReports","canManageReports","usePermissions","reports","setReports","useState","loading","setLoading","generating","setGenerating","showGenerateDialog","setShowGenerateDialog","setFilters","generateForm","setGenerateForm","pagination","setPagination","useEffect","loadReports","params","response","prev","error","toast","handleFilterChange","key","value","getStatusBadge","status","config","Clock","Loader2","CheckCircle","XCircle","AlertCircle","IconComponent","Badge","getTypeLabel","type","getFormatBadge","handleGenerateReport","handleDownloadReport","reportId","handleDeleteReport","formatDate","dateString","formatFileSize","bytes","k","sizes","i","_","Button","Plus","Label","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Input","e","BarChart3","Card","CardContent","Search","report","Calendar","Users","Download","f"],"mappings":"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","x_google_ignoreList":[0]}