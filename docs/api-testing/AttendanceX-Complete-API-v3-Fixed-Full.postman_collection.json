{
  "info": {
    "name": "AttendanceX Complete API v3.0 - Fixed & Complete",
    "description": "Collection compl√®te avec tous les endpoints et corrections de validation",
    "version": "3.0.1",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-refresh token if expired",
          "const token = pm.environment.get('accessToken');",
          "if (token) {",
          "    try {",
          "        const payload = JSON.parse(atob(token.split('.')[1]));",
          "        const now = Math.floor(Date.now() / 1000);",
          "        if (payload.exp < now + 60) {",
          "            console.log('Token expires soon, consider refreshing...');",
          "        }",
          "    } catch (e) {",
          "        console.log('Invalid token format');",
          "    }",
          "}",
          "",
          "// Add tenant context header if available",
          "const tenantId = pm.environment.get('tenantId');",
          "if (tenantId) {",
          "    pm.request.headers.add({",
          "        key: 'X-Tenant-ID',",
          "        value: tenantId",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "{{baseUrl}}",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "description": "Routes d'authentification et gestion des sessions",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPassword}}\",\n  \"confirmPassword\": \"{{testPassword}}\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"acceptTerms\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.accessToken) {",
                  "        pm.environment.set('accessToken', jsonData.accessToken);",
                  "    }",
                  "    if (jsonData.refreshToken) {",
                  "        pm.environment.set('refreshToken', jsonData.refreshToken);",
                  "    }",
                  "    if (jsonData.user && jsonData.user.id) {",
                  "        pm.environment.set('userId', jsonData.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPassword}}\",\n  \"rememberMe\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.accessToken) {",
                  "        pm.environment.set('accessToken', jsonData.accessToken);",
                  "    }",
                  "    if (jsonData.refreshToken) {",
                  "        pm.environment.set('refreshToken', jsonData.refreshToken);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh-token"]
            }
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "forgot-password"]
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{resetToken}}\",\n  \"newPassword\": \"NewPassword123!\",\n  \"confirmPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "reset-password"]
            }
          }
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{verificationToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-email",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-email"]
            }
          }
        },
        {
          "name": "Send Email Verification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/send-email-verification",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "send-email-verification"]
            }
          }
        },
        {
          "name": "Get Session",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/auth/session",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "session"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"{{testPassword}}\",\n  \"newPassword\": \"NewPassword123!\",\n  \"confirmPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            }
          }
        },
        {
          "name": "Setup 2FA",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/auth/setup-2fa",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "setup-2fa"]
            }
          }
        },
        {
          "name": "Verify 2FA",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-2fa",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-2fa"]
            }
          }
        },
        {
          "name": "Disable 2FA",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"{{testPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/disable-2fa",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "disable-2fa"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          }
        },
        {
          "name": "Logout All Sessions",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/auth/logout-all",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout-all"]
            }
          }
        },
        {
          "name": "Get Security Metrics",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/auth/security-metrics",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "security-metrics"]
            }
          }
        }
      ]
    },
  
  {
      "name": "üè¢ Tenant Management",
      "description": "Gestion des tenants/organisations multi-tenant",
      "item": [
        {
          "name": "Register Tenant",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Company\",\n  \"slug\": \"test-company\",\n  \"industry\": \"technology\",\n  \"size\": \"small\",\n  \"planId\": \"basic\",\n  \"settings\": {\n    \"timezone\": \"Europe/Paris\",\n    \"locale\": \"fr\",\n    \"currency\": \"EUR\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tenants/register",
              "host": ["{{baseUrl}}"],
              "path": ["tenants", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Tenant created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.tenant) {",
                  "        pm.environment.set('tenantId', jsonData.data.tenant.id);",
                  "    }",
                  "    if (jsonData.data && jsonData.data.tokens) {",
                  "        pm.environment.set('accessToken', jsonData.data.tokens.accessToken);",
                  "        pm.environment.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Switch Tenant Context",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tenantId\": \"{{tenantId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tenants/switch-context",
              "host": ["{{baseUrl}}"],
              "path": ["tenants", "switch-context"]
            }
          }
        },
        {
          "name": "Get User Tenants",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/tenants",
              "host": ["{{baseUrl}}"],
              "path": ["tenants"]
            }
          }
        },
        {
          "name": "Validate Tenant Access",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/tenants/{{tenantId}}/validate",
              "host": ["{{baseUrl}}"],
              "path": ["tenants", "{{tenantId}}", "validate"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• User Management",
      "description": "Gestion des utilisateurs",
      "item": [
        {
          "name": "Get Users",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/users?limit=50&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated\",\n  \"lastName\": \"User\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üìß User Invitations",
      "description": "Syst√®me d'invitations utilisateurs",
      "item": [
        {
          "name": "Send Single Invitation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invited@example.com\",\n  \"firstName\": \"Invited\",\n  \"lastName\": \"User\",\n  \"role\": \"user\",\n  \"department\": \"IT\",\n  \"message\": \"Welcome to our team!\",\n  \"permissions\": [\"view_events\", \"mark_attendance\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user-invitations/invite",
              "host": ["{{baseUrl}}"],
              "path": ["user-invitations", "invite"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invitation sent successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.id) {",
                  "        pm.environment.set('invitationId', jsonData.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Send Bulk Invitations",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"invitations\": [\n    {\n      \"email\": \"user1@example.com\",\n      \"firstName\": \"User\",\n      \"lastName\": \"One\",\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"user2@example.com\",\n      \"firstName\": \"User\",\n      \"lastName\": \"Two\",\n      \"role\": \"manager\"\n    }\n  ],\n  \"customMessage\": \"Welcome to our organization!\",\n  \"sendWelcomeEmail\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user-invitations/bulk-invite",
              "host": ["{{baseUrl}}"],
              "path": ["user-invitations", "bulk-invite"]
            }
          }
        },
        {
          "name": "Import CSV Invitations",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "csvFile",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "defaultRole",
                  "value": "user",
                  "type": "text"
                },
                {
                  "key": "customMessage",
                  "value": "Welcome from CSV import!",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/user-invitations/csv-import",
              "host": ["{{baseUrl}}"],
              "path": ["user-invitations", "csv-import"]
            }
          }
        },
        {
          "name": "Get Invitations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/user-invitations?status=pending&limit=50&offset=0&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["user-invitations"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "offset",
                  "value": "0"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            }
          }
        },
        {
          "name": "Get Invitation Stats",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/user-invitations/stats",
              "host": ["{{baseUrl}}"],
              "path": ["user-invitations", "stats"]
            }
          }
        },
        {
          "name": "Resend Invitation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/user-invitations/{{invitationId}}/resend",
              "host": ["{{baseUrl}}"],
              "path": ["user-invitations", "{{invitationId}}", "resend"]
            }
          }
        },
        {
          "name": "Cancel Invitation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/user-invitations/{{invitationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["user-invitations", "{{invitationId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üåê Public Invitation Routes",
      "description": "Routes publiques pour accepter/d√©cliner les invitations",
      "item": [
        {
          "name": "Validate Invitation Token",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/public/invitations/validate/{{invitationToken}}",
              "host": ["{{baseUrl}}"],
              "path": ["public", "invitations", "validate", "{{invitationToken}}"]
            }
          }
        },
        {
          "name": "Accept Invitation",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{invitationToken}}\",\n  \"password\": \"SecurePassword123!\",\n  \"acceptTerms\": \"true\",\n  \"marketingConsent\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/public/invitations/accept",
              "host": ["{{baseUrl}}"],
              "path": ["public", "invitations", "accept"]
            }
          }
        },
        {
          "name": "Decline Invitation",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{invitationToken}}\",\n  \"reason\": \"Not interested at this time\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/public/invitations/decline",
              "host": ["{{baseUrl}}"],
              "path": ["public", "invitations", "decline"]
            }
          }
        }
      ]
    },

    {
      "name": "üìÖ Events Management",
      "description": "Gestion des √©v√©nements et activit√©s",
      "item": [
        {
          "name": "Create Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Team Meeting\",\n  \"description\": \"Weekly team sync meeting\",\n  \"startTime\": \"2024-02-01T09:00:00Z\",\n  \"endTime\": \"2024-02-01T10:00:00Z\",\n  \"location\": \"Conference Room A\",\n  \"type\": \"meeting\",\n  \"isRecurring\": false,\n  \"maxAttendees\": 20,\n  \"requiresApproval\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events",
              "host": ["{{baseUrl}}"],
              "path": ["events"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Event created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.id) {",
                  "        pm.environment.set('eventId', jsonData.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Events",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/events?limit=50&offset=0&status=active",
              "host": ["{{baseUrl}}"],
              "path": ["events"],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "offset",
                  "value": "0"
                },
                {
                  "key": "status",
                  "value": "active"
                }
              ]
            }
          }
        },
        {
          "name": "Get Event by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}"]
            }
          }
        },
        {
          "name": "Update Event",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Team Meeting\",\n  \"description\": \"Updated weekly team sync meeting\",\n  \"location\": \"Conference Room B\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}"]
            }
          }
        },
        {
          "name": "Delete Event",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "‚úÖ Attendance Management",
      "description": "Gestion des pr√©sences et pointages",
      "item": [
        {
          "name": "Check In",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eventId\": \"{{eventId}}\",\n  \"method\": \"manual\",\n  \"location\": {\n    \"latitude\": 48.8566,\n    \"longitude\": 2.3522,\n    \"accuracy\": 10\n  },\n  \"notes\": \"Arrived on time\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/attendances/check-in",
              "host": ["{{baseUrl}}"],
              "path": ["attendances", "check-in"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Check-in successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.id) {",
                  "        pm.environment.set('attendanceId', jsonData.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Attendances",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/attendances?page=1&limit=20&sortBy=checkInTime&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["attendances"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "sortBy",
                  "value": "checkInTime"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            }
          }
        },
        {
          "name": "Get My Attendances",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/attendances/my-attendances?limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["attendances", "my-attendances"],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üìã Appointments",
      "description": "Gestion des rendez-vous et r√©servations",
      "item": [
        {
          "name": "Create Appointment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Client Meeting\",\n  \"description\": \"Meeting with important client\",\n  \"startTime\": \"2024-02-01T14:00:00Z\",\n  \"endTime\": \"2024-02-01T15:00:00Z\",\n  \"attendees\": [\"{{userId}}\"],\n  \"location\": \"Office\",\n  \"type\": \"meeting\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/appointments",
              "host": ["{{baseUrl}}"],
              "path": ["appointments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.id) {",
                  "        pm.environment.set('appointmentId', jsonData.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Appointments",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/appointments",
              "host": ["{{baseUrl}}"],
              "path": ["appointments"]
            }
          }
        },
        {
          "name": "Get Appointment Analytics",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/appointment-analytics",
              "host": ["{{baseUrl}}"],
              "path": ["appointment-analytics"]
            }
          }
        }
      ]
    },
    {
      "name": "üîî Notifications",
      "description": "Syst√®me de notifications",
      "item": [
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/notifications?limit=50&unreadOnly=false",
              "host": ["{{baseUrl}}"],
              "path": ["notifications"],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "unreadOnly",
                  "value": "false"
                }
              ]
            }
          }
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/notifications/{{notificationId}}/read",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "{{notificationId}}", "read"]
            }
          }
        },
        {
          "name": "Mark All as Read",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/notifications/mark-all-read",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "mark-all-read"]
            }
          }
        }
      ]
    },
 
   {
      "name": "üí≥ Billing & Subscriptions",
      "description": "Gestion de la facturation et abonnements",
      "item": [
        {
          "name": "Get Billing Dashboard",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/billing/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["billing", "dashboard"]
            }
          }
        },
        {
          "name": "Get Usage Stats",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/billing/usage",
              "host": ["{{baseUrl}}"],
              "path": ["billing", "usage"]
            }
          }
        },
        {
          "name": "Get Invoices",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/billing/invoices",
              "host": ["{{baseUrl}}"],
              "path": ["billing", "invoices"]
            }
          }
        },
        {
          "name": "Update Payment Method",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentMethodId\": \"pm_test_123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/billing/payment-method",
              "host": ["{{baseUrl}}"],
              "path": ["billing", "payment-method"]
            }
          }
        },
        {
          "name": "Upgrade Subscription",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"planId\": \"pro\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/billing/upgrade",
              "host": ["{{baseUrl}}"],
              "path": ["billing", "upgrade"]
            }
          }
        },
        {
          "name": "Cancel Subscription",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"No longer needed\",\n  \"feedback\": \"Service was good but we're downsizing\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/billing/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["billing", "cancel"]
            }
          }
        }
      ]
    },
    {
      "name": "üìä Reports & Analytics",
      "description": "G√©n√©ration de rapports et analyses",
      "item": [
        {
          "name": "Generate Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"attendance_summary\",\n  \"format\": \"pdf\",\n  \"filters\": {\n    \"startDate\": \"2024-01-01T00:00:00Z\",\n    \"endDate\": \"2024-01-31T23:59:59Z\",\n    \"eventId\": \"{{eventId}}\"\n  },\n  \"options\": {\n    \"includeCharts\": true,\n    \"includeInsights\": true,\n    \"language\": \"fr\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reports/generate",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "generate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200 || pm.response.code === 202) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.reportId) {",
                  "        pm.environment.set('reportId', jsonData.data.reportId);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Report Status",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/reports/{{reportId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "{{reportId}}", "status"]
            }
          }
        },
        {
          "name": "Download Report",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/reports/{{reportId}}/download",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "{{reportId}}", "download"]
            }
          }
        },
        {
          "name": "Get ML Insights",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/ml/insights?type=attendance_patterns",
              "host": ["{{baseUrl}}"],
              "path": ["ml", "insights"],
              "query": [
                {
                  "key": "type",
                  "value": "attendance_patterns"
                }
              ]
            }
          }
        },
        {
          "name": "Get Predictive Analytics",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"attendance_prediction\",\n  \"parameters\": {\n    \"eventId\": \"{{eventId}}\",\n    \"timeframe\": \"next_week\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ml/predict",
              "host": ["{{baseUrl}}"],
              "path": ["ml", "predict"]
            }
          }
        }
      ]
    },
    {
      "name": "üîó Integrations",
      "description": "Int√©grations et connecteurs externes",
      "item": [
        {
          "name": "Get Available Integrations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": ["{{baseUrl}}"],
              "path": ["integrations"]
            }
          }
        },
        {
          "name": "Configure Integration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"slack\",\n  \"config\": {\n    \"webhookUrl\": \"https://hooks.slack.com/services/...\",\n    \"channel\": \"#attendance\",\n    \"notifications\": [\"check_in\", \"late_arrival\"]\n  },\n  \"enabled\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/integrations/configure",
              "host": ["{{baseUrl}}"],
              "path": ["integrations", "configure"]
            }
          }
        },
        {
          "name": "Test Integration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"integrationId\": \"{{integrationId}}\",\n  \"testType\": \"connection\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/integrations/test",
              "host": ["{{baseUrl}}"],
              "path": ["integrations", "test"]
            }
          }
        },
        {
          "name": "Generate QR Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eventId\": \"{{eventId}}\",\n  \"type\": \"check_in\",\n  \"expiresAt\": \"2024-02-01T18:00:00Z\",\n  \"options\": {\n    \"size\": 256,\n    \"format\": \"png\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/qrcode/generate",
              "host": ["{{baseUrl}}"],
              "path": ["qrcode", "generate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.qrCodeId) {",
                  "        pm.environment.set('qrCodeId', jsonData.data.qrCodeId);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Validate QR Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qrCodeId\": \"{{qrCodeId}}\",\n  \"location\": {\n    \"latitude\": 48.8566,\n    \"longitude\": 2.3522\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/qrcode/validate",
              "host": ["{{baseUrl}}"],
              "path": ["qrcode", "validate"]
            }
          }
        }
      ]
    },
    {

      "name": "üé® Branding & Customization",
      "description": "Personnalisation et branding des tenants",
      "item": [
        {
          "name": "Get Branding Settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/branding",
              "host": ["{{baseUrl}}"],
              "path": ["branding"]
            }
          }
        },
        {
          "name": "Update Branding",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"logo\": \"https://example.com/logo.png\",\n  \"primaryColor\": \"#007bff\",\n  \"secondaryColor\": \"#6c757d\",\n  \"fontFamily\": \"Inter\",\n  \"customCss\": \".custom-header { background: #007bff; }\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/branding",
              "host": ["{{baseUrl}}"],
              "path": ["branding"]
            }
          }
        },
        {
          "name": "Upload Logo",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "logo",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/branding/logo",
              "host": ["{{baseUrl}}"],
              "path": ["branding", "logo"]
            }
          }
        },
        {
          "name": "Get Custom Domain Settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/custom-domains",
              "host": ["{{baseUrl}}"],
              "path": ["custom-domains"]
            }
          }
        },
        {
          "name": "Configure Custom Domain",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"domain\": \"attendance.mycompany.com\",\n  \"sslEnabled\": true,\n  \"redirectWww\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/custom-domains/configure",
              "host": ["{{baseUrl}}"],
              "path": ["custom-domains", "configure"]
            }
          }
        },
        {
          "name": "Get SSL Certificate",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/certificates/{{domainId}}",
              "host": ["{{baseUrl}}"],
              "path": ["certificates", "{{domainId}}"]
            }
          }
        },
        {
          "name": "Get Feature Customization",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/feature-customization",
              "host": ["{{baseUrl}}"],
              "path": ["feature-customization"]
            }
          }
        },
        {
          "name": "Update Feature Settings",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"features\": {\n    \"qrCodeCheckin\": true,\n    \"geolocationTracking\": false,\n    \"autoNotifications\": true,\n    \"advancedReports\": true\n  },\n  \"limits\": {\n    \"maxEvents\": 100,\n    \"maxUsers\": 500,\n    \"storageLimit\": \"10GB\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/feature-customization",
              "host": ["{{baseUrl}}"],
              "path": ["feature-customization"]
            }
          }
        }
      ]
    },
    {
      "name": "üìß Email Campaigns",
      "description": "Gestion des campagnes email et communications",
      "item": [
        {
          "name": "Create Email Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Welcome Campaign\",\n  \"subject\": \"Welcome to our platform!\",\n  \"templateId\": \"welcome_template\",\n  \"recipients\": {\n    \"type\": \"segment\",\n    \"criteria\": {\n      \"role\": \"new_user\",\n      \"registeredWithin\": \"7_days\"\n    }\n  },\n  \"scheduledAt\": \"2024-02-01T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/email-campaigns",
              "host": ["{{baseUrl}}"],
              "path": ["email-campaigns"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.id) {",
                  "        pm.environment.set('campaignId', jsonData.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Email Campaigns",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/email-campaigns",
              "host": ["{{baseUrl}}"],
              "path": ["email-campaigns"]
            }
          }
        },
        {
          "name": "Get Campaign Templates",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/campaign-templates",
              "host": ["{{baseUrl}}"],
              "path": ["campaign-templates"]
            }
          }
        },
        {
          "name": "Create Campaign Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Event Reminder Template\",\n  \"subject\": \"Don't forget: {{eventTitle}} tomorrow!\",\n  \"htmlContent\": \"<h1>Event Reminder</h1><p>Hi {{firstName}}, don't forget about {{eventTitle}} scheduled for {{eventDate}}.</p>\",\n  \"textContent\": \"Hi {{firstName}}, don't forget about {{eventTitle}} scheduled for {{eventDate}}.\",\n  \"category\": \"event_reminders\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/campaign-templates",
              "host": ["{{baseUrl}}"],
              "path": ["campaign-templates"]
            }
          }
        },
        {
          "name": "Send Test Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"campaignId\": \"{{campaignId}}\",\n  \"testEmails\": [\"test@example.com\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/email-campaigns/{{campaignId}}/test",
              "host": ["{{baseUrl}}"],
              "path": ["email-campaigns", "{{campaignId}}", "test"]
            }
          }
        },
        {
          "name": "Launch Campaign",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/email-campaigns/{{campaignId}}/launch",
              "host": ["{{baseUrl}}"],
              "path": ["email-campaigns", "{{campaignId}}", "launch"]
            }
          }
        },
        {
          "name": "Get Campaign Analytics",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/email-campaigns/{{campaignId}}/analytics",
              "host": ["{{baseUrl}}"],
              "path": ["email-campaigns", "{{campaignId}}", "analytics"]
            }
          }
        },
        {
          "name": "Get Campaign Recipients",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/campaign-recipients/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["campaign-recipients", "{{campaignId}}"]
            }
          }
        },
        {
          "name": "Get Delivery Status",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/campaign-delivery/{{campaignId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["campaign-delivery", "{{campaignId}}", "status"]
            }
          }
        }
      ]
    },
    {
      "name": "üîß Webhook Management",
      "description": "Configuration et gestion des webhooks",
      "item": [
        {
          "name": "Stripe Webhook Handler",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Stripe-Signature",
                "value": "{{stripeSignature}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"evt_test_webhook\",\n  \"object\": \"event\",\n  \"type\": \"invoice.payment_succeeded\",\n  \"data\": {\n    \"object\": {\n      \"id\": \"in_test_invoice\",\n      \"customer\": \"cus_test_customer\",\n      \"amount_paid\": 2000,\n      \"currency\": \"eur\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/stripe-webhooks",
              "host": ["{{baseUrl}}"],
              "path": ["stripe-webhooks"]
            }
          }
        }
      ]
    },
    {
      "name": "üìã Meeting Resolutions",
      "description": "Suivi des r√©solutions et t√¢ches de r√©unions",
      "item": [
        {
          "name": "Create Resolution",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Implement new feature\",\n  \"description\": \"Develop and deploy the new user dashboard feature discussed in the meeting\",\n  \"assignedTo\": [\"{{userId}}\"],\n  \"dueDate\": \"2024-03-15T17:00:00Z\",\n  \"priority\": \"high\",\n  \"tags\": [\"development\", \"frontend\"],\n  \"estimatedHours\": 40\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/resolutions",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "resolutions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Resolution created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.id) {",
                  "        pm.environment.set('resolutionId', jsonData.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Event Resolutions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/resolutions?status=pending&limit=50&sortBy=dueDate&sortOrder=asc",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "resolutions"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "sortBy",
                  "value": "dueDate"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                }
              ]
            }
          }
        },
        {
          "name": "Get Resolution by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/resolutions/{{resolutionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["resolutions", "{{resolutionId}}"]
            }
          }
        },
        {
          "name": "Update Resolution",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated: Implement new feature\",\n  \"description\": \"Updated description with more details\",\n  \"priority\": \"urgent\",\n  \"progress\": 25,\n  \"actualHours\": 10\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/resolutions/{{resolutionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["resolutions", "{{resolutionId}}"]
            }
          }
        },
        {
          "name": "Update Resolution Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"in_progress\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/resolutions/{{resolutionId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["resolutions", "{{resolutionId}}", "status"]
            }
          }
        },
        {
          "name": "Update Resolution Progress",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"progress\": 75\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/resolutions/{{resolutionId}}/progress",
              "host": ["{{baseUrl}}"],
              "path": ["resolutions", "{{resolutionId}}", "progress"]
            }
          }
        },
        {
          "name": "Add Comment to Resolution",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Progress update: Frontend components are 75% complete. Backend API integration remaining.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/resolutions/{{resolutionId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["resolutions", "{{resolutionId}}", "comments"]
            }
          }
        },
        {
          "name": "Get My Tasks",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/resolutions/my-tasks?status=pending&overdue=false&limit=50&sortBy=dueDate&sortOrder=asc",
              "host": ["{{baseUrl}}"],
              "path": ["resolutions", "my-tasks"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "overdue",
                  "value": "false"
                },
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "sortBy",
                  "value": "dueDate"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                }
              ]
            }
          }
        },
        {
          "name": "Get Resolution Stats",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/resolutions/stats?eventId={{eventId}}&period=month",
              "host": ["{{baseUrl}}"],
              "path": ["resolutions", "stats"],
              "query": [
                {
                  "key": "eventId",
                  "value": "{{eventId}}"
                },
                {
                  "key": "period",
                  "value": "month"
                }
              ]
            }
          }
        },
        {
          "name": "Delete Resolution",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/resolutions/{{resolutionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["resolutions", "{{resolutionId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üåç Public Routes",
      "description": "Routes publiques et d'enregistrement",
      "item": [
        {
          "name": "Public Tenant Registration",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"organizationName\": \"Public Test Org\",\n  \"adminEmail\": \"admin@publictestorg.com\",\n  \"adminFirstName\": \"Admin\",\n  \"adminLastName\": \"User\",\n  \"industry\": \"technology\",\n  \"size\": \"small\",\n  \"planId\": \"basic\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/public/tenant-registration",
              "host": ["{{baseUrl}}"],
              "path": ["public", "tenant-registration"]
            }
          }
        }
      ]
    }
  ]
}