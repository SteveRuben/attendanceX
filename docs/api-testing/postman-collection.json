{
  "info": {
    "name": "Attendance-X API Complete Test Suite",
    "description": "Comprehensive Postman collection for testing all Attendance-X API endpoints",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-refresh token if needed",
          "if (pm.globals.get('accessToken') && pm.globals.get('tokenExpiry')) {",
          "    const now = new Date().getTime();",
          "    const expiry = parseInt(pm.globals.get('tokenExpiry'));",
          "    if (now >= expiry - 60000) { // Refresh 1 minute before expiry",
          "        pm.sendRequest({",
          "            url: pm.globals.get('baseUrl') + '/auth/refresh-token',",
          "            method: 'POST',",
          "            header: { 'Content-Type': 'application/json' },",
          "            body: { mode: 'raw', raw: JSON.stringify({ refreshToken: pm.globals.get('refreshToken') }) }",
          "        }, (err, res) => {",
          "            if (!err && res.code === 200) {",
          "                const data = res.json();",
          "                pm.globals.set('accessToken', data.accessToken);",
          "                pm.globals.set('refreshToken', data.refreshToken);",
          "                pm.globals.set('tokenExpiry', new Date().getTime() + (data.expiresIn * 1000));",
          "            }",
          "        });",
          "    }",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "{{baseUrl}}",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "{{accessToken}}",
      "type": "string"
    },
    {
      "key": "refreshToken", 
      "value": "{{refreshToken}}",
      "type": "string"
    },
    {
      "key": "tenantId",
      "value": "{{tenantId}}",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "{{userId}}",
      "type": "string"
    },
    {
      "key": "eventId",
      "value": "{{eventId}}",
      "type": "string"
    }
  ],
  "item": []
}