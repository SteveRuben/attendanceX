{
  "name": "ðŸ’³ Billing Management Workflow",
  "description": "Automated workflow: Login â†’ View Plans â†’ Change Plan â†’ Monitor Usage â†’ Handle Billing",
  "item": [
    {
      "name": "1. Login (Required)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Login successful', function () {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    const data = pm.response.json();",
              "    pm.globals.set('accessToken', data.accessToken);",
              "    pm.globals.set('refreshToken', data.refreshToken);",
              "    pm.globals.set('userId', data.user.id);",
              "    console.log('âœ… Login successful');",
              "    ",
              "    setTimeout(() => {",
              "        postman.setNextRequest('2. Get Billing Dashboard');",
              "    }, 500);",
              "} else {",
              "    postman.setNextRequest(null);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "auth": { "type": "noauth" },
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPassword}}\",\n  \"rememberMe\": false\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        }
      }
    },
    {
      "name": "2. Get Billing Dashboard",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Dashboard loaded', function () {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    const data = pm.response.json();",
              "    console.log('âœ… Billing dashboard loaded');",
              "    if (data.data && data.data.currentPlan) {",
              "        console.log('ðŸ“Š Current Plan: ' + data.data.currentPlan.name);",
              "        console.log('ðŸ“ˆ Usage: ' + JSON.stringify(data.data.usage));",
              "    }",
              "    ",
              "    setTimeout(() => {",
              "        postman.setNextRequest('3. Get Available Plans');",
              "    }, 500);",
              "} else {",
              "    postman.setNextRequest('3. Get Available Plans');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/billing/dashboard",
          "host": ["{{baseUrl}}"],
          "path": ["billing", "dashboard"]
        }
      }
    },
    {
      "name": "3. Get Available Plans",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Plans retrieved', function () {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    const data = pm.response.json();",
              "    console.log('âœ… Available plans retrieved');",
              "    if (data.data && data.data.length > 0) {",
              "        console.log('ðŸ“‹ Available Plans: ' + data.data.map(p => p.name).join(', '));",
              "    }",
              "    ",
              "    setTimeout(() => {",
              "        postman.setNextRequest('4. Get Usage Stats');",
              "    }, 500);",
              "} else {",
              "    postman.setNextRequest('4. Get Usage Stats');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/billing/plans",
          "host": ["{{baseUrl}}"],
          "path": ["billing", "plans"]
        }
      }
    },
    {
      "name": "4. Get Usage Stats",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Usage stats retrieved', function () {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    const data = pm.response.json();",
              "    console.log('âœ… Usage statistics retrieved');",
              "    if (data.data) {",
              "        console.log('ðŸ“Š Current Usage: ' + JSON.stringify(data.data.currentUsage || {}));",
              "        console.log('ðŸ“ˆ Usage Trends: Available');",
              "    }",
              "    ",
              "    setTimeout(() => {",
              "        postman.setNextRequest('5. Get Billing History');",
              "    }, 500);",
              "} else {",
              "    postman.setNextRequest('5. Get Billing History');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/billing/usage",
          "host": ["{{baseUrl}}"],
          "path": ["billing", "usage"]
        }
      }
    },
    {
      "name": "5. Get Billing History",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Billing history retrieved', function () {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    const data = pm.response.json();",
              "    console.log('âœ… Billing history retrieved');",
              "    if (data.data && data.data.invoices) {",
              "        console.log('ðŸ“„ Total Invoices: ' + data.data.invoices.length);",
              "    }",
              "    ",
              "    setTimeout(() => {",
              "        postman.setNextRequest('6. Billing Workflow Summary');",
              "    }, 500);",
              "} else {",
              "    postman.setNextRequest('6. Billing Workflow Summary');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/billing/history?page=1&limit=10",
          "host": ["{{baseUrl}}"],
          "path": ["billing", "history"],
          "query": [
            { "key": "page", "value": "1" },
            { "key": "limit", "value": "10" }
          ]
        }
      }
    },
    {
      "name": "6. Billing Workflow Summary",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "console.log('ðŸŽ‰ BILLING WORKFLOW COMPLETE! ðŸŽ‰');",
              "console.log('');",
              "console.log('ðŸ“Š Billing Workflow Summary:');",
              "console.log('âœ… Dashboard: Loaded');",
              "console.log('âœ… Plans: Retrieved');",
              "console.log('âœ… Usage Stats: Retrieved');",
              "console.log('âœ… Billing History: Retrieved');",
              "console.log('');",
              "console.log('ðŸ’¡ Next Actions Available:');",
              "console.log('- Change subscription plan');",
              "console.log('- Monitor usage overages');",
              "console.log('- Download invoices');",
              "console.log('- Set up billing alerts');",
              "",
              "pm.test('Billing workflow completed', function () {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "postman.setNextRequest(null);"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/billing/subscription",
          "host": ["{{baseUrl}}"],
          "path": ["billing", "subscription"]
        }
      }
    }
  ]
}